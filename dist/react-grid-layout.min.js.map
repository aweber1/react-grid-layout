{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-grid-layout.min.js","webpack:///webpack/bootstrap 6953feaa647b82e987d4","webpack:///E:/DEV/OpenSource/react-grid-layout/index-dev.js","webpack:///external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/utils.js","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/mixins/PureDeepRenderMixin.js","webpack:///./~/object-assign/index.js","webpack:///./~/react/lib/Object.assign.js","webpack:///./~/react/lib/warning.js","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/ReactGridLayout.jsx","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/mixins/WidthListeningMixin.js","webpack:///./~/react-draggable/index.js","webpack:///./~/react-resizable/build/Resizable.js","webpack:///./~/react/lib/ReactComponentWithPureRenderMixin.js","webpack:///./~/react/lib/emptyFunction.js","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/GridItem.jsx","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/ResponsiveReactGridLayout.jsx","webpack:///E:/DEV/OpenSource/react-grid-layout/lib/responsiveUtils.js","webpack:///./~/deep-equal/index.js","webpack:///./~/deep-equal/lib/is_arguments.js","webpack:///./~/deep-equal/lib/keys.js","webpack:///./~/react-draggable/lib/draggable.js","webpack:///./~/react-draggable/lib/getPrefix.js","webpack:///./~/react-draggable/~/classnames/index.js","webpack:///./~/react-draggable/~/object-assign/index.js","webpack:///./~/react-resizable/build/ResizableBox.js","webpack:///./~/react-resizable/build/cloneElement.js","webpack:///./~/react-resizable/index.js","webpack:///./~/react/lib/ReactContext.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react/lib/ReactPropTransferer.js","webpack:///./~/react/lib/cloneWithProps.js","webpack:///./~/react/lib/emptyObject.js","webpack:///./~/react/lib/joinClasses.js","webpack:///./~/react/lib/keyOf.js","webpack:///./~/react/lib/shallowEqual.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Responsive","assign","utils","bottom","layout","bottomY","max","i","len","length","y","h","clone","obj","collides","l1","l2","x","w","compact","verticalCompact","compareWith","getStatics","out","sorted","sortLayoutItemsByRowCol","l","compactItem","push","indexOf","moved","getFirstCollision","correctBounds","bounds","collidesWith","cols","getLayoutItem","layoutItem","getAllCollisions","moveElement","isUserAction","movingUp","undefined","reverse","collisions","collision","moveElementAwayFromCollision","itemToMove","fakeItem","Math","perc","num","setTransform","style","coords","replace","transform","WebkitTransform","MozTransform","msTransform","OTransform","concat","sort","a","b","synchronizeLayoutWithChildren","initialLayout","children","Array","isArray","child","exists","key","g","props","_grid","validateLayout","min","contextName","subProps","Error","j","deepEqual","PureDeepRenderMixin","shouldComponentUpdate","nextProps","nextState","state","ToObject","val","TypeError","Object","target","source","from","keys","to","s","arguments","sources","hasOwnProperty","prototype","nextIndex","nextSource","emptyFunction","warning","_objectWithoutProperties","_extends","React","GridItem","WidthListeningMixin","ReactGridLayout","createClass","displayName","mixins","propTypes","autoSize","PropTypes","bool","number","draggableCancel","string","draggableHandle","propName","componentName","layouts","margin","array","rowHeight","isDraggable","isResizable","useCSSTransforms","onLayoutChange","func","onDragStart","onDrag","onDragStop","onResizeStart","onResize","onResizeStop","node","apply","Children","forEach","list","getDefaultProps","getInitialState","activeDrag","isMounted","width","initialWidth","oldDragItem","oldResizeItem","componentDidMount","setState","componentWillReceiveProps","onWidthChange","JSON","stringify","componentDidUpdate","prevProps","prevState","containerHeight","_ref","e","element","position","_ref2","oldL","placeholder","_ref3","_ref4","size","_ref5","_ref6","createElement","isPlaceholder","className","containerWidth","processGridItem","draggable","resizable","moveOnStartChange","cancel","handle","usePercentages","render","_props","height","map","listenToWindowResize","window","addEventListener","onWindowResize","componentWillUnmount","removeEventListener","getDOMNode","offsetWidth","calcWH","initialHeight","left","top","Draggable","PureRenderMixin","cloneElement","isRequired","handleSize","draggableOpts","object","constraintsToBounds","resizing","refs","resetState","mins","minConstraints","maxes","maxConstraints","Infinity","right","resizeHandler","handlerName","me","ref","onStop","onStart","shallowEqual","ReactComponentWithPureRenderMixin","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","constraintError","name","cloneWithProps","Resizable","minW","maxW","minH","maxH","calcPosition","calcXY","round","floor","createStyle","pos","mixinDraggable","start","onDragHandler","mixinResizable","maxWidth","onResizeHandler","_me$calcXY","_me$calcWH","join","responsiveUtils","ResponsiveReactGridLayout","breakpoint","breakpoints","k","onBreakpointChange","lg","md","sm","xs","xxs","getBreakpointFromWidth","getColsFromBreakpoint","findOrGenerateResponsiveLayout","newLayout","verticalLayout","newState","parse","sortBreakpoints","matching","breakpointName","lastBreakpoint","breakpointsSorted","breakpointsAbove","slice","isUndefinedOrNull","value","isBuffer","copy","objEquiv","opts","isArguments","pSlice","ka","objectKeys","kb","actual","expected","Date","getTime","strict","supported","toString","unsupported","propertyIsEnumerable","supportsArgumentsClass","shim","createUIEvent","_pendingState","clientY","clientX","canDragX","axis","canDragY","isFunction","findInArray","callback","matchesSelector","el","selector","matchesSelectorFunc","method","getControlPosition","targetTouches","addEvent","event","handler","attachEvent","removeEvent","detachEvent","outerHeight","clientHeight","computedStyle","getComputedStyle","int","borderTopWidth","borderBottomWidth","outerWidth","clientWidth","borderLeftWidth","borderRightWidth","innerHeight","paddingTop","paddingBottom","innerWidth","paddingLeft","paddingRight","isNum","isNaN","parseInt","getBoundPosition","parent","parentNode","nodeStyle","parentStyle","offsetLeft","marginLeft","offsetTop","marginTop","snapToGrid","grid","pendingX","pendingY","addUserSelectStyles","enableUserSelectHack","document","body","getAttribute","setAttribute","userSelectStyle","removeUserSelectStyles","createCSSTransform","browserPrefix","createSVGTransform","args","classNames","eventsFor","touch","move","end","mouse","dragEventFor","toLowerCase","oneOf","oneOfType","shape","Number","arrayOf","zIndex","onMouseDown","newProps","findDOMNode","SVGElement","isElementSVG","handleDrag","handleDragEnd","NaN","currentState","dragging","offsetX","offsetY","handleDragStart","touchIdentifier","identifier","shouldStart","dragPoint","scrollX","scrollLeft","scrollY","scrollTop","handleScroll","changedTouches","shouldUpdate","ev","preventDefault","onTouchStart","childStyle","svgTransform","touchHacks","touchAction","react-draggable-dragging","react-draggable-dragged","dragged","only","onMouseUp","onTouchEnd","styles","documentElement","pre","match","OLink","toUpperCase","__WEBPACK_AMD_DEFINE_RESULT__","classes","argType","hasOwn","substr","toObject","propIsEnumerable","symbols","getOwnPropertySymbols","_slicedToArray","arr","Symbol","iterator","_arr","_n","_d","_e","_s","_i","next","done","err","lockAspectRatio","aspectRatio","_this","widthChanged","heightChanged","_preserveAspectRatio","preserveAspectRatio","_preserveAspectRatio2","ResizableBox","emptyObject","ReactContext","current","withContext","newContext","scopedCallback","result","previousContext","ReactCurrentOwner","RESERVED_PROPS","ReactElement","type","owner","context","_owner","_context","_isReactElement","config","childrenLength","childArray","defaultProps","createFactory","bind","cloneAndReplaceProps","oldElement","newElement","isValidElement","isElement","createTransferStrategy","mergeStrategy","transferInto","thisKey","transferStrategy","TransferStrategies","joinClasses","transferStrategyMerge","ReactPropTransferer","mergeProps","oldProps","CHILDREN_PROP","keyOf","nextClass","argLength","ii","oneKeyObj","objA","objB"],"mappings":"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","file":"react-grid-layout.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactGridLayout\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactGridLayout\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactGridLayout\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactGridLayout\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(7);\n\tmodule.exports.Responsive = __webpack_require__(14);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(4);\n\t\n\tvar utils = module.exports = {\n\t\n\t  /**\r\n\t   * Return the bottom coordinate of the layout.\r\n\t   *\r\n\t   * @param  {Array} layout Layout array.\r\n\t   * @return {Number}       Bottom coordinate.\r\n\t   */\n\t  bottom: function bottom(layout) {\n\t    var max = 0,\n\t        bottomY;\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      bottomY = layout[i].y + layout[i].h;\n\t      if (bottomY > max) max = bottomY;\n\t    }\n\t    return max;\n\t  },\n\t\n\t  /**\r\n\t   * Clones a shallow object.\r\n\t   * @param  {Object} obj Object to clone.\r\n\t   * @return {Object}   Cloned object.\r\n\t   */\n\t  clone: function clone(obj) {\n\t    return assign({}, obj);\n\t  },\n\t\n\t  /**\r\n\t   * Given two layouts, check if they collide.\r\n\t   *\r\n\t   * @param  {Object} l1 Layout object.\r\n\t   * @param  {Object} l2 Layout object.\r\n\t   * @return {Boolean}   True if colliding.\r\n\t   */\n\t  collides: function collides(l1, l2) {\n\t    if (l1 === l2) return false; // same element\n\t    if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\n\t    if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\n\t    if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\n\t    if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\n\t    return true; // boxes overlap\n\t  },\n\t\n\t  /**\r\n\t   * Given a layout, compact it. This involves going down each y coordinate and removing gaps\r\n\t   * between items.\r\n\t   *\r\n\t   * @param  {Array} layout Layout.\r\n\t   * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n\t   *   vertically.\r\n\t   * @return {Array}       Compacted Layout.\r\n\t   */\n\t  compact: function compact(layout, verticalCompact) {\n\t    // Statics go in the compareWith array right away so items flow around them.\n\t    var compareWith = utils.getStatics(layout),\n\t        out = [];\n\t    // We go through the items by row and column.\n\t    var sorted = utils.sortLayoutItemsByRowCol(layout);\n\t\n\t    for (var i = 0, len = sorted.length; i < len; i++) {\n\t      var l = sorted[i];\n\t\n\t      // Don't move static elements\n\t      if (!l['static']) {\n\t        l = utils.compactItem(compareWith, l, verticalCompact);\n\t\n\t        // Add to comparison array. We only collide with items before this one.\n\t        // Statics are already in this array.\n\t        compareWith.push(l);\n\t      }\n\t\n\t      // Add to output array to make sure they still come out in the right order.\n\t      out[layout.indexOf(l)] = l;\n\t\n\t      // Clear moved flag, if it exists.\n\t      delete l.moved;\n\t    }\n\t\n\t    return out;\n\t  },\n\t\n\t  compactItem: function compactItem(compareWith, l, verticalCompact) {\n\t    if (verticalCompact) {\n\t      // Move the element up as far as it can go without colliding.\n\t      while (l.y > 0 && !utils.getFirstCollision(compareWith, l)) {\n\t        l.y--;\n\t      }\n\t    }\n\t\n\t    // Move it down, and keep moving it down if it's colliding.\n\t    var collides;\n\t    while (collides = utils.getFirstCollision(compareWith, l)) {\n\t      l.y = collides.y + collides.h;\n\t    }\n\t    return l;\n\t  },\n\t\n\t  /**\r\n\t   * Given a layout, make sure all elements fit within its bounds.\r\n\t   *\r\n\t   * @param  {Array} layout Layout array.\r\n\t   * @param  {Number} bounds Number of columns.\r\n\t   * @return {[type]}        [description]\r\n\t   */\n\t  correctBounds: function correctBounds(layout, bounds) {\n\t    var collidesWith = utils.getStatics(layout);\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      var l = layout[i];\n\t      // Overflows right\n\t      if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\n\t      // Overflows left\n\t      if (l.x < 0) {\n\t        l.x = 0;\n\t        l.w = bounds.cols;\n\t      }\n\t      if (!l['static']) collidesWith.push(l);else {\n\t        // If this is static and collides with other statics, we must move it down.\n\t        // We have to do something nicer than just letting them overlap.\n\t        while (utils.getFirstCollision(collidesWith, l)) {\n\t          l.y++;\n\t        }\n\t      }\n\t    }\n\t    return layout;\n\t  },\n\t\n\t  /**\r\n\t   * Get a layout item by ID. Used so we can override later on if necessary.\r\n\t   *\r\n\t   * @param  {Array}  layout Layout array.\r\n\t   * @param  {Number} id     ID\r\n\t   * @return {LayoutItem}    Item at ID.\r\n\t   */\n\t  getLayoutItem: function getLayoutItem(layout, id) {\n\t    id = \"\" + id;\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      if (\"\" + layout[i].i === id) return layout[i];\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Returns the first item this layout collides with.\r\n\t   * It doesn't appear to matter which order we approach this from, although\r\n\t   * perhaps that is the wrong thing to do.\r\n\t   *\r\n\t   * @param  {Object} layoutItem Layout item.\r\n\t   * @return {Object|undefined}  A colliding layout item, or undefined.\r\n\t   */\n\t  getFirstCollision: function getFirstCollision(layout, layoutItem) {\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      if (utils.collides(layout[i], layoutItem)) return layout[i];\n\t    }\n\t  },\n\t\n\t  getAllCollisions: function getAllCollisions(layout, layoutItem) {\n\t    var out = [];\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      if (utils.collides(layout[i], layoutItem)) out.push(layout[i]);\n\t    }\n\t    return out;\n\t  },\n\t\n\t  /**\r\n\t   * Get all static elements.\r\n\t   * @param  {Array} layout Array of layout objects.\r\n\t   * @return {Array}        Array of static layout items..\r\n\t   */\n\t  getStatics: function getStatics(layout) {\n\t    var out = [];\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      if (layout[i]['static']) out.push(layout[i]);\n\t    }\n\t    return out;\n\t  },\n\t\n\t  /**\r\n\t   * Move an element. Responsible for doing cascading movements of other elements.\r\n\t   *\r\n\t   * @param  {Array}      layout Full layout to modify.\r\n\t   * @param  {LayoutItem} l      element to move.\r\n\t   * @param  {Number}     [x]    X position in grid units.\r\n\t   * @param  {Number}     [y]    Y position in grid units.\r\n\t   * @param  {Boolean}    [isUserAction] If true, designates that the item we're moving is\r\n\t   *                                     being dragged/resized by th euser.\r\n\t   */\n\t  moveElement: function moveElement(layout, l, x, y, isUserAction) {\n\t    if (l['static']) return layout;\n\t\n\t    // Short-circuit if nothing to do.\n\t    if (l.y === y && l.x === x) return layout;\n\t\n\t    var movingUp = l.y > y;\n\t    // This is quite a bit faster than extending the object\n\t    if (x !== undefined) l.x = x;\n\t    if (y !== undefined) l.y = y;\n\t    l.moved = true;\n\t\n\t    // If this collides with anything, move it.\n\t    // When doing this comparison, we have to sort the items we compare with\n\t    // to ensure, in the case of multiple collisions, that we're getting the\n\t    // nearest collision.\n\t    var sorted = utils.sortLayoutItemsByRowCol(layout);\n\t    if (movingUp) sorted = sorted.reverse();\n\t    var collisions = utils.getAllCollisions(sorted, l);\n\t\n\t    // Move each item that collides away from this element.\n\t    for (var i = 0, len = collisions.length; i < len; i++) {\n\t      var collision = collisions[i];\n\t      // console.log('resolving collision between', l.i, 'at', l.y, 'and', collision.i, 'at', collision.y);\n\t\n\t      // Short circuit so we can't infinite loop\n\t      if (collision.moved) continue;\n\t\n\t      // This makes it feel a bit more precise by waiting to swap for just a bit when moving up.\n\t      if (l.y > collision.y && l.y - collision.y > collision.h / 4) continue;\n\t\n\t      // Don't move static items - we have to move *this* element away\n\t      if (collision['static']) {\n\t        layout = utils.moveElementAwayFromCollision(layout, collision, l, isUserAction);\n\t      } else {\n\t        layout = utils.moveElementAwayFromCollision(layout, l, collision, isUserAction);\n\t      }\n\t    }\n\t\n\t    return layout;\n\t  },\n\t\n\t  /**\r\n\t   * This is where the magic needs to happen - given a collision, move an element away from the collision.\r\n\t   * We attempt to move it up if there's room, otherwise it goes below.\r\n\t   *\r\n\t   * @param  {Array} layout            Full layout to modify.\r\n\t   * @param  {LayoutItem} collidesWith Layout item we're colliding with.\r\n\t   * @param  {LayoutItem} itemToMove   Layout item we're moving.\r\n\t   * @param  {Boolean} [isUserAction]  If true, designates that the item we're moving is being dragged/resized\r\n\t   *                                   by the user.\r\n\t   */\n\t  moveElementAwayFromCollision: function moveElementAwayFromCollision(layout, collidesWith, itemToMove, isUserAction) {\n\t\n\t    // If there is enough space above the collision to put this element, move it there.\n\t    // We only do this on the main collision as this can get funky in cascades and cause\n\t    // unwanted swapping behavior.\n\t    if (isUserAction) {\n\t      // Make a mock item so we don't modify the item here, only modify in moveElement.\n\t      var fakeItem = {\n\t        x: itemToMove.x,\n\t        y: itemToMove.y,\n\t        w: itemToMove.w,\n\t        h: itemToMove.h\n\t      };\n\t      fakeItem.y = Math.max(collidesWith.y - itemToMove.h, 0);\n\t      if (!utils.getFirstCollision(layout, fakeItem)) {\n\t        return utils.moveElement(layout, itemToMove, undefined, fakeItem.y);\n\t      }\n\t    }\n\t\n\t    // Previously this was optimized to move below the collision directly, but this can cause problems\n\t    // with cascading moves, as an item may actually leapflog a collision and cause a reversal in order.\n\t    return utils.moveElement(layout, itemToMove, undefined, itemToMove.y + 1);\n\t  },\n\t\n\t  /**\r\n\t   * Helper to convert a number to a percentage string.\r\n\t   *\r\n\t   * @param  {Number} num Any number\r\n\t   * @return {String}     That number as a percentage.\r\n\t   */\n\t  perc: function perc(num) {\n\t    return num * 100 + '%';\n\t  },\n\t\n\t  setTransform: function setTransform(style, coords) {\n\t    // Replace unitless items with px\n\t    var x = ('' + coords[0]).replace(/(\\d)$/, '$1px');\n\t    var y = ('' + coords[1]).replace(/(\\d)$/, '$1px');\n\t    style.transform = \"translate(\" + x + \",\" + y + \")\";\n\t    style.WebkitTransform = \"translate(\" + x + \",\" + y + \")\";\n\t    style.MozTransform = \"translate(\" + x + \",\" + y + \")\";\n\t    style.msTransform = \"translate(\" + x + \",\" + y + \")\";\n\t    style.OTransform = \"translate(\" + x + \",\" + y + \")\";\n\t    return style;\n\t  },\n\t\n\t  /**\r\n\t   * Get layout items sorted from top left to right and down.\r\n\t   *\r\n\t   * @return {Array} Array of layout objects.\r\n\t   * @return {Array}        Layout, sorted static items first.\r\n\t   */\n\t  sortLayoutItemsByRowCol: function sortLayoutItemsByRowCol(layout) {\n\t    return [].concat(layout).sort(function (a, b) {\n\t      if (a.y > b.y || a.y === b.y && a.x > b.x) {\n\t        return 1;\n\t      }\n\t      return -1;\n\t    });\n\t  },\n\t\n\t  /**\r\n\t   * Generate a layout using the initialLayout and children as a template.\r\n\t   * Missing entries will be added, extraneous ones will be truncated.\r\n\t   *\r\n\t   * @param  {Array}  initialLayout Layout passed in through props.\r\n\t   * @param  {String} breakpoint    Current responsive breakpoint.\r\n\t   * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n\t   *   vertically.\r\n\t   * @return {Array}                Working layout.\r\n\t   */\n\t  synchronizeLayoutWithChildren: function synchronizeLayoutWithChildren(initialLayout, children, cols, verticalCompact) {\n\t    // ensure 'children' is always an array\n\t    if (!Array.isArray(children)) {\n\t      children = [children];\n\t    }\n\t    initialLayout = initialLayout || [];\n\t\n\t    // Generate one layout item per child.\n\t    var layout = [];\n\t    for (var i = 0, len = children.length; i < len; i++) {\n\t      var child = children[i];\n\t      // Don't overwrite if it already exists.\n\t      var exists = utils.getLayoutItem(initialLayout, child.key);\n\t      if (exists) {\n\t        // Ensure 'i' is always a string\n\t        exists.i = '' + exists.i;\n\t        layout.push(exists);\n\t        continue;\n\t      }\n\t      // New item: attempt to use a layout item from the child, if it exists.\n\t      var g = child.props._grid;\n\t      if (g) {\n\t        utils.validateLayout([g], 'ReactGridLayout.child');\n\t        // Validated; add it to the layout. Bottom 'y' possible is the bottom of the layout.\n\t        // This allows you to do nice stuff like specify {y: Infinity}\n\t        if (verticalCompact) {\n\t          layout.push(assign({}, g, { y: Math.min(utils.bottom(layout), g.y), i: child.key }));\n\t        } else {\n\t          layout.push(assign({}, g, { y: g.y, i: child.key }));\n\t        }\n\t      } else {\n\t        // Nothing provided: ensure this is added to the bottom\n\t        layout.push({ w: 1, h: 1, x: 0, y: utils.bottom(layout), i: child.key });\n\t      }\n\t    }\n\t\n\t    // Correct the layout.\n\t    layout = utils.correctBounds(layout, { cols: cols });\n\t    layout = utils.compact(layout, verticalCompact);\n\t\n\t    return layout;\n\t  },\n\t\n\t  /**\r\n\t   * Validate a layout. Throws errors.\r\n\t   *\r\n\t   * @param  {Array}  layout        Array of layout items.\r\n\t   * @param  {String} [contextName] Context name for errors.\r\n\t   * @throw  {Error}                Validation error.\r\n\t   */\n\t  validateLayout: function validateLayout(layout, contextName) {\n\t    contextName = contextName || \"Layout\";\n\t    var subProps = ['x', 'y', 'w', 'h'];\n\t    if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\n\t    for (var i = 0, len = layout.length; i < len; i++) {\n\t      for (var j = 0; j < subProps.length; j++) {\n\t        if (typeof layout[i][subProps[j]] !== 'number') {\n\t          throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].' + subProps[j] + ' must be a Number!');\n\t        }\n\t      }\n\t      if (layout[i]['static'] !== undefined && typeof layout[i]['static'] !== 'boolean') {\n\t        throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].static must be a Boolean!');\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar deepEqual = __webpack_require__(16);\n\t\n\t// Like PureRenderMixin, but with deep comparisons.\n\tvar PureDeepRenderMixin = {\n\t  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n\t    return !deepEqual(this.props, nextProps) || !deepEqual(this.state, nextState);\n\t  }\n\t};\n\t\n\tmodule.exports = PureDeepRenderMixin;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction ToObject(val) {\n\t\tif (val == null) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tmodule.exports = Object.assign || function (target, source) {\n\t\tvar from;\n\t\tvar keys;\n\t\tvar to = ToObject(target);\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = arguments[s];\n\t\t\tkeys = Object.keys(Object(from));\n\t\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tto[keys[i]] = from[keys[i]];\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Object.assign\n\t */\n\t\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\t\n\t'use strict';\n\t\n\tfunction assign(target, sources) {\n\t  if (target == null) {\n\t    throw new TypeError('Object.assign target cannot be null or undefined');\n\t  }\n\t\n\t  var to = Object(target);\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t    var nextSource = arguments[nextIndex];\n\t    if (nextSource == null) {\n\t      continue;\n\t    }\n\t\n\t    var from = Object(nextSource);\n\t\n\t    // We don't currently support accessors nor proxies. Therefore this\n\t    // copy cannot throw. If we ever supported this then we must handle\n\t    // exceptions and side-effects. We don't support symbols so they won't\n\t    // be transferred.\n\t\n\t    for (var key in from) {\n\t      if (hasOwnProperty.call(from, key)) {\n\t        to[key] = from[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return to;\n\t}\n\t\n\tmodule.exports = assign;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule warning\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar emptyFunction = __webpack_require__(12);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n\t    if (format === undefined) {\n\t      throw new Error(\n\t        '`warning(condition, format, ...args)` requires a warning ' +\n\t        'message argument'\n\t      );\n\t    }\n\t\n\t    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n\t      throw new Error(\n\t        'The warning format should be able to uniquely identify this ' +\n\t        'warning. Please, use a more descriptive format than: ' + format\n\t      );\n\t    }\n\t\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\t\n\t    if (!condition) {\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n\t      console.warn(message);\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch(x) {}\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = warning;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar React = __webpack_require__(1);\n\tvar GridItem = __webpack_require__(13);\n\tvar utils = __webpack_require__(2);\n\tvar PureDeepRenderMixin = __webpack_require__(3);\n\tvar WidthListeningMixin = __webpack_require__(8);\n\t\n\t/**\r\n\t * A reactive, fluid grid layout with draggable, resizable components.\r\n\t */\n\tvar ReactGridLayout = React.createClass({\n\t  displayName: 'ReactGridLayout',\n\t\n\t  mixins: [PureDeepRenderMixin, WidthListeningMixin],\n\t\n\t  propTypes: {\n\t    //\n\t    // Basic props\n\t    //\n\t\n\t    // If true, the container height swells and contracts to fit contents\n\t    autoSize: React.PropTypes.bool,\n\t    // # of cols.\n\t    cols: React.PropTypes.number,\n\t\n\t    // A selector that will not be draggable.\n\t    draggableCancel: React.PropTypes.string,\n\t    // A selector for the draggable handler\n\t    draggableHandle: React.PropTypes.string,\n\t\n\t    // If true, the layout will compact vertically\n\t    verticalCompact: React.PropTypes.bool,\n\t\n\t    // layout is an array of object with the format:\n\t    // {x: Number, y: Number, w: Number, h: Number, i: Number}\n\t    layout: function layout(props, propName, componentName) {\n\t      var layout = props.layout;\n\t      // I hope you're setting the _grid property on the grid items\n\t      if (layout === undefined) return;\n\t      utils.validateLayout(layout, 'layout');\n\t    },\n\t\n\t    layouts: function layouts(props, propName, componentName) {\n\t      if (props.layouts) {\n\t        throw new Error(\"ReactGridLayout does not use `layouts`: Use ReactGridLayout.Responsive.\");\n\t      }\n\t    },\n\t\n\t    // margin between items [x, y] in px\n\t    margin: React.PropTypes.array,\n\t    // Rows have a static height, but you can change this based on breakpoints if you like\n\t    rowHeight: React.PropTypes.number,\n\t\n\t    //\n\t    // Flags\n\t    //\n\t    isDraggable: React.PropTypes.bool,\n\t    isResizable: React.PropTypes.bool,\n\t    // Use CSS transforms instead of top/left\n\t    useCSSTransforms: React.PropTypes.bool,\n\t\n\t    //\n\t    // Callbacks\n\t    //\n\t\n\t    // Callback so you can save the layout.\n\t    // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n\t    onLayoutChange: React.PropTypes.func,\n\t\n\t    // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e).\n\t    // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\n\t    onDragStart: React.PropTypes.func,\n\t    // Calls on each drag movement.\n\t    onDrag: React.PropTypes.func,\n\t    // Calls when drag is complete.\n\t    onDragStop: React.PropTypes.func,\n\t    //Calls when resize starts.\n\t    onResizeStart: React.PropTypes.func,\n\t    // Calls when resize movement happens.\n\t    onResize: React.PropTypes.func,\n\t    // Calls when resize is complete.\n\t    onResizeStop: React.PropTypes.func,\n\t\n\t    //\n\t    // Other validations\n\t    //\n\t\n\t    // Children must not have duplicate keys.\n\t    children: function children(props, propName, componentName) {\n\t      React.PropTypes.node.apply(this, arguments);\n\t      var children = props[propName];\n\t\n\t      // Check children keys for duplicates. Throw if found.\n\t      var keys = {};\n\t      React.Children.forEach(children, function (child, i, list) {\n\t        if (keys[child.key]) {\n\t          throw new Error(\"Duplicate child key found! This will cause problems in ReactGridLayout.\");\n\t        }\n\t        keys[child.key] = true;\n\t      });\n\t    }\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      autoSize: true,\n\t      cols: 12,\n\t      rowHeight: 150,\n\t      layout: [],\n\t      margin: [10, 10],\n\t      isDraggable: true,\n\t      isResizable: true,\n\t      useCSSTransforms: true,\n\t      verticalCompact: true,\n\t      onLayoutChange: function onLayoutChange() {},\n\t      onDragStart: function onDragStart() {},\n\t      onDrag: function onDrag() {},\n\t      onDragStop: function onDragStop() {},\n\t      onResizeStart: function onResizeStart() {},\n\t      onResize: function onResize() {},\n\t      onResizeStop: function onResizeStop() {}\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      activeDrag: null,\n\t      isMounted: false,\n\t      layout: utils.synchronizeLayoutWithChildren(this.props.layout, this.props.children, this.props.cols, this.props.verticalCompact),\n\t      width: this.props.initialWidth,\n\t      oldDragItem: null,\n\t      oldResizeItem: null\n\t    };\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    // Call back with layout on mount. This should be done after correcting the layout width\n\t    // to ensure we don't rerender with the wrong width.\n\t    this.props.onLayoutChange(this.state.layout);\n\t    this.setState({ isMounted: true });\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    // This allows you to set the width manually if you like.\n\t    // Use manual width changes in combination with `listenToWindowResize: false`\n\t    if (nextProps.width !== this.props.width) this.onWidthChange(nextProps.width);\n\t\n\t    // If children change, regenerate the layout.\n\t    if (nextProps.children.length !== this.props.children.length) {\n\t      this.setState({\n\t        layout: utils.synchronizeLayoutWithChildren(this.state.layout, nextProps.children, nextProps.cols, this.props.verticalCompact)\n\t      });\n\t    }\n\t\n\t    // Allow parent to set layout directly.\n\t    if (nextProps.layout && JSON.stringify(nextProps.layout) !== JSON.stringify(this.state.layout)) {\n\t      this.setState({\n\t        layout: utils.synchronizeLayoutWithChildren(nextProps.layout, nextProps.children, nextProps.cols, this.props.verticalCompact)\n\t      });\n\t    }\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {\n\t    // Call back so we can store the layout\n\t    // Do it only when a resize/drag is not active, otherwise there are way too many callbacks\n\t    if (this.state.layout !== prevState.layout && !this.state.activeDrag) {\n\t      this.props.onLayoutChange(this.state.layout, this.state.layouts);\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Calculates a pixel value for the container.\r\n\t   * @return {String} Container height in pixels.\r\n\t   */\n\t  containerHeight: function containerHeight() {\n\t    if (!this.props.autoSize) return;\n\t    return utils.bottom(this.state.layout) * this.props.rowHeight + this.props.margin[1] + 'px';\n\t  },\n\t\n\t  /**\r\n\t   * When the width changes, save it to state. This helps with left/width calculations.\r\n\t   */\n\t  onWidthChange: function onWidthChange(width) {\n\t    this.setState({ width: width });\n\t  },\n\t\n\t  /**\r\n\t   * When dragging starts\r\n\t   * @param {Number} i Index of the child\r\n\t   * @param {Number} x X position of the move\r\n\t   * @param {Number} y Y position of the move\r\n\t   * @param {Event} e The mousedown event\r\n\t   * @param {Element} element The current dragging DOM element\r\n\t   * @param {Object} position Drag information\r\n\t   */\n\t  onDragStart: function onDragStart(i, x, y, _ref) {\n\t    var e = _ref.e;\n\t    var element = _ref.element;\n\t    var position = _ref.position;\n\t\n\t    var layout = this.state.layout;\n\t    var l = utils.getLayoutItem(layout, i);\n\t\n\t    this.setState({ oldDragItem: utils.clone(l) });\n\t\n\t    this.props.onDragStart(layout, l, l, null, e);\n\t  },\n\t  /**\r\n\t   * Each drag movement create a new dragelement and move the element to the dragged location\r\n\t   * @param {Number} i Index of the child\r\n\t   * @param {Number} x X position of the move\r\n\t   * @param {Number} y Y position of the move\r\n\t   * @param {Event} e The mousedown event\r\n\t   * @param {Element} element The current dragging DOM element\r\n\t   * @param {Object} position Drag information\r\n\t   */\n\t  onDrag: function onDrag(i, x, y, _ref2) {\n\t    var e = _ref2.e;\n\t    var element = _ref2.element;\n\t    var position = _ref2.position;\n\t\n\t    var layout = this.state.layout;\n\t    var l = utils.getLayoutItem(layout, i);\n\t    var oldL = this.state.oldDragItem;\n\t\n\t    // Create placeholder (display only)\n\t    var placeholder = {\n\t      w: l.w, h: l.h, x: l.x, y: l.y, placeholder: true, i: i\n\t    };\n\t\n\t    // Move the element to the dragged location.\n\t    layout = utils.moveElement(layout, l, x, y, true /* isUserAction */);\n\t\n\t    this.props.onDrag(layout, oldL, l, placeholder, e);\n\t\n\t    this.setState({\n\t      layout: utils.compact(layout, this.props.verticalCompact),\n\t      activeDrag: placeholder\n\t    });\n\t  },\n\t\n\t  /**\r\n\t   * When dragging stops, figure out which position the element is closest to and update its x and y.\r\n\t   * @param  {Number} i Index of the child.\r\n\t   * @param {Number} i Index of the child\r\n\t   * @param {Number} x X position of the move\r\n\t   * @param {Number} y Y position of the move\r\n\t   * @param {Event} e The mousedown event\r\n\t   * @param {Element} element The current dragging DOM element\r\n\t   * @param {Object} position Drag information\r\n\t   */\n\t  onDragStop: function onDragStop(i, x, y, _ref3) {\n\t    var e = _ref3.e;\n\t    var element = _ref3.element;\n\t    var position = _ref3.position;\n\t\n\t    var layout = this.state.layout;\n\t    var l = utils.getLayoutItem(layout, i);\n\t    var oldL = this.state.oldDragItem;\n\t\n\t    // Move the element here\n\t    layout = utils.moveElement(layout, l, x, y, true /* isUserAction */);\n\t\n\t    this.props.onDragStop(layout, oldL, l, null, e);\n\t\n\t    // Set state\n\t    this.setState({\n\t      layout: utils.compact(layout, this.props.verticalCompact),\n\t      activeDrag: null,\n\t      oldDragItem: null\n\t    });\n\t  },\n\t\n\t  onResizeStart: function onResizeStart(i, w, h, _ref4) {\n\t    var e = _ref4.e;\n\t    var element = _ref4.element;\n\t    var size = _ref4.size;\n\t\n\t    var layout = this.state.layout;\n\t    var l = utils.getLayoutItem(layout, i);\n\t\n\t    this.setState({ oldResizeItem: utils.clone(l) });\n\t\n\t    this.props.onResizeStart(layout, l, l, null, e);\n\t  },\n\t\n\t  onResize: function onResize(i, w, h, _ref5) {\n\t    var e = _ref5.e;\n\t    var element = _ref5.element;\n\t    var size = _ref5.size;\n\t\n\t    var layout = this.state.layout;\n\t    var l = utils.getLayoutItem(layout, i);\n\t    var oldL = this.state.oldResizeItem;\n\t\n\t    // Set new width and height.\n\t    l.w = w;\n\t    l.h = h;\n\t\n\t    // Create placeholder element (display only)\n\t    var placeholder = {\n\t      w: w, h: h, x: l.x, y: l.y, placeholder: true, i: i\n\t    };\n\t\n\t    this.props.onResize(layout, oldL, l, placeholder, e);\n\t\n\t    // Re-compact the layout and set the drag placeholder.\n\t    this.setState({ layout: utils.compact(layout, this.props.verticalCompact), activeDrag: placeholder });\n\t  },\n\t\n\t  onResizeStop: function onResizeStop(i, x, y, _ref6) {\n\t    var e = _ref6.e;\n\t    var element = _ref6.element;\n\t    var size = _ref6.size;\n\t\n\t    var layout = this.state.layout;\n\t    var l = utils.getLayoutItem(layout, i);\n\t    var oldL = this.state.oldResizeItem;\n\t\n\t    this.props.onResizeStop(layout, oldL, l, null, e);\n\t\n\t    this.setState({\n\t      layout: utils.compact(layout, this.props.verticalCompact),\n\t      activeDrag: null,\n\t      oldResizeItem: null\n\t    });\n\t  },\n\t\n\t  /**\r\n\t   * Create a placeholder object.\r\n\t   * @return {Element} Placeholder div.\r\n\t   */\n\t  placeholder: function placeholder() {\n\t    if (!this.state.activeDrag) return '';\n\t\n\t    // {...this.state.activeDrag} is pretty slow, actually\n\t    return React.createElement(\n\t      GridItem,\n\t      {\n\t        w: this.state.activeDrag.w,\n\t        h: this.state.activeDrag.h,\n\t        x: this.state.activeDrag.x,\n\t        y: this.state.activeDrag.y,\n\t        i: this.state.activeDrag.i,\n\t        isPlaceholder: true,\n\t        className: 'react-grid-placeholder',\n\t        containerWidth: this.state.width,\n\t        cols: this.props.cols,\n\t        margin: this.props.margin,\n\t        rowHeight: this.props.rowHeight,\n\t        isDraggable: false,\n\t        isResizable: false,\n\t        useCSSTransforms: this.props.useCSSTransforms\n\t      },\n\t      React.createElement('div', null)\n\t    );\n\t  },\n\t\n\t  /**\r\n\t   * Given a grid item, set its style attributes & surround in a <Draggable>.\r\n\t   * @param  {Element} child React element.\r\n\t   * @param  {Number}  i     Index of element.\r\n\t   * @return {Element}       Element wrapped in draggable and properly placed.\r\n\t   */\n\t  processGridItem: function processGridItem(child) {\n\t    var i = child.key;\n\t    var l = utils.getLayoutItem(this.state.layout, i);\n\t\n\t    // watchStart property tells Draggable to react to changes in the start param\n\t    // Must be turned off on the item we're dragging as the changes in `activeDrag` cause rerenders\n\t    var moveOnStartChange = !(this.state.activeDrag && this.state.activeDrag.i === i);\n\t\n\t    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\n\t    var draggable, resizable;\n\t    if (l['static'] || this.props.isDraggable === false) draggable = false;\n\t    if (l['static'] || this.props.isResizable === false) resizable = false;\n\t\n\t    return React.createElement(\n\t      GridItem,\n\t      _extends({\n\t        containerWidth: this.state.width,\n\t        cols: this.props.cols,\n\t        margin: this.props.margin,\n\t        rowHeight: this.props.rowHeight,\n\t        moveOnStartChange: moveOnStartChange,\n\t        cancel: this.props.draggableCancel,\n\t        handle: this.props.draggableHandle,\n\t        onDragStop: this.onDragStop,\n\t        onDragStart: this.onDragStart,\n\t        onDrag: this.onDrag,\n\t        onResizeStart: this.onResizeStart,\n\t        onResize: this.onResize,\n\t        onResizeStop: this.onResizeStop,\n\t        isDraggable: draggable,\n\t        isResizable: resizable,\n\t        useCSSTransforms: this.props.useCSSTransforms && this.state.isMounted,\n\t        usePercentages: !this.state.isMounted\n\t      }, l),\n\t      child\n\t    );\n\t  },\n\t\n\t  render: function render() {\n\t    // Calculate classname\n\t    var _props = this.props;\n\t    var className = _props.className;\n\t\n\t    var props = _objectWithoutProperties(_props, ['className']);\n\t\n\t    className = 'react-grid-layout ' + (className || '');\n\t\n\t    return React.createElement(\n\t      'div',\n\t      _extends({}, props, { className: className, style: { height: this.containerHeight() } }),\n\t      React.Children.map(this.props.children, this.processGridItem),\n\t      this.placeholder()\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = ReactGridLayout;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\t\n\t/**\r\n\t * A simple mixin that provides facility for listening to container resizes.\r\n\t */\n\tvar WidthListeningMixin = {\n\t\n\t  propTypes: {\n\t    // This allows setting this on the server side\n\t    initialWidth: React.PropTypes.number,\n\t\n\t    // If false, you should supply width yourself. Good if you want to debounce resize events\n\t    // or reuse a handler from somewhere else.\n\t    listenToWindowResize: React.PropTypes.bool\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      initialWidth: 1280,\n\t      listenToWindowResize: true\n\t    };\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    if (this.props.listenToWindowResize) {\n\t      window.addEventListener('resize', this.onWindowResize);\n\t      // This is intentional. Once to properly set the breakpoint and resize the elements,\n\t      // and again to compensate for any scrollbar that appeared because of the first step.\n\t      this.onWindowResize();\n\t      this.onWindowResize();\n\t    }\n\t  },\n\t\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    window.removeEventListener('resize', this.onWindowResize);\n\t  },\n\t\n\t  /**\r\n\t   * On window resize, update width.\r\n\t   */\n\t  onWindowResize: function onWindowResize() {\n\t    this.onWidthChange(this.getDOMNode().offsetWidth);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = WidthListeningMixin;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(19);\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar React = __webpack_require__(1);\n\tvar Draggable = __webpack_require__(9);\n\tvar PureRenderMixin = __webpack_require__(11);\n\tvar assign = __webpack_require__(4);\n\tvar cloneElement = __webpack_require__(24);\n\t\n\tvar Resizable = module.exports = React.createClass({\n\t  displayName: 'Resizable',\n\t  mixins: [PureRenderMixin],\n\t\n\t  propTypes: {\n\t    // Require that one and only one child be present.\n\t    children: React.PropTypes.element.isRequired,\n\t    // Functions\n\t    onResizeStop: React.PropTypes.func,\n\t    onResizeStart: React.PropTypes.func,\n\t    onResize: React.PropTypes.func,\n\t\n\t    width: React.PropTypes.number.isRequired,\n\t    height: React.PropTypes.number.isRequired,\n\t    // If you change this, be sure to update your css\n\t    handleSize: React.PropTypes.array,\n\t    // These will be passed wholesale to react-draggable\n\t    draggableOpts: React.PropTypes.object\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      handleSize: [20, 20]\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      bounds: this.constraintsToBounds(),\n\t      initialWidth: this.props.width,\n\t      initialHeight: this.props.height\n\t    };\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(props) {\n\t    if (!this.state.resizing) {\n\t      this.setState({\n\t        initialWidth: props.width,\n\t        initialHeight: props.height,\n\t        bounds: this.constraintsToBounds()\n\t      });\n\t      this.refs.draggable.resetState();\n\t    }\n\t  },\n\t\n\t  constraintsToBounds: function constraintsToBounds() {\n\t    var p = this.props;\n\t    var mins = p.minConstraints || p.handleSize;\n\t    var maxes = p.maxConstraints || [Infinity, Infinity];\n\t    return {\n\t      left: mins[0] - p.width,\n\t      top: mins[1] - p.height,\n\t      right: maxes[0] - p.width,\n\t      bottom: maxes[1] - p.height\n\t    };\n\t  },\n\t\n\t  /**\n\t   * Wrapper around drag events to provide more useful data.\n\t   *\n\t   * @param  {String} handlerName Handler name to wrap.\n\t   * @return {Function}           Handler function.\n\t   */\n\t  resizeHandler: function resizeHandler(handlerName) {\n\t    var me = this;\n\t    return function (e, _ref) {\n\t      var node = _ref.node;\n\t      var position = _ref.position;\n\t\n\t      me.props[handlerName] && me.props[handlerName](e, { node: node, size: calcWH(me.state, position) });\n\t\n\t      if (handlerName === 'onResizeStart') {\n\t        me.setState({ resizing: true });\n\t      } else if (handlerName === 'onResizeStop') {\n\t        me.setState({ resizing: false });\n\t      }\n\t    };\n\t  },\n\t\n\t  render: function render() {\n\t    var p = this.props,\n\t        s = this.state;\n\t\n\t    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n\t    // We are then defining its children as:\n\t    // Its original children (resizable's child's children), and\n\t    // A draggable handle.\n\t    return cloneElement(p.children, assign({}, p, {\n\t      children: [p.children.props.children, React.createElement(\n\t        Draggable,\n\t        _extends({}, p.draggableOpts, {\n\t          ref: 'draggable',\n\t          onStop: this.resizeHandler('onResizeStop'),\n\t          onStart: this.resizeHandler('onResizeStart'),\n\t          onDrag: this.resizeHandler('onResize'),\n\t          bounds: this.state.bounds\n\t        }),\n\t        React.createElement('span', { className: 'react-resizable-handle' })\n\t      )]\n\t    }));\n\t  }\n\t});\n\t\n\t/**\n\t * Parse left and top coordinates.\n\t * @param  {Number} options.left Left coordinate.\n\t * @param  {Number} options.top  Top coordinate.\n\t * @return {Object}              Coordinates\n\t */\n\tfunction calcWH(_ref, _ref2) {\n\t  var initialWidth = _ref.initialWidth;\n\t  var initialHeight = _ref.initialHeight;\n\t  var left = _ref2.left;\n\t  var top = _ref2.top;\n\t\n\t  return { width: initialWidth + left, height: initialHeight + top };\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t* @providesModule ReactComponentWithPureRenderMixin\n\t*/\n\t\n\t'use strict';\n\t\n\tvar shallowEqual = __webpack_require__(34);\n\t\n\t/**\n\t * If your React component's render function is \"pure\", e.g. it will render the\n\t * same result given the same props and state, provide this Mixin for a\n\t * considerable performance boost.\n\t *\n\t * Most React components have pure render functions.\n\t *\n\t * Example:\n\t *\n\t *   var ReactComponentWithPureRenderMixin =\n\t *     require('ReactComponentWithPureRenderMixin');\n\t *   React.createClass({\n\t *     mixins: [ReactComponentWithPureRenderMixin],\n\t *\n\t *     render: function() {\n\t *       return <div className={this.props.className}>foo</div>;\n\t *     }\n\t *   });\n\t *\n\t * Note: This only checks shallow equality for props and state. If these contain\n\t * complex data structures this mixin may have false-negatives for deeper\n\t * differences. Only mixin to components which have simple props and state, or\n\t * use `forceUpdate()` when you know deep data structures have changed.\n\t */\n\tvar ReactComponentWithPureRenderMixin = {\n\t  shouldComponentUpdate: function(nextProps, nextState) {\n\t    return !shallowEqual(this.props, nextProps) ||\n\t           !shallowEqual(this.state, nextState);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactComponentWithPureRenderMixin;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule emptyFunction\n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function() {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tfunction emptyFunction() {}\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function() { return this; };\n\temptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\t\n\tmodule.exports = emptyFunction;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar React = __webpack_require__(1);\n\tvar cloneWithProps = __webpack_require__(30);\n\tvar utils = __webpack_require__(2);\n\tvar Draggable = __webpack_require__(9);\n\tvar Resizable = __webpack_require__(25).Resizable;\n\tvar PureDeepRenderMixin = __webpack_require__(3);\n\t\n\t/**\r\n\t * An individual item within a ReactGridLayout.\r\n\t */\n\tvar GridItem = React.createClass({\n\t  displayName: 'GridItem',\n\t\n\t  mixins: [PureDeepRenderMixin],\n\t\n\t  propTypes: {\n\t    // Children must be only a single element\n\t    children: React.PropTypes.element,\n\t\n\t    // General grid attributes\n\t    cols: React.PropTypes.number.isRequired,\n\t    containerWidth: React.PropTypes.number.isRequired,\n\t    rowHeight: React.PropTypes.number.isRequired,\n\t    margin: React.PropTypes.array.isRequired,\n\t\n\t    // These are all in grid units\n\t    x: React.PropTypes.number.isRequired,\n\t    y: React.PropTypes.number.isRequired,\n\t    w: React.PropTypes.number.isRequired,\n\t    h: React.PropTypes.number.isRequired,\n\t\n\t    // All optional\n\t    minW: function minW(props, propName, componentName) {\n\t      React.PropTypes.number.apply(this, arguments);\n\t      if (props.minW > props.w || props.minW > props.maxW) constraintError('minW', props);\n\t    },\n\t    maxW: function maxW(props, propName, componentName) {\n\t      React.PropTypes.number.apply(this, arguments);\n\t      if (props.maxW < props.w || props.maxW < props.minW) constraintError('maxW', props);\n\t    },\n\t    minH: function minH(props, propName, componentName) {\n\t      React.PropTypes.number.apply(this, arguments);\n\t      if (props.minH > props.h || props.minH > props.maxH) constraintError('minH', props);\n\t    },\n\t    maxH: function maxH(props, propName, componentName) {\n\t      React.PropTypes.number.apply(this, arguments);\n\t      if (props.maxH < props.h || props.maxH < props.minH) constraintError('maxH', props);\n\t    },\n\t\n\t    // ID is nice to have for callbacks\n\t    i: React.PropTypes.string.isRequired,\n\t\n\t    // If true, item will be repositioned when x/y/w/h change\n\t    moveOnStartChange: React.PropTypes.bool,\n\t\n\t    // Functions\n\t    onDragStop: React.PropTypes.func,\n\t    onDragStart: React.PropTypes.func,\n\t    onDrag: React.PropTypes.func,\n\t    onResizeStop: React.PropTypes.func,\n\t    onResizeStart: React.PropTypes.func,\n\t    onResize: React.PropTypes.func,\n\t\n\t    // Flags\n\t    isDraggable: React.PropTypes.bool,\n\t    isResizable: React.PropTypes.bool,\n\t    // Use CSS transforms instead of top/left\n\t    useCSSTransforms: React.PropTypes.bool,\n\t    isPlaceholder: React.PropTypes.bool,\n\t\n\t    // Others\n\t    className: React.PropTypes.string,\n\t    // Selector for draggable handle\n\t    handle: React.PropTypes.string,\n\t    // Selector for draggable cancel (see react-draggable)\n\t    cancel: React.PropTypes.string\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      isDraggable: true,\n\t      isResizable: true,\n\t      useCSSTransforms: true,\n\t      className: '',\n\t      cancel: '',\n\t      minH: 1,\n\t      minW: 1,\n\t      maxH: Infinity,\n\t      maxW: Infinity\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      resizing: false,\n\t      className: ''\n\t    };\n\t  },\n\t\n\t  /**\r\n\t   * Return position on the page given an x, y, w, h.\r\n\t   * left, top, width, height are all in pixels.\r\n\t   * @param  {Number}  x             X coordinate in grid units.\r\n\t   * @param  {Number}  y             Y coordinate in grid units.\r\n\t   * @param  {Number}  w             W coordinate in grid units.\r\n\t   * @param  {Number}  h             H coordinate in grid units.\r\n\t   * @return {Object}                Object containing coords.\r\n\t   */\n\t  calcPosition: function calcPosition(x, y, w, h) {\n\t    var p = this.props;\n\t    var width = p.containerWidth - p.margin[0];\n\t    var out = {\n\t      left: width * (x / p.cols) + p.margin[0],\n\t      top: p.rowHeight * y + p.margin[1],\n\t      width: width * (w / p.cols) - p.margin[0],\n\t      height: h * p.rowHeight - p.margin[1]\n\t    };\n\t    return out;\n\t  },\n\t\n\t  /**\r\n\t   * Translate x and y coordinates from pixels to grid units.\r\n\t   * @param  {Number} options.left  Left offset in pixels.\r\n\t   * @param  {Number} options.top   Top offset in pixels.\r\n\t   * @return {Object}               x and y in grid units.\r\n\t   */\n\t  calcXY: function calcXY(_ref) {\n\t    var left = _ref.left;\n\t    var top = _ref.top;\n\t\n\t    left = left - this.props.margin[0];\n\t    top = top - this.props.margin[1];\n\t    // This is intentional; because so much of the logic on moving boxes up/down relies\n\t    // on an exact y position, we only round the x, not the y.\n\t    var x = Math.round(left / this.props.containerWidth * this.props.cols);\n\t    var y = Math.floor(top / this.props.rowHeight);\n\t    x = Math.max(Math.min(x, this.props.cols), 0);\n\t    y = Math.max(y, 0);\n\t    return { x: x, y: y };\n\t  },\n\t\n\t  /**\r\n\t   * Given a height and width in pixel values, calculate grid units.\r\n\t   * @param  {Number} options.height Height in pixels.\r\n\t   * @param  {Number} options.width  Width in pixels.\r\n\t   * @return {Object}                w, h as grid units.\r\n\t   */\n\t  calcWH: function calcWH(_ref2) {\n\t    var height = _ref2.height;\n\t    var width = _ref2.width;\n\t\n\t    width = width + this.props.margin[0];\n\t    height = height + this.props.margin[1];\n\t    var w = Math.round(width / this.props.containerWidth * this.props.cols);\n\t    var h = Math.round(height / this.props.rowHeight);\n\t    w = Math.max(Math.min(w, this.props.cols - this.props.x), 0);\n\t    h = Math.max(h, 0);\n\t    return { w: w, h: h };\n\t  },\n\t\n\t  /**\r\n\t   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\r\n\t   * well when server rendering, and the only way to do that properly is to use percentage width/left because\r\n\t   * we don't know exactly what the browser viewport is.\r\n\t   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\r\n\t   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\r\n\t   *\r\n\t   * @param  {Object} pos Position object with width, height, left, top.\r\n\t   * @return {Object}     Style object.\r\n\t   */\n\t  createStyle: function createStyle(pos) {\n\t    var style = {\n\t      width: pos.width + 'px',\n\t      height: pos.height + 'px',\n\t      left: pos.left + 'px',\n\t      top: pos.top + 'px',\n\t      position: 'absolute'\n\t    };\n\t\n\t    // This is used for server rendering.\n\t    if (this.props.usePercentages) {\n\t      pos.left = utils.perc(pos.left / this.props.containerWidth);\n\t      style.left = pos.left;\n\t      style.width = utils.perc(pos.width / this.props.containerWidth);\n\t    }\n\t\n\t    // CSS Transforms support\n\t    if (this.props.useCSSTransforms) {\n\t      utils.setTransform(style, [pos.left, pos.top]);\n\t      delete style.left;\n\t      delete style.top;\n\t    }\n\t\n\t    return style;\n\t  },\n\t\n\t  /**\r\n\t   * Mix a Draggable instance into a child.\r\n\t   * @param  {Element} child    Child element.\r\n\t   * @param  {Object} position  Position object (pixel values)\r\n\t   * @return {Element}          Child wrapped in Draggable.\r\n\t   */\n\t  mixinDraggable: function mixinDraggable(child, position) {\n\t    var start = typeof position.left === \"string\" ? undefined : { x: position.left, y: position.top };\n\t    return React.createElement(\n\t      Draggable,\n\t      {\n\t        start: start,\n\t        moveOnStartChange: this.props.moveOnStartChange,\n\t        onStop: this.onDragHandler('onDragStop'),\n\t        onStart: this.onDragHandler('onDragStart'),\n\t        onDrag: this.onDragHandler('onDrag'),\n\t        handle: this.props.handle,\n\t        cancel: \".react-resizable-handle \" + this.props.cancel,\n\t        useCSSTransforms: this.props.useCSSTransforms\n\t      },\n\t      child\n\t    );\n\t  },\n\t\n\t  /**\r\n\t   * Mix a Resizable instance into a child.\r\n\t   * @param  {Element} child    Child element.\r\n\t   * @param  {Object} position  Position object (pixel values)\r\n\t   * @return {Element}          Child wrapped in Resizable.\r\n\t   */\n\t  mixinResizable: function mixinResizable(child, position) {\n\t    var p = this.props;\n\t    // This is the max possible width - doesn't go to infinity because of the width of the window\n\t    var maxWidth = this.calcPosition(0, 0, p.cols - p.x, 0).width;\n\t\n\t    // Calculate min/max constraints using our min & maxes\n\t    var mins = this.calcPosition(0, 0, p.minW, p.minH);\n\t    var maxes = this.calcPosition(0, 0, p.maxW, p.maxH);\n\t    var minConstraints = [mins.width, mins.height];\n\t    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\n\t    return React.createElement(\n\t      Resizable,\n\t      {\n\t        width: position.width,\n\t        height: position.height,\n\t        minConstraints: minConstraints,\n\t        maxConstraints: maxConstraints,\n\t        onResizeStop: this.onResizeHandler('onResizeStop'),\n\t        onResizeStart: this.onResizeHandler('onResizeStart'),\n\t        onResize: this.onResizeHandler('onResize')\n\t      },\n\t      child\n\t    );\n\t  },\n\t\n\t  /**\r\n\t   * Wrapper around drag events to provide more useful data.\r\n\t   * All drag events call the function with the given handler name,\r\n\t   * with the signature (index, x, y).\r\n\t   *\r\n\t   * @param  {String} handlerName Handler name to wrap.\r\n\t   * @return {Function}           Handler function.\r\n\t   */\n\t  onDragHandler: function onDragHandler(handlerName) {\n\t    var me = this;\n\t    return function (e, _ref3) {\n\t      var element = _ref3.element;\n\t      var position = _ref3.position;\n\t\n\t      if (!me.props[handlerName]) return;\n\t      // Get new XY\n\t\n\t      var _me$calcXY = me.calcXY(position);\n\t\n\t      var x = _me$calcXY.x;\n\t      var y = _me$calcXY.y;\n\t\n\t      // Cap x at numCols\n\t      x = Math.min(x, me.props.cols - me.props.w);\n\t\n\t      me.props[handlerName](me.props.i, x, y, { e: e, element: element, position: position });\n\t    };\n\t  },\n\t\n\t  /**\r\n\t   * Wrapper around drag events to provide more useful data.\r\n\t   * All drag events call the function with the given handler name,\r\n\t   * with the signature (index, x, y).\r\n\t   *\r\n\t   * @param  {String} handlerName Handler name to wrap.\r\n\t   * @return {Function}           Handler function.\r\n\t   */\n\t  onResizeHandler: function onResizeHandler(handlerName) {\n\t    var me = this;\n\t    return function (e, _ref4) {\n\t      var element = _ref4.element;\n\t      var size = _ref4.size;\n\t\n\t      if (!me.props[handlerName]) return;\n\t\n\t      // Get new XY\n\t\n\t      var _me$calcWH = me.calcWH(size);\n\t\n\t      var w = _me$calcWH.w;\n\t      var h = _me$calcWH.h;\n\t\n\t      // Cap w at numCols\n\t      w = Math.min(w, me.props.cols - me.props.x);\n\t      // Ensure w is at least 1\n\t      w = Math.max(w, 1);\n\t\n\t      // Min/max capping\n\t      w = Math.max(Math.min(w, me.props.maxW), me.props.minW);\n\t      h = Math.max(Math.min(h, me.props.maxH), me.props.minH);\n\t\n\t      me.setState({ resizing: handlerName === 'onResizeStop' ? null : size });\n\t\n\t      me.props[handlerName](me.props.i, w, h, { e: e, element: element, size: size });\n\t    };\n\t  },\n\t\n\t  render: function render() {\n\t    var p = this.props,\n\t        pos = this.calcPosition(p.x, p.y, p.w, p.h);\n\t    if (this.state.resizing) {\n\t      pos.width = this.state.resizing.width;\n\t      pos.height = this.state.resizing.height;\n\t    }\n\t\n\t    // Create the child element. We clone the existing element but modify its className and style.\n\t    var child = cloneWithProps(this.props.children, {\n\t      // Munge a classname. Use passed in classnames and resizing.\n\t      // React with merge the classNames.\n\t      className: ['react-grid-item', this.props.className, this.state.resizing ? 'resizing' : '', this.props.useCSSTransforms ? 'cssTransforms' : ''].join(' '),\n\t      // We can set the width and height on the child, but unfortunately we can't set the position.\n\t      style: this.createStyle(pos)\n\t    });\n\t\n\t    // Resizable support. This is usually on but the user can toggle it off.\n\t    if (this.props.isResizable) {\n\t      child = this.mixinResizable(child, pos);\n\t    }\n\t\n\t    // Draggable support. This is always on, except for with placeholders.\n\t    if (this.props.isDraggable) {\n\t      child = this.mixinDraggable(child, pos);\n\t    }\n\t\n\t    return child;\n\t  }\n\t});\n\t\n\tfunction constraintError(name, props) {\n\t  delete props.children;\n\t  throw new Error(name + ' overrides contraints on gridItem ' + props.i + '. Full props: ' + JSON.stringify(props));\n\t}\n\t\n\tmodule.exports = GridItem;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar React = __webpack_require__(1);\n\tvar utils = __webpack_require__(2);\n\tvar responsiveUtils = __webpack_require__(15);\n\tvar PureDeepRenderMixin = __webpack_require__(3);\n\tvar WidthListeningMixin = __webpack_require__(8);\n\tvar ReactGridLayout = __webpack_require__(7);\n\t\n\t/**\r\n\t * A wrapper around ReactGridLayout to support responsive breakpoints.\r\n\t */\n\tvar ResponsiveReactGridLayout = React.createClass({\n\t  displayName: 'ResponsiveReactGridLayout',\n\t\n\t  mixins: [PureDeepRenderMixin, WidthListeningMixin],\n\t\n\t  propTypes: {\n\t    //\n\t    // Basic props\n\t    //\n\t\n\t    // Optional, but if you are managing width yourself you may want to set the breakpoint\n\t    // yourself as well.\n\t    breakpoint: React.PropTypes.string,\n\t\n\t    // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n\t    breakpoints: React.PropTypes.object,\n\t\n\t    // # of cols. This is a breakpoint -> cols map\n\t    cols: React.PropTypes.object,\n\t\n\t    // layouts is an object mapping breakpoints to layouts.\n\t    // e.g. {lg: Layout, md: Layout, ...}\n\t    layouts: function layouts(props, propName, componentName) {\n\t      React.PropTypes.object.isRequired.apply(this, arguments);\n\t\n\t      var layouts = props.layouts;\n\t      Object.keys(layouts).map(function (k) {\n\t        utils.validateLayout(layouts[k], 'layouts.' + k);\n\t      });\n\t    },\n\t\n\t    //\n\t    // Callbacks\n\t    //\n\t\n\t    // Calls back with breakpoint and new # cols\n\t    onBreakpointChange: React.PropTypes.func,\n\t\n\t    // Callback so you can save the layout.\n\t    // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n\t    onLayoutChange: React.PropTypes.func\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n\t      cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n\t      layouts: {},\n\t      onBreakpointChange: function onBreakpointChange() {},\n\t      onLayoutChange: function onLayoutChange() {}\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    var breakpoint = this.props.breakpoint || responsiveUtils.getBreakpointFromWidth(this.props.breakpoints, this.props.initialWidth);\n\t    var cols = responsiveUtils.getColsFromBreakpoint(breakpoint, this.props.cols);\n\t\n\t    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n\t    // for this layout.\n\t    var initialLayout = responsiveUtils.findOrGenerateResponsiveLayout(this.props.layouts, this.props.breakpoints, breakpoint, breakpoint, cols, this.props.verticalCompact);\n\t\n\t    return {\n\t      layout: initialLayout,\n\t      // storage for layouts obsoleted by breakpoints\n\t      layouts: this.props.layouts || {},\n\t      breakpoint: breakpoint,\n\t      cols: cols,\n\t      width: this.props.initialWidth\n\t    };\n\t  },\n\t\n\t  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t    // This allows you to set the width manually if you like.\n\t    // Use manual width changes in combination with `listenToWindowResize: false`\n\t    if (nextProps.width) this.onWidthChange(nextProps.width);\n\t\n\t    // Allow parent to set breakpoint directly.\n\t    if (nextProps.breakpoint !== this.props.breakpoint) {\n\t      this.onWidthChange(this.state.width);\n\t    }\n\t\n\t    // Allow parent to set layouts directly.\n\t    if (nextProps.layouts && nextProps.layouts !== this.state.layouts) {\n\t      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n\t      // if one does not exist.\n\t      var newLayout = responsiveUtils.findOrGenerateResponsiveLayout(nextProps.layouts, nextProps.breakpoints, this.state.breakpoint, this.state.breakpoint, this.state.cols, this.props.verticalLayout);\n\t\n\t      this.setState({\n\t        layouts: nextProps.layouts,\n\t        layout: newLayout\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\r\n\t   * Bubble this up, add `layouts` object.\r\n\t   * @param  {Array} layout Layout from inner Grid.\r\n\t   */\n\t  onLayoutChange: function onLayoutChange(layout) {\n\t    this.state.layouts[this.state.breakpoint] = layout;\n\t    this.setState({ layout: layout, layouts: this.state.layouts });\n\t    this.props.onLayoutChange(layout, this.state.layouts);\n\t  },\n\t\n\t  /**\r\n\t   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\r\n\t   * Width changes are necessary to figure out the widget widths.\r\n\t   */\n\t  onWidthChange: function onWidthChange(width) {\n\t    // Set new breakpoint\n\t    var newState = { width: width };\n\t    newState.breakpoint = this.props.breakpoint || responsiveUtils.getBreakpointFromWidth(this.props.breakpoints, newState.width);\n\t    newState.cols = responsiveUtils.getColsFromBreakpoint(newState.breakpoint, this.props.cols);\n\t\n\t    // Breakpoint change\n\t    if (newState.cols !== this.state.cols) {\n\t\n\t      // Store the current layout\n\t      newState.layouts = this.state.layouts;\n\t      newState.layouts[this.state.breakpoint] = JSON.parse(JSON.stringify(this.state.layout));\n\t\n\t      // Find or generate a new one.\n\t      newState.layout = responsiveUtils.findOrGenerateResponsiveLayout(newState.layouts, this.props.breakpoints, newState.breakpoint, this.state.breakpoint, newState.cols, this.props.verticalLayout);\n\t\n\t      // This adds missing items.\n\t      newState.layout = utils.synchronizeLayoutWithChildren(newState.layout, this.props.children, newState.cols, this.props.verticalCompact);\n\t\n\t      // Store this new layout as well.\n\t      newState.layouts[newState.breakpoint] = newState.layout;\n\t\n\t      this.props.onBreakpointChange(newState.breakpoint, newState.cols);\n\t    }\n\t\n\t    this.setState(newState);\n\t  },\n\t\n\t  render: function render() {\n\t    // Don't pass responsive props to RGL.\n\t    /*jshint unused:false*/\n\t    var _props = this.props;\n\t    var layouts = _props.layouts;\n\t    var onBreakpointChange = _props.onBreakpointChange;\n\t    var breakpoints = _props.breakpoints;\n\t\n\t    var props = _objectWithoutProperties(_props, ['layouts', 'onBreakpointChange', 'breakpoints']);\n\t\n\t    return React.createElement(\n\t      ReactGridLayout,\n\t      _extends({}, props, {\n\t        layout: this.state.layout,\n\t        cols: this.state.cols,\n\t        listenToWindowResize: false,\n\t        onLayoutChange: this.onLayoutChange,\n\t        width: this.state.width }),\n\t      this.props.children\n\t    );\n\t  }\n\t});\n\t\n\tmodule.exports = ResponsiveReactGridLayout;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar utils = __webpack_require__(2);\n\t\n\tvar responsiveUtils = module.exports = {\n\t\n\t  /**\r\n\t   * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\r\n\t   *\r\n\t   * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\r\n\t   * @param  {Number} width Screen width.\r\n\t   * @return {String}       Highest breakpoint that is less than width.\r\n\t   */\n\t  getBreakpointFromWidth: function getBreakpointFromWidth(breakpoints, width) {\n\t    var sorted = responsiveUtils.sortBreakpoints(breakpoints);\n\t    var matching = sorted[0];\n\t    for (var i = 1, len = sorted.length; i < len; i++) {\n\t      var breakpointName = sorted[i];\n\t      if (width > breakpoints[breakpointName]) matching = breakpointName;\n\t    }\n\t    return matching;\n\t  },\n\t\n\t  /**\r\n\t   * Given a breakpoint, get the # of cols set for it.\r\n\t   * @param  {String} breakpoint Breakpoint name.\r\n\t   * @param  {Object} cols       Map of breakpoints to cols.\r\n\t   * @return {Number}            Number of cols.\r\n\t   */\n\t  getColsFromBreakpoint: function getColsFromBreakpoint(breakpoint, cols) {\n\t    if (!cols[breakpoint]) {\n\t      throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\n\t    }\n\t    return cols[breakpoint];\n\t  },\n\t\n\t  /**\r\n\t   * Given existing layouts and a new breakpoint, find or generate a new layout.\r\n\t   *\r\n\t   * This finds the layout above the new one and generates from it, if it exists.\r\n\t   *\r\n\t   * @param  {Array} layouts     Existing layouts.\r\n\t   * @param  {Array} breakpoints All breakpoints.\r\n\t   * @param  {String} breakpoint New breakpoint.\r\n\t   * @param  {String} breakpoint Last breakpoint (for fallback).\r\n\t   * @param  {Number} cols       Column count at new breakpoint.\r\n\t   * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n\t   *   vertically.\r\n\t   * @return {Array}             New layout.\r\n\t   */\n\t  findOrGenerateResponsiveLayout: function findOrGenerateResponsiveLayout(layouts, breakpoints, breakpoint, lastBreakpoint, cols, verticalCompact) {\n\t    // If it already exists, just return it.\n\t    if (layouts[breakpoint]) return layouts[breakpoint];\n\t    // Find or generate the next layout\n\t    var layout = layouts[lastBreakpoint];\n\t    var breakpointsSorted = responsiveUtils.sortBreakpoints(breakpoints);\n\t    var breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\n\t    for (var i = 0, len = breakpointsAbove.length; i < len; i++) {\n\t      var b = breakpointsAbove[i];\n\t      if (layouts[b]) {\n\t        layout = layouts[b];\n\t        break;\n\t      }\n\t    }\n\t    layout = JSON.parse(JSON.stringify(layout || [])); // clone layout so we don't modify existing items\n\t    return utils.compact(utils.correctBounds(layout, { cols: cols }), verticalCompact);\n\t  },\n\t\n\t  /**\r\n\t   * Given breakpoints, return an array of breakpoints sorted by width. This is usually\r\n\t   * e.g. ['xxs', 'xs', 'sm', ...]\r\n\t   *\r\n\t   * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\r\n\t   * @return {Array}              Sorted breakpoints.\r\n\t   */\n\t  sortBreakpoints: function sortBreakpoints(breakpoints) {\n\t    var keys = Object.keys(breakpoints);\n\t    return keys.sort(function (a, b) {\n\t      return breakpoints[a] - breakpoints[b];\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar pSlice = Array.prototype.slice;\n\tvar objectKeys = __webpack_require__(18);\n\tvar isArguments = __webpack_require__(17);\n\t\n\tvar deepEqual = module.exports = function (actual, expected, opts) {\n\t  if (!opts) opts = {};\n\t  // 7.1. All identical values are equivalent, as determined by ===.\n\t  if (actual === expected) {\n\t    return true;\n\t\n\t  } else if (actual instanceof Date && expected instanceof Date) {\n\t    return actual.getTime() === expected.getTime();\n\t\n\t  // 7.3. Other pairs that do not both pass typeof value == 'object',\n\t  // equivalence is determined by ==.\n\t  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n\t    return opts.strict ? actual === expected : actual == expected;\n\t\n\t  // 7.4. For all other Object pairs, including Array objects, equivalence is\n\t  // determined by having the same number of owned properties (as verified\n\t  // with Object.prototype.hasOwnProperty.call), the same set of keys\n\t  // (although not necessarily the same order), equivalent values for every\n\t  // corresponding key, and an identical 'prototype' property. Note: this\n\t  // accounts for both named and indexed properties on Arrays.\n\t  } else {\n\t    return objEquiv(actual, expected, opts);\n\t  }\n\t}\n\t\n\tfunction isUndefinedOrNull(value) {\n\t  return value === null || value === undefined;\n\t}\n\t\n\tfunction isBuffer (x) {\n\t  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n\t  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n\t    return false;\n\t  }\n\t  if (x.length > 0 && typeof x[0] !== 'number') return false;\n\t  return true;\n\t}\n\t\n\tfunction objEquiv(a, b, opts) {\n\t  var i, key;\n\t  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n\t    return false;\n\t  // an identical 'prototype' property.\n\t  if (a.prototype !== b.prototype) return false;\n\t  //~~~I've managed to break Object.keys through screwy arguments passing.\n\t  //   Converting to array solves the problem.\n\t  if (isArguments(a)) {\n\t    if (!isArguments(b)) {\n\t      return false;\n\t    }\n\t    a = pSlice.call(a);\n\t    b = pSlice.call(b);\n\t    return deepEqual(a, b, opts);\n\t  }\n\t  if (isBuffer(a)) {\n\t    if (!isBuffer(b)) {\n\t      return false;\n\t    }\n\t    if (a.length !== b.length) return false;\n\t    for (i = 0; i < a.length; i++) {\n\t      if (a[i] !== b[i]) return false;\n\t    }\n\t    return true;\n\t  }\n\t  try {\n\t    var ka = objectKeys(a),\n\t        kb = objectKeys(b);\n\t  } catch (e) {//happens when one is a string literal and the other isn't\n\t    return false;\n\t  }\n\t  // having the same number of owned properties (keys incorporates\n\t  // hasOwnProperty)\n\t  if (ka.length != kb.length)\n\t    return false;\n\t  //the same set of keys (although not necessarily the same order),\n\t  ka.sort();\n\t  kb.sort();\n\t  //~~~cheap key test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    if (ka[i] != kb[i])\n\t      return false;\n\t  }\n\t  //equivalent values for every corresponding key, and\n\t  //~~~possibly expensive deep test\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!deepEqual(a[key], b[key], opts)) return false;\n\t  }\n\t  return typeof a === typeof b;\n\t}\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tvar supportsArgumentsClass = (function(){\n\t  return Object.prototype.toString.call(arguments)\n\t})() == '[object Arguments]';\n\t\n\texports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\t\n\texports.supported = supported;\n\tfunction supported(object) {\n\t  return Object.prototype.toString.call(object) == '[object Arguments]';\n\t};\n\t\n\texports.unsupported = unsupported;\n\tfunction unsupported(object){\n\t  return object &&\n\t    typeof object == 'object' &&\n\t    typeof object.length == 'number' &&\n\t    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n\t    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n\t    false;\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\texports = module.exports = typeof Object.keys === 'function'\n\t  ? Object.keys : shim;\n\t\n\texports.shim = shim;\n\tfunction shim (obj) {\n\t  var keys = [];\n\t  for (var key in obj) keys.push(key);\n\t  return keys;\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React = __webpack_require__(1);\n\tvar emptyFunction = function(){};\n\tvar assign = __webpack_require__(22);\n\tvar classNames = __webpack_require__(21);\n\tvar browserPrefix = __webpack_require__(20)();\n\t\n\t//\n\t// Helpers. See Element definition below this section.\n\t//\n\t\n\tfunction createUIEvent(draggable) {\n\t  // State changes are often (but not always!) async. We want the latest value.\n\t  var state = draggable._pendingState || draggable.state;\n\t  return {\n\t    node: draggable.getDOMNode(),\n\t    position: {\n\t      top: state.clientY,\n\t      left: state.clientX\n\t    }\n\t  };\n\t}\n\t\n\tfunction canDragX(draggable) {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n\t}\n\t\n\tfunction canDragY(draggable) {\n\t  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n\t}\n\t\n\tfunction isFunction(func) {\n\t  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n\t}\n\t\n\t// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\n\tfunction findInArray(array, callback) {\n\t  for (var i = 0, length = array.length; i < length; i++) {\n\t    if (callback.apply(callback, [array[i], i, array])) return array[i];\n\t  }\n\t}\n\t\n\tvar matchesSelectorFunc = '';\n\tfunction matchesSelector(el, selector) {\n\t  if (!matchesSelectorFunc) {\n\t    matchesSelectorFunc = findInArray([\n\t      'matches',\n\t      'webkitMatchesSelector',\n\t      'mozMatchesSelector',\n\t      'msMatchesSelector',\n\t      'oMatchesSelector'\n\t    ], function(method){\n\t      return isFunction(el[method]);\n\t    });\n\t  }\n\t\n\t  return el[matchesSelectorFunc].call(el, selector);\n\t}\n\t\n\t/**\n\t * simple abstraction for dragging events names\n\t * */\n\tvar eventsFor = {\n\t  touch: {\n\t    start: 'touchstart',\n\t    move: 'touchmove',\n\t    end: 'touchend'\n\t  },\n\t  mouse: {\n\t    start: 'mousedown',\n\t    move: 'mousemove',\n\t    end: 'mouseup'\n\t  }\n\t};\n\t\n\t// Default to mouse events\n\tvar dragEventFor = eventsFor.mouse;\n\t\n\t/**\n\t * get {clientX, clientY} positions of control\n\t * */\n\tfunction getControlPosition(e) {\n\t  var position = (e.targetTouches && e.targetTouches[0]) || e;\n\t  return {\n\t    clientX: position.clientX,\n\t    clientY: position.clientY\n\t  };\n\t}\n\t\n\tfunction addEvent(el, event, handler) {\n\t  if (!el) { return; }\n\t  if (el.attachEvent) {\n\t    el.attachEvent('on' + event, handler);\n\t  } else if (el.addEventListener) {\n\t    el.addEventListener(event, handler, true);\n\t  } else {\n\t    el['on' + event] = handler;\n\t  }\n\t}\n\t\n\tfunction removeEvent(el, event, handler) {\n\t  if (!el) { return; }\n\t  if (el.detachEvent) {\n\t    el.detachEvent('on' + event, handler);\n\t  } else if (el.removeEventListener) {\n\t    el.removeEventListener(event, handler, true);\n\t  } else {\n\t    el['on' + event] = null;\n\t  }\n\t}\n\t\n\tfunction outerHeight(node) {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetTop which is including margin. See getBoundPosition\n\t  var height = node.clientHeight;\n\t  var computedStyle = window.getComputedStyle(node);\n\t  height += int(computedStyle.borderTopWidth);\n\t  height += int(computedStyle.borderBottomWidth);\n\t  return height;\n\t}\n\t\n\tfunction outerWidth(node) {\n\t  // This is deliberately excluding margin for our calculations, since we are using\n\t  // offsetLeft which is including margin. See getBoundPosition\n\t  var width = node.clientWidth;\n\t  var computedStyle = window.getComputedStyle(node);\n\t  width += int(computedStyle.borderLeftWidth);\n\t  width += int(computedStyle.borderRightWidth);\n\t  return width;\n\t}\n\tfunction innerHeight(node) {\n\t  var height = node.clientHeight;\n\t  var computedStyle = window.getComputedStyle(node);\n\t  height -= int(computedStyle.paddingTop);\n\t  height -= int(computedStyle.paddingBottom);\n\t  return height;\n\t}\n\t\n\tfunction innerWidth(node) {\n\t  var width = node.clientWidth;\n\t  var computedStyle = window.getComputedStyle(node);\n\t  width -= int(computedStyle.paddingLeft);\n\t  width -= int(computedStyle.paddingRight);\n\t  return width;\n\t}\n\t\n\tfunction isNum(num) {\n\t  return typeof num === 'number' && !isNaN(num);\n\t}\n\t\n\tfunction int(a) {\n\t  return parseInt(a, 10);\n\t}\n\t\n\tfunction getBoundPosition(draggable, clientX, clientY) {\n\t  var bounds = JSON.parse(JSON.stringify(draggable.props.bounds));\n\t  var node = draggable.getDOMNode();\n\t  var parent = node.parentNode;\n\t\n\t  if (bounds === 'parent') {\n\t    var nodeStyle = window.getComputedStyle(node);\n\t    var parentStyle = window.getComputedStyle(parent);\n\t    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n\t    bounds = {\n\t      left: -node.offsetLeft + int(parentStyle.paddingLeft) +\n\t            int(nodeStyle.borderLeftWidth) + int(nodeStyle.marginLeft),\n\t      top: -node.offsetTop + int(parentStyle.paddingTop) +\n\t            int(nodeStyle.borderTopWidth) + int(nodeStyle.marginTop),\n\t      right: innerWidth(parent) - outerWidth(node) - node.offsetLeft,\n\t      bottom: innerHeight(parent) - outerHeight(node) - node.offsetTop\n\t    };\n\t  }\n\t\n\t  // Keep x and y below right and bottom limits...\n\t  if (isNum(bounds.right)) clientX = Math.min(clientX, bounds.right);\n\t  if (isNum(bounds.bottom)) clientY = Math.min(clientY, bounds.bottom);\n\t\n\t  // But above left and top limits.\n\t  if (isNum(bounds.left)) clientX = Math.max(clientX, bounds.left);\n\t  if (isNum(bounds.top)) clientY = Math.max(clientY, bounds.top);\n\t\n\t  return [clientX, clientY];\n\t}\n\t\n\tfunction snapToGrid(grid, pendingX, pendingY) {\n\t  var x = Math.round(pendingX / grid[0]) * grid[0];\n\t  var y = Math.round(pendingY / grid[1]) * grid[1];\n\t  return [x, y];\n\t}\n\t\n\t// Useful for preventing blue highlights all over everything when dragging.\n\tvar userSelectStyle = ';user-select: none;';\n\tif (browserPrefix) {\n\t  userSelectStyle += '-' + browserPrefix.toLowerCase() + '-user-select: none;';\n\t}\n\t\n\tfunction addUserSelectStyles(draggable) {\n\t  if (!draggable.props.enableUserSelectHack) return;\n\t  var style = document.body.getAttribute('style') || '';\n\t  document.body.setAttribute('style', style + userSelectStyle);\n\t}\n\t\n\tfunction removeUserSelectStyles(draggable) {\n\t  if (!draggable.props.enableUserSelectHack) return;\n\t  var style = document.body.getAttribute('style') || '';\n\t  document.body.setAttribute('style', style.replace(userSelectStyle, ''));\n\t}\n\t\n\tfunction createCSSTransform(style) {\n\t  // Replace unitless items with px\n\t  var x = style.x + 'px';\n\t  var y = style.y + 'px';\n\t  var out = {transform: 'translate(' + x + ',' + y + ')'};\n\t  // Add single prefixed property as well\n\t  if (browserPrefix) {\n\t    out[browserPrefix + 'Transform'] = out.transform;\n\t  }\n\t  return out;\n\t}\n\t\n\tfunction createSVGTransform(args) {\n\t  return 'translate(' + args.x + ',' + args.y + ')';\n\t}\n\t\n\t//\n\t// End Helpers.\n\t//\n\t\n\t//\n\t// Define <Draggable>\n\t//\n\t\n\tmodule.exports = React.createClass({\n\t  displayName: 'Draggable',\n\t\n\t  propTypes: {\n\t    /**\n\t     * `axis` determines which axis the draggable can move.\n\t     *\n\t     * 'both' allows movement horizontally and vertically.\n\t     * 'x' limits movement to horizontal axis.\n\t     * 'y' limits movement to vertical axis.\n\t     *\n\t     * Defaults to 'both'.\n\t     */\n\t    axis: React.PropTypes.oneOf(['both', 'x', 'y']),\n\t\n\t    /**\n\t     * `bounds` determines the range of movement available to the element.\n\t     * Available values are:\n\t     *\n\t     * 'parent' restricts movement within the Draggable's parent node.\n\t     *\n\t     * Alternatively, pass an object with the following properties, all of which are optional:\n\t     *\n\t     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n\t     *\n\t     * All values are in px.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```jsx\n\t     *   var App = React.createClass({\n\t     *       render: function () {\n\t     *         return (\n\t     *            <Draggable bounds={{right: 300, bottom: 300}}>\n\t     *              <div>Content</div>\n\t     *           </Draggable>\n\t     *         );\n\t     *       }\n\t     *   });\n\t     * ```\n\t     */\n\t    bounds: React.PropTypes.oneOfType([\n\t      React.PropTypes.shape({\n\t        left: React.PropTypes.Number,\n\t        right: React.PropTypes.Number,\n\t        top: React.PropTypes.Number,\n\t        bottom: React.PropTypes.Number\n\t      }),\n\t      React.PropTypes.oneOf(['parent', false])\n\t    ]),\n\t\n\t    /**\n\t     * By default, we add 'user-select:none' attributes to the document body\n\t     * to prevent ugly text selection during drag. If this is causing problems\n\t     * for your app, set this to `false`.\n\t     */\n\t    enableUserSelectHack: React.PropTypes.bool,\n\t\n\t    /**\n\t     * `handle` specifies a selector to be used as the handle that initiates drag.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```jsx\n\t     *   var App = React.createClass({\n\t     *       render: function () {\n\t     *         return (\n\t     *            <Draggable handle=\".handle\">\n\t     *              <div>\n\t     *                  <div className=\"handle\">Click me to drag</div>\n\t     *                  <div>This is some other content</div>\n\t     *              </div>\n\t     *           </Draggable>\n\t     *         );\n\t     *       }\n\t     *   });\n\t     * ```\n\t     */\n\t    handle: React.PropTypes.string,\n\t\n\t    /**\n\t     * `cancel` specifies a selector to be used to prevent drag initialization.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```jsx\n\t     *   var App = React.createClass({\n\t     *       render: function () {\n\t     *           return(\n\t     *               <Draggable cancel=\".cancel\">\n\t     *                   <div>\n\t     *                     <div className=\"cancel\">You can't drag from here</div>\n\t     *            <div>Dragging here works fine</div>\n\t     *                   </div>\n\t     *               </Draggable>\n\t     *           );\n\t     *       }\n\t     *   });\n\t     * ```\n\t     */\n\t    cancel: React.PropTypes.string,\n\t\n\t    /**\n\t     * `grid` specifies the x and y that dragging should snap to.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```jsx\n\t     *   var App = React.createClass({\n\t     *       render: function () {\n\t     *           return (\n\t     *               <Draggable grid={[25, 25]}>\n\t     *                   <div>I snap to a 25 x 25 grid</div>\n\t     *               </Draggable>\n\t     *           );\n\t     *       }\n\t     *   });\n\t     * ```\n\t     */\n\t    grid: React.PropTypes.arrayOf(React.PropTypes.number),\n\t\n\t    /**\n\t     * `start` specifies the x and y that the dragged item should start at\n\t     *\n\t     * Example:\n\t     *\n\t     * ```jsx\n\t     *      var App = React.createClass({\n\t     *          render: function () {\n\t     *              return (\n\t     *                  <Draggable start={{x: 25, y: 25}}>\n\t     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n\t     *                  </Draggable>\n\t     *              );\n\t     *          }\n\t     *      });\n\t     * ```\n\t     */\n\t    start: React.PropTypes.shape({\n\t      x: React.PropTypes.number,\n\t      y: React.PropTypes.number\n\t    }),\n\t\n\t    /**\n\t     * `moveOnStartChange`, if true (default false) will move the element if the `start`\n\t     * property changes.\n\t     */\n\t    moveOnStartChange: React.PropTypes.bool,\n\t\n\t\n\t    /**\n\t     * `zIndex` specifies the zIndex to use while dragging.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```jsx\n\t     *   var App = React.createClass({\n\t     *       render: function () {\n\t     *           return (\n\t     *               <Draggable zIndex={100}>\n\t     *                   <div>I have a zIndex</div>\n\t     *               </Draggable>\n\t     *           );\n\t     *       }\n\t     *   });\n\t     * ```\n\t     */\n\t    zIndex: React.PropTypes.number,\n\t\n\t    /**\n\t     * Called when dragging starts.\n\t     * If this function returns the boolean false, dragging will be canceled.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```js\n\t     *  function (event, ui) {}\n\t     * ```\n\t     *\n\t     * `event` is the Event that was triggered.\n\t     * `ui` is an object:\n\t     *\n\t     * ```js\n\t     *  {\n\t     *    position: {top: 0, left: 0}\n\t     *  }\n\t     * ```\n\t     */\n\t    onStart: React.PropTypes.func,\n\t\n\t    /**\n\t     * Called while dragging.\n\t     * If this function returns the boolean false, dragging will be canceled.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```js\n\t     *  function (event, ui) {}\n\t     * ```\n\t     *\n\t     * `event` is the Event that was triggered.\n\t     * `ui` is an object:\n\t     *\n\t     * ```js\n\t     *  {\n\t     *    position: {top: 0, left: 0}\n\t     *  }\n\t     * ```\n\t     */\n\t    onDrag: React.PropTypes.func,\n\t\n\t    /**\n\t     * Called when dragging stops.\n\t     *\n\t     * Example:\n\t     *\n\t     * ```js\n\t     *  function (event, ui) {}\n\t     * ```\n\t     *\n\t     * `event` is the Event that was triggered.\n\t     * `ui` is an object:\n\t     *\n\t     * ```js\n\t     *  {\n\t     *    position: {top: 0, left: 0}\n\t     *  }\n\t     * ```\n\t     */\n\t    onStop: React.PropTypes.func,\n\t\n\t    /**\n\t     * A workaround option which can be passed if onMouseDown needs to be accessed,\n\t     * since it'll always be blocked (due to that there's internal use of onMouseDown)\n\t     */\n\t    onMouseDown: React.PropTypes.func,\n\t  },\n\t\n\t  componentWillReceiveProps: function(newProps) {\n\t    // React to changes in the 'start' param.\n\t    if (newProps.moveOnStartChange && newProps.start) {\n\t      this.setState(this.getInitialState(newProps));\n\t    }\n\t  },\n\t\n\t  componentDidMount: function() {\n\t    // Check to see if the element passed is an instanceof SVGElement\n\t    if( React.findDOMNode(this) instanceof SVGElement) {\n\t        this.setState({ isElementSVG: true });\n\t    }\n\t  },\n\t\n\t  componentWillUnmount: function() {\n\t    // Remove any leftover event handlers\n\t    removeEvent(document, dragEventFor.move, this.handleDrag);\n\t    removeEvent(document, dragEventFor.end, this.handleDragEnd);\n\t    removeUserSelectStyles(this);\n\t  },\n\t\n\t  getDefaultProps: function () {\n\t    return {\n\t      axis: 'both',\n\t      bounds: false,\n\t      handle: null,\n\t      cancel: null,\n\t      grid: null,\n\t      moveOnStartChange: false,\n\t      start: {x: 0, y: 0},\n\t      zIndex: NaN,\n\t      enableUserSelectHack: true,\n\t      onStart: emptyFunction,\n\t      onDrag: emptyFunction,\n\t      onStop: emptyFunction,\n\t      onMouseDown: emptyFunction\n\t    };\n\t  },\n\t\n\t  getInitialState: function (props) {\n\t    // Handle call from CWRP\n\t    var currentState = this.state;\n\t    props = props || this.props;\n\t    return {\n\t      // Whether or not we are currently dragging.\n\t      dragging: false,\n\t\n\t      // Offset between start top/left and mouse top/left while dragging.\n\t      offsetX: 0, offsetY: 0,\n\t\n\t      // Current transform x and y.\n\t      clientX: props.start.x, clientY: props.start.y,\n\t\n\t      // Determines if the element is an svg or not. Default to false.\n\t      isElementSVG: currentState && currentState.isElementSVG !== undefined ?\n\t        currentState.isElementSVG :\n\t        false\n\t    };\n\t  },\n\t\n\t  handleDragStart: function (e) {\n\t    // Set touch identifier in component state if this is a touch event\n\t    if(e.targetTouches){\n\t      this.setState({touchIdentifier: e.targetTouches[0].identifier});\n\t    }\n\t\n\t    // Make it possible to attach event handlers on top of this one\n\t    this.props.onMouseDown(e);\n\t\n\t    // Short circuit if handle or cancel prop was provided and selector doesn't match\n\t    if ((this.props.handle && !matchesSelector(e.target, this.props.handle)) ||\n\t      (this.props.cancel && matchesSelector(e.target, this.props.cancel))) {\n\t      return;\n\t    }\n\t\n\t    // Call event handler. If it returns explicit false, cancel.\n\t    var shouldStart = this.props.onStart(e, createUIEvent(this));\n\t    if (shouldStart === false) return;\n\t\n\t    var dragPoint = getControlPosition(e);\n\t\n\t    // Add a style to the body to disable user-select. This prevents text from\n\t    // being selected all over the page.\n\t    addUserSelectStyles(this);\n\t\n\t    // Initiate dragging. Set the current x and y as offsets\n\t    // so we know how much we've moved during the drag. This allows us\n\t    // to drag elements around even if they have been moved, without issue.\n\t    this.setState({\n\t      dragging: true,\n\t      offsetX: dragPoint.clientX - this.state.clientX,\n\t      offsetY: dragPoint.clientY - this.state.clientY,\n\t      scrollX: document.body.scrollLeft,\n\t      scrollY: document.body.scrollTop\n\t    });\n\t\n\t\n\t    // Add event handlers\n\t    addEvent(document, 'scroll', this.handleScroll);\n\t    addEvent(document, dragEventFor.move, this.handleDrag);\n\t    addEvent(document, dragEventFor.end, this.handleDragEnd);\n\t  },\n\t\n\t  handleDragEnd: function (e) {\n\t    // Short circuit if not currently dragging\n\t    if (!this.state.dragging) {\n\t      return;\n\t    }\n\t\n\t    // Short circuit if this is not the correct touch event\n\t    if(e.changedTouches && (e.changedTouches[0].identifier != this.state.touchIdentifier)){\n\t     return;\n\t    }\n\t\n\t    removeUserSelectStyles(this);\n\t\n\t    // Turn off dragging\n\t    this.setState({\n\t      dragging: false\n\t    });\n\t\n\t    // Call event handler\n\t    this.props.onStop(e, createUIEvent(this));\n\t\n\t    // Remove event handlers\n\t    removeEvent(document, 'scroll', this.handleScroll);\n\t    removeEvent(document, dragEventFor.move, this.handleDrag);\n\t    removeEvent(document, dragEventFor.end, this.handleDragEnd);\n\t  },\n\t\n\t  handleDrag: function (e) {\n\t    // Return if this is a touch event, but not the correct one for this element\n\t    if(e.targetTouches && (e.targetTouches[0].identifier != this.state.touchIdentifier)){\n\t      return;\n\t    }\n\t    var dragPoint = getControlPosition(e);\n\t\n\t    // Calculate X and Y\n\t    var clientX = dragPoint.clientX - this.state.offsetX;\n\t    var clientY = dragPoint.clientY - this.state.offsetY;\n\t\n\t    // Snap to grid if prop has been provided\n\t    if (Array.isArray(this.props.grid)) {\n\t      var coords = snapToGrid(this.props.grid, clientX, clientY);\n\t      clientX = coords[0];\n\t      clientY = coords[1];\n\t    }\n\t\n\t    if (this.props.bounds) {\n\t      var pos = getBoundPosition(this, clientX, clientY);\n\t      clientX = pos[0];\n\t      clientY = pos[1];\n\t    }\n\t\n\t    // Call event handler. If it returns explicit false, cancel.\n\t    var shouldUpdate = this.props.onDrag(e, createUIEvent(this));\n\t    if (shouldUpdate === false) return this.handleDragEnd({});\n\t\n\t    // Update transform\n\t    this.setState({\n\t      clientX: clientX,\n\t      clientY: clientY\n\t    });\n\t  },\n\t\n\t  handleScroll: function(e) {\n\t    var s = this.state, x = document.body.scrollLeft, y = document.body.scrollTop;\n\t    var offsetX = x - s.scrollX, offsetY = y - s.scrollY;\n\t    this.setState({\n\t      scrollX: x,\n\t      scrollY: y,\n\t      clientX: s.clientX + offsetX,\n\t      clientY: s.clientY + offsetY,\n\t      offsetX: s.offsetX - offsetX,\n\t      offsetY: s.offsetY - offsetY\n\t    });\n\t  },\n\t\n\t  onMouseDown: function(ev) {\n\t    // Prevent 'ghost click' which happens 300ms after touchstart if the event isn't cancelled.\n\t    // We don't cancel the event on touchstart because of #37; we might want to make a scrollable item draggable.\n\t    // More on ghost clicks: http://ariatemplates.com/blog/2014/05/ghost-clicks-in-mobile-browsers/\n\t    if (dragEventFor === eventsFor.touch) {\n\t      return ev.preventDefault();\n\t    }\n\t\n\t    return this.handleDragStart.apply(this, arguments);\n\t  },\n\t\n\t  onTouchStart: function(ev) {\n\t    // We're on a touch device now, so change the event handlers\n\t    dragEventFor = eventsFor.touch;\n\t\n\t    return this.handleDragStart.apply(this, arguments);\n\t  },\n\t\n\t  // Intended for use by a parent component. Resets internal state on this component. Useful for\n\t  // <Resizable> and other components in case this element is manually resized and start/moveOnStartChange\n\t  // don't work for you.\n\t  resetState: function() {\n\t    this.setState({\n\t      offsetX: 0, offsetY: 0, clientX: 0, clientY: 0\n\t    });\n\t  },\n\t\n\t  render: function () {\n\t    // Create style object. We extend from existing styles so we don't\n\t    // remove anything already set (like background, color, etc).\n\t    var childStyle = this.props.children.props.style || {};\n\t\n\t    // Add a CSS transform to move the element around. This allows us to move the element around\n\t    // without worrying about whether or not it is relatively or absolutely positioned.\n\t    // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n\t    // has a clean slate.\n\t    var transform = this.state.isElementSVG ? null :\n\t      createCSSTransform({\n\t          // Set left if horizontal drag is enabled\n\t          x: canDragX(this) ?\n\t            this.state.clientX :\n\t            this.props.start.x,\n\t\n\t          // Set top if vertical drag is enabled\n\t          y: canDragY(this) ?\n\t            this.state.clientY :\n\t            this.props.start.y\n\t        });\n\t\n\t\n\t    // This is primarily for IE as it ignores the CSS transform applied above\n\t    // and only respects the real transform attribute.\n\t    var svgTransform = !this.state.isElementSVG ? null :\n\t        createSVGTransform({\n\t          // Set left if horizontal drag is enabled\n\t          x: canDragX(this) ?\n\t            this.state.clientX :\n\t            this.props.start.x,\n\t\n\t          // Set top if vertical drag is enabled\n\t          y: canDragY(this) ?\n\t            this.state.clientY :\n\t            this.props.start.y\n\t        });\n\t\n\t\n\t    // Workaround IE pointer events; see #51\n\t    // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n\t    var touchHacks = {\n\t      touchAction: 'none'\n\t    };\n\t\n\t    var style = assign({}, childStyle, transform, touchHacks);\n\t\n\t    // Set zIndex if currently dragging and prop has been provided\n\t    if (this.state.dragging && !isNaN(this.props.zIndex)) {\n\t      style.zIndex = this.props.zIndex;\n\t    }\n\t\n\t    var className = classNames((this.props.children.props.className || ''), 'react-draggable', {\n\t      'react-draggable-dragging': this.state.dragging,\n\t      'react-draggable-dragged': this.state.dragged\n\t    });\n\t\n\t    // Reuse the child provided\n\t    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n\t    return React.cloneElement(React.Children.only(this.props.children), {\n\t      style: style,\n\t      transform: svgTransform,\n\t      className: className,\n\t\n\t      onMouseDown: this.onMouseDown,\n\t      onTouchStart: this.onTouchStart,\n\t      onMouseUp: this.handleDragEnd,\n\t      onTouchEnd: this.handleDragEnd\n\t    });\n\t  }\n\t});\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function() {\n\t  if (typeof window === 'undefined') return '';\n\t  // Thanks David Walsh\n\t  var styles = window.getComputedStyle(document.documentElement, ''),\n\t  pre = (Array.prototype.slice\n\t        .call(styles)\n\t        .join('')\n\t        .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n\t      )[1];\n\t  // 'ms' is not titlecased\n\t  if(pre === undefined || pre === null) return '';\n\t  if (pre === 'ms') return pre;\n\t  return pre.slice(0, 1).toUpperCase() + pre.slice(1);\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t  Copyright (c) 2015 Jed Watson.\n\t  Licensed under the MIT License (MIT), see\n\t  http://jedwatson.github.io/classnames\n\t*/\n\t/* global define */\n\t\n\t(function () {\n\t\t'use strict';\n\t\n\t\tvar hasOwn = {}.hasOwnProperty;\n\t\n\t\tfunction classNames () {\n\t\t\tvar classes = '';\n\t\n\t\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\t\tvar arg = arguments[i];\n\t\t\t\tif (!arg) continue;\n\t\n\t\t\t\tvar argType = typeof arg;\n\t\n\t\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\t\tclasses += ' ' + arg;\n\t\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\t\tclasses += ' ' + classNames.apply(null, arg);\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses += ' ' + key;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn classes.substr(1);\n\t\t}\n\t\n\t\tif (typeof module !== 'undefined' && module.exports) {\n\t\t\tmodule.exports = classNames;\n\t\t} else if (true) {\n\t\t\t// register as 'classnames', consistent with npm package name\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\t\t\treturn classNames;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t} else {\n\t\t\twindow.classNames = classNames;\n\t\t}\n\t}());\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\t/* eslint-disable no-unused-vars */\n\t'use strict';\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tmodule.exports = Object.assign || function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };\n\t\n\tvar _slicedToArray = function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar React = __webpack_require__(1);\n\tvar Resizable = __webpack_require__(10);\n\tvar PureRenderMixin = __webpack_require__(11);\n\t\n\t// An example use of Resizable.\n\tvar ResizableBox = module.exports = React.createClass({\n\t  displayName: 'ResizableBox',\n\t  mixins: [PureRenderMixin],\n\t\n\t  propTypes: {\n\t    lockAspectRatio: React.PropTypes.bool\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      lockAspectRatio: false,\n\t      handleSize: [20, 20]\n\t    };\n\t  },\n\t\n\t  getInitialState: function getInitialState() {\n\t    return {\n\t      width: this.props.width,\n\t      height: this.props.height,\n\t      aspectRatio: this.props.width / this.props.height\n\t    };\n\t  },\n\t\n\t  onResize: function onResize(event, _ref) {\n\t    var _this = this;\n\t\n\t    var element = _ref.element;\n\t    var size = _ref.size;\n\t    var width = size.width;\n\t    var height = size.height;\n\t\n\t    var widthChanged = width !== this.state.width,\n\t        heightChanged = height !== this.state.height;\n\t    if (!widthChanged && !heightChanged) {\n\t      return;\n\t    }if (this.props.lockAspectRatio) {\n\t      var _preserveAspectRatio = this.preserveAspectRatio(width, height);\n\t\n\t      var _preserveAspectRatio2 = _slicedToArray(_preserveAspectRatio, 2);\n\t\n\t      width = _preserveAspectRatio2[0];\n\t      height = _preserveAspectRatio2[1];\n\t    }\n\t\n\t    this.setState({ width: width, height: height }, function () {\n\t      if (_this.props.onResize) {\n\t        _this.props.onResize(event, { element: element, size: { width: width, height: height } });\n\t      }\n\t    });\n\t  },\n\t\n\t  // If you do this, be careful of constraints\n\t  preserveAspectRatio: function preserveAspectRatio(width, height) {\n\t    var min = this.props.minConstraints;\n\t    var max = this.props.maxConstraints;\n\t\n\t    height = width / this.state.aspectRatio;\n\t    width = height * this.state.aspectRatio;\n\t\n\t    if (min) {\n\t      width = Math.max(min[0], width);\n\t      height = Math.max(min[1], height);\n\t    }\n\t    if (max) {\n\t      width = Math.min(max[0], width);\n\t      height = Math.min(max[1], height);\n\t    }\n\t    return [width, height];\n\t  },\n\t\n\t  render: function render() {\n\t    // Basic wrapper around a Resizable instance.\n\t    // If you use Resizable directly, you are responsible for updating the component\n\t    // with a new width and height.\n\t    var _props = this.props;\n\t    var handleSize = _props.handleSize;\n\t    var minConstraints = _props.minConstraints;\n\t    var maxConstraints = _props.maxConstraints;\n\t\n\t    var props = _objectWithoutProperties(_props, ['handleSize', 'minConstraints', 'maxConstraints']);\n\t\n\t    return React.createElement(\n\t      Resizable,\n\t      {\n\t        minConstraints: minConstraints,\n\t        maxConstraints: maxConstraints,\n\t        handleSize: handleSize,\n\t        width: this.state.width,\n\t        height: this.state.height,\n\t        onResizeStart: this.props.onResizeStart,\n\t        onResize: this.onResize,\n\t        onResizeStop: this.props.onResizeStop,\n\t        draggableOpts: this.props.draggableOpts\n\t      },\n\t      React.createElement(\n\t        'div',\n\t        _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props),\n\t        this.props.children\n\t      )\n\t    );\n\t  }\n\t});\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(4);\n\tvar React = __webpack_require__(1);\n\t\n\tmodule.exports = function cloneElement(element, props) {\n\t  if (props.style && element.props.style) {\n\t    props.style = assign({}, element.props.style, props.style);\n\t  }\n\t  if (props.className && element.props.className) {\n\t    props.className = element.props.className + ' ' + props.className;\n\t  }\n\t  return React.cloneElement(element, props);\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tmodule.exports = function() {\n\t  throw new Error(\"Don't instantiate Resizable directly! Use require('react-resizable').Resizable\");\n\t};\n\t\n\tmodule.exports.Resizable = __webpack_require__(10);\n\tmodule.exports.ResizableBox = __webpack_require__(23);\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactContext\n\t */\n\t\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(5);\n\tvar emptyObject = __webpack_require__(31);\n\tvar warning = __webpack_require__(6);\n\t\n\tvar didWarn = false;\n\t\n\t/**\n\t * Keeps track of the current context.\n\t *\n\t * The context is automatically passed down the component ownership hierarchy\n\t * and is accessible via `this.context` on ReactCompositeComponents.\n\t */\n\tvar ReactContext = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {object}\n\t   */\n\t  current: emptyObject,\n\t\n\t  /**\n\t   * Temporarily extends the current context while executing scopedCallback.\n\t   *\n\t   * A typical use case might look like\n\t   *\n\t   *  render: function() {\n\t   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n\t   *\n\t   *    ));\n\t   *    return <div>{children}</div>;\n\t   *  }\n\t   *\n\t   * @param {object} newContext New context to merge into the existing context\n\t   * @param {function} scopedCallback Callback to run with the new context\n\t   * @return {ReactComponent|array<ReactComponent>}\n\t   */\n\t  withContext: function(newContext, scopedCallback) {\n\t    if (false) {\n\t      (\"production\" !== process.env.NODE_ENV ? warning(\n\t        didWarn,\n\t        'withContext is deprecated and will be removed in a future version. ' +\n\t        'Use a wrapper component with getChildContext instead.'\n\t      ) : null);\n\t\n\t      didWarn = true;\n\t    }\n\t\n\t    var result;\n\t    var previousContext = ReactContext.current;\n\t    ReactContext.current = assign({}, previousContext, newContext);\n\t    try {\n\t      result = scopedCallback();\n\t    } finally {\n\t      ReactContext.current = previousContext;\n\t    }\n\t    return result;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactContext;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCurrentOwner\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t *\n\t * The depth indicate how many composite components are above this render level.\n\t */\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactElement\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactContext = __webpack_require__(26);\n\tvar ReactCurrentOwner = __webpack_require__(27);\n\t\n\tvar assign = __webpack_require__(5);\n\tvar warning = __webpack_require__(6);\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true\n\t};\n\t\n\t/**\n\t * Warn for mutations.\n\t *\n\t * @internal\n\t * @param {object} object\n\t * @param {string} key\n\t */\n\tfunction defineWarningProperty(object, key) {\n\t  Object.defineProperty(object, key, {\n\t\n\t    configurable: false,\n\t    enumerable: true,\n\t\n\t    get: function() {\n\t      if (!this._store) {\n\t        return null;\n\t      }\n\t      return this._store[key];\n\t    },\n\t\n\t    set: function(value) {\n\t      ( false ? warning(\n\t        false,\n\t        'Don\\'t set the %s property of the React element. Instead, ' +\n\t        'specify the correct value when initially creating the element.',\n\t        key\n\t      ) : null);\n\t      this._store[key] = value;\n\t    }\n\t\n\t  });\n\t}\n\t\n\t/**\n\t * This is updated to true if the membrane is successfully created.\n\t */\n\tvar useMutationMembrane = false;\n\t\n\t/**\n\t * Warn for mutations.\n\t *\n\t * @internal\n\t * @param {object} element\n\t */\n\tfunction defineMutationMembrane(prototype) {\n\t  try {\n\t    var pseudoFrozenProperties = {\n\t      props: true\n\t    };\n\t    for (var key in pseudoFrozenProperties) {\n\t      defineWarningProperty(prototype, key);\n\t    }\n\t    useMutationMembrane = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\t/**\n\t * Base constructor for all React elements. This is only used to make this\n\t * work with a dynamic instanceof check. Nothing should live on this prototype.\n\t *\n\t * @param {*} type\n\t * @param {string|object} ref\n\t * @param {*} key\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function(type, key, ref, owner, context, props) {\n\t  // Built-in properties that belong on the element\n\t  this.type = type;\n\t  this.key = key;\n\t  this.ref = ref;\n\t\n\t  // Record the component responsible for creating this element.\n\t  this._owner = owner;\n\t\n\t  // TODO: Deprecate withContext, and then the context becomes accessible\n\t  // through the owner.\n\t  this._context = context;\n\t\n\t  if (false) {\n\t    // The validation flag and props are currently mutative. We put them on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    this._store = {props: props, originalProps: assign({}, props)};\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    try {\n\t      Object.defineProperty(this._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true\n\t      });\n\t    } catch (x) {\n\t    }\n\t    this._store.validated = false;\n\t\n\t    // We're not allowed to set props directly on the object so we early\n\t    // return and rely on the prototype membrane to forward to the backing\n\t    // store.\n\t    if (useMutationMembrane) {\n\t      Object.freeze(this);\n\t      return;\n\t    }\n\t  }\n\t\n\t  this.props = props;\n\t};\n\t\n\t// We intentionally don't expose the function on the constructor property.\n\t// ReactElement should be indistinguishable from a plain object.\n\tReactElement.prototype = {\n\t  _isReactElement: true\n\t};\n\t\n\tif (false) {\n\t  defineMutationMembrane(ReactElement.prototype);\n\t}\n\t\n\tReactElement.createElement = function(type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t\n\t  if (config != null) {\n\t    ref = config.ref === undefined ? null : config.ref;\n\t    key = config.key === undefined ? null : '' + config.key;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (config.hasOwnProperty(propName) &&\n\t          !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (typeof props[propName] === 'undefined') {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  return new ReactElement(\n\t    type,\n\t    key,\n\t    ref,\n\t    ReactCurrentOwner.current,\n\t    ReactContext.current,\n\t    props\n\t  );\n\t};\n\t\n\tReactElement.createFactory = function(type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n\t  var newElement = new ReactElement(\n\t    oldElement.type,\n\t    oldElement.key,\n\t    oldElement.ref,\n\t    oldElement._owner,\n\t    oldElement._context,\n\t    newProps\n\t  );\n\t\n\t  if (false) {\n\t    // If the key on the original is valid, then the clone is valid\n\t    newElement._store.validated = oldElement._store.validated;\n\t  }\n\t  return newElement;\n\t};\n\t\n\tReactElement.cloneElement = function(element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (config.ref !== undefined) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (config.key !== undefined) {\n\t      key = '' + config.key;\n\t    }\n\t    // Remaining properties override existing props\n\t    for (propName in config) {\n\t      if (config.hasOwnProperty(propName) &&\n\t          !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return new ReactElement(\n\t    element.type,\n\t    key,\n\t    ref,\n\t    owner,\n\t    element._context,\n\t    props\n\t  );\n\t};\n\t\n\t/**\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function(object) {\n\t  // ReactTestUtils is often used outside of beforeEach where as React is\n\t  // within it. This leads to two different instances of React on the same\n\t  // page. To identify a element from a different React instance we use\n\t  // a flag instead of an instanceof check.\n\t  var isElement = !!(object && object._isReactElement);\n\t  // if (isElement && !(object instanceof ReactElement)) {\n\t  // This is an indicator that you're using multiple versions of React at the\n\t  // same time. This will screw with ownership and stuff. Fix it, please.\n\t  // TODO: We could possibly warn here.\n\t  // }\n\t  return isElement;\n\t};\n\t\n\tmodule.exports = ReactElement;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTransferer\n\t */\n\t\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(5);\n\tvar emptyFunction = __webpack_require__(12);\n\tvar joinClasses = __webpack_require__(32);\n\t\n\t/**\n\t * Creates a transfer strategy that will merge prop values using the supplied\n\t * `mergeStrategy`. If a prop was previously unset, this just sets it.\n\t *\n\t * @param {function} mergeStrategy\n\t * @return {function}\n\t */\n\tfunction createTransferStrategy(mergeStrategy) {\n\t  return function(props, key, value) {\n\t    if (!props.hasOwnProperty(key)) {\n\t      props[key] = value;\n\t    } else {\n\t      props[key] = mergeStrategy(props[key], value);\n\t    }\n\t  };\n\t}\n\t\n\tvar transferStrategyMerge = createTransferStrategy(function(a, b) {\n\t  // `merge` overrides the first object's (`props[key]` above) keys using the\n\t  // second object's (`value`) keys. An object's style's existing `propA` would\n\t  // get overridden. Flip the order here.\n\t  return assign({}, b, a);\n\t});\n\t\n\t/**\n\t * Transfer strategies dictate how props are transferred by `transferPropsTo`.\n\t * NOTE: if you add any more exceptions to this list you should be sure to\n\t * update `cloneWithProps()` accordingly.\n\t */\n\tvar TransferStrategies = {\n\t  /**\n\t   * Never transfer `children`.\n\t   */\n\t  children: emptyFunction,\n\t  /**\n\t   * Transfer the `className` prop by merging them.\n\t   */\n\t  className: createTransferStrategy(joinClasses),\n\t  /**\n\t   * Transfer the `style` prop (which is an object) by merging them.\n\t   */\n\t  style: transferStrategyMerge\n\t};\n\t\n\t/**\n\t * Mutates the first argument by transferring the properties from the second\n\t * argument.\n\t *\n\t * @param {object} props\n\t * @param {object} newProps\n\t * @return {object}\n\t */\n\tfunction transferInto(props, newProps) {\n\t  for (var thisKey in newProps) {\n\t    if (!newProps.hasOwnProperty(thisKey)) {\n\t      continue;\n\t    }\n\t\n\t    var transferStrategy = TransferStrategies[thisKey];\n\t\n\t    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {\n\t      transferStrategy(props, thisKey, newProps[thisKey]);\n\t    } else if (!props.hasOwnProperty(thisKey)) {\n\t      props[thisKey] = newProps[thisKey];\n\t    }\n\t  }\n\t  return props;\n\t}\n\t\n\t/**\n\t * ReactPropTransferer are capable of transferring props to another component\n\t * using a `transferPropsTo` method.\n\t *\n\t * @class ReactPropTransferer\n\t */\n\tvar ReactPropTransferer = {\n\t\n\t  /**\n\t   * Merge two props objects using TransferStrategies.\n\t   *\n\t   * @param {object} oldProps original props (they take precedence)\n\t   * @param {object} newProps new props to merge in\n\t   * @return {object} a new object containing both sets of props merged.\n\t   */\n\t  mergeProps: function(oldProps, newProps) {\n\t    return transferInto(assign({}, oldProps), newProps);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactPropTransferer;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks static-only\n\t * @providesModule cloneWithProps\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(28);\n\tvar ReactPropTransferer = __webpack_require__(29);\n\t\n\tvar keyOf = __webpack_require__(33);\n\tvar warning = __webpack_require__(6);\n\t\n\tvar CHILDREN_PROP = keyOf({children: null});\n\t\n\t/**\n\t * Sometimes you want to change the props of a child passed to you. Usually\n\t * this is to add a CSS class.\n\t *\n\t * @param {ReactElement} child child element you'd like to clone\n\t * @param {object} props props you'd like to modify. className and style will be\n\t * merged automatically.\n\t * @return {ReactElement} a clone of child with props merged in.\n\t */\n\tfunction cloneWithProps(child, props) {\n\t  if (false) {\n\t    (\"production\" !== process.env.NODE_ENV ? warning(\n\t      !child.ref,\n\t      'You are calling cloneWithProps() on a child with a ref. This is ' +\n\t      'dangerous because you\\'re creating a new child which will not be ' +\n\t      'added as a ref to its parent.'\n\t    ) : null);\n\t  }\n\t\n\t  var newProps = ReactPropTransferer.mergeProps(props, child.props);\n\t\n\t  // Use `child.props.children` if it is provided.\n\t  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&\n\t      child.props.hasOwnProperty(CHILDREN_PROP)) {\n\t    newProps.children = child.props.children;\n\t  }\n\t\n\t  // The current API doesn't retain _owner and _context, which is why this\n\t  // doesn't use ReactElement.cloneAndReplaceProps.\n\t  return ReactElement.createElement(child.type, newProps);\n\t}\n\t\n\tmodule.exports = cloneWithProps;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule emptyObject\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule joinClasses\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Combines multiple className strings into one.\n\t * http://jsperf.com/joinclasses-args-vs-array\n\t *\n\t * @param {...?string} classes\n\t * @return {string}\n\t */\n\tfunction joinClasses(className/*, ... */) {\n\t  if (!className) {\n\t    className = '';\n\t  }\n\t  var nextClass;\n\t  var argLength = arguments.length;\n\t  if (argLength > 1) {\n\t    for (var ii = 1; ii < argLength; ii++) {\n\t      nextClass = arguments[ii];\n\t      if (nextClass) {\n\t        className = (className ? className + ' ' : '') + nextClass;\n\t      }\n\t    }\n\t  }\n\t  return className;\n\t}\n\t\n\tmodule.exports = joinClasses;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule keyOf\n\t */\n\t\n\t/**\n\t * Allows extraction of a minified key. Let's the build system minify keys\n\t * without loosing the ability to dynamically use key strings as values\n\t * themselves. Pass in an object with a single key/val pair and it will return\n\t * you the string key of that single record. Suppose you want to grab the\n\t * value for a key 'className' inside of an object. Key/val minification may\n\t * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n\t * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n\t * reuse those resolutions.\n\t */\n\tvar keyOf = function(oneKeyObj) {\n\t  var key;\n\t  for (key in oneKeyObj) {\n\t    if (!oneKeyObj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    return key;\n\t  }\n\t  return null;\n\t};\n\t\n\t\n\tmodule.exports = keyOf;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule shallowEqual\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning\n\t * false when any key has values which are not strictly equal between\n\t * objA and objB. Returns true when the values of all keys are strictly equal.\n\t *\n\t * @return {boolean}\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (objA === objB) {\n\t    return true;\n\t  }\n\t  var key;\n\t  // Test for A's keys different from B.\n\t  for (key in objA) {\n\t    if (objA.hasOwnProperty(key) &&\n\t        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n\t      return false;\n\t    }\n\t  }\n\t  // Test for B's keys missing from A.\n\t  for (key in objB) {\n\t    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-grid-layout.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6953feaa647b82e987d4\n **/","module.exports = require('./lib/ReactGridLayout');\r\nmodule.exports.Responsive = require('./lib/ResponsiveReactGridLayout');\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/index-dev.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar assign = require('object-assign');\r\n\r\nvar utils = module.exports = {\r\n\r\n  /**\r\n   * Return the bottom coordinate of the layout.\r\n   *\r\n   * @param  {Array} layout Layout array.\r\n   * @return {Number}       Bottom coordinate.\r\n   */\r\n  bottom(layout) {\r\n    var max = 0, bottomY;\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      bottomY = layout[i].y + layout[i].h;\r\n      if (bottomY > max) max = bottomY;\r\n    }\r\n    return max;\r\n  },\r\n\r\n  /**\r\n   * Clones a shallow object.\r\n   * @param  {Object} obj Object to clone.\r\n   * @return {Object}   Cloned object.\r\n   */\r\n  clone(obj) {\r\n    return assign({}, obj);\r\n  },\r\n\r\n  /**\r\n   * Given two layouts, check if they collide.\r\n   *\r\n   * @param  {Object} l1 Layout object.\r\n   * @param  {Object} l2 Layout object.\r\n   * @return {Boolean}   True if colliding.\r\n   */\r\n  collides(l1, l2) {\r\n    if (l1 === l2) return false; // same element\r\n    if (l1.x + l1.w <= l2.x) return false; // l1 is left of l2\r\n    if (l1.x >= l2.x + l2.w) return false; // l1 is right of l2\r\n    if (l1.y + l1.h <= l2.y) return false; // l1 is above l2\r\n    if (l1.y >= l2.y + l2.h) return false; // l1 is below l2\r\n    return true; // boxes overlap\r\n  },\r\n\r\n  /**\r\n   * Given a layout, compact it. This involves going down each y coordinate and removing gaps\r\n   * between items.\r\n   *\r\n   * @param  {Array} layout Layout.\r\n   * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n   *   vertically.\r\n   * @return {Array}       Compacted Layout.\r\n   */\r\n  compact(layout, verticalCompact) {\r\n    // Statics go in the compareWith array right away so items flow around them.\r\n    var compareWith = utils.getStatics(layout), out = [];\r\n    // We go through the items by row and column.\r\n    var sorted = utils.sortLayoutItemsByRowCol(layout);\r\n\r\n    for (var i = 0, len = sorted.length; i < len; i++) {\r\n      var l = sorted[i];\r\n\r\n      // Don't move static elements\r\n      if (!l.static) {\r\n        l = utils.compactItem(compareWith, l, verticalCompact);\r\n\r\n        // Add to comparison array. We only collide with items before this one.\r\n        // Statics are already in this array.\r\n        compareWith.push(l);\r\n      }\r\n\r\n      // Add to output array to make sure they still come out in the right order.\r\n      out[layout.indexOf(l)] = l;\r\n\r\n      // Clear moved flag, if it exists.\r\n      delete l.moved;\r\n    }\r\n\r\n    return out;\r\n  },\r\n\r\n  compactItem(compareWith, l, verticalCompact) {\r\n    if (verticalCompact) {\r\n      // Move the element up as far as it can go without colliding.\r\n      while (l.y > 0 && !utils.getFirstCollision(compareWith, l)) {\r\n        l.y--;\r\n      }\r\n    }\r\n\r\n    // Move it down, and keep moving it down if it's colliding.\r\n    var collides;\r\n    while((collides = utils.getFirstCollision(compareWith, l))) {\r\n      l.y = collides.y + collides.h;\r\n    }\r\n    return l;\r\n  },\r\n\r\n  /**\r\n   * Given a layout, make sure all elements fit within its bounds.\r\n   *\r\n   * @param  {Array} layout Layout array.\r\n   * @param  {Number} bounds Number of columns.\r\n   * @return {[type]}        [description]\r\n   */\r\n  correctBounds(layout, bounds) {\r\n    var collidesWith = utils.getStatics(layout);\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      var l = layout[i];\r\n      // Overflows right\r\n      if (l.x + l.w > bounds.cols) l.x = bounds.cols - l.w;\r\n      // Overflows left\r\n      if (l.x < 0) {\r\n        l.x = 0;\r\n        l.w = bounds.cols;\r\n      }\r\n      if (!l.static) collidesWith.push(l);\r\n      else {\r\n        // If this is static and collides with other statics, we must move it down.\r\n        // We have to do something nicer than just letting them overlap.\r\n        while(utils.getFirstCollision(collidesWith, l)) {\r\n          l.y++;\r\n        }\r\n      }\r\n\r\n    }\r\n    return layout;\r\n  },\r\n\r\n  /**\r\n   * Get a layout item by ID. Used so we can override later on if necessary.\r\n   *\r\n   * @param  {Array}  layout Layout array.\r\n   * @param  {Number} id     ID\r\n   * @return {LayoutItem}    Item at ID.\r\n   */\r\n  getLayoutItem(layout, id) {\r\n    id = \"\" + id;\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      if (\"\" + layout[i].i === id) return layout[i];\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Returns the first item this layout collides with.\r\n   * It doesn't appear to matter which order we approach this from, although\r\n   * perhaps that is the wrong thing to do.\r\n   *\r\n   * @param  {Object} layoutItem Layout item.\r\n   * @return {Object|undefined}  A colliding layout item, or undefined.\r\n   */\r\n  getFirstCollision(layout, layoutItem) {\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      if (utils.collides(layout[i], layoutItem)) return layout[i];\r\n    }\r\n  },\r\n\r\n  getAllCollisions(layout, layoutItem) {\r\n    var out = [];\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      if (utils.collides(layout[i], layoutItem)) out.push(layout[i]);\r\n    }\r\n    return out;\r\n  },\r\n\r\n  /**\r\n   * Get all static elements.\r\n   * @param  {Array} layout Array of layout objects.\r\n   * @return {Array}        Array of static layout items..\r\n   */\r\n  getStatics(layout) {\r\n    var out = [];\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      if (layout[i].static) out.push(layout[i]);\r\n    }\r\n    return out;\r\n  },\r\n\r\n  /**\r\n   * Move an element. Responsible for doing cascading movements of other elements.\r\n   *\r\n   * @param  {Array}      layout Full layout to modify.\r\n   * @param  {LayoutItem} l      element to move.\r\n   * @param  {Number}     [x]    X position in grid units.\r\n   * @param  {Number}     [y]    Y position in grid units.\r\n   * @param  {Boolean}    [isUserAction] If true, designates that the item we're moving is\r\n   *                                     being dragged/resized by th euser.\r\n   */\r\n  moveElement(layout, l, x, y, isUserAction) {\r\n    if (l.static) return layout;\r\n\r\n    // Short-circuit if nothing to do.\r\n    if (l.y === y && l.x === x) return layout;\r\n\r\n    var movingUp = l.y > y;\r\n    // This is quite a bit faster than extending the object\r\n    if (x !== undefined) l.x = x;\r\n    if (y !== undefined) l.y = y;\r\n    l.moved = true;\r\n\r\n    // If this collides with anything, move it.\r\n    // When doing this comparison, we have to sort the items we compare with\r\n    // to ensure, in the case of multiple collisions, that we're getting the\r\n    // nearest collision.\r\n    var sorted = utils.sortLayoutItemsByRowCol(layout);\r\n    if (movingUp) sorted = sorted.reverse();\r\n    var collisions = utils.getAllCollisions(sorted, l);\r\n\r\n    // Move each item that collides away from this element.\r\n    for (var i = 0, len = collisions.length; i < len; i++) {\r\n      var collision = collisions[i];\r\n      // console.log('resolving collision between', l.i, 'at', l.y, 'and', collision.i, 'at', collision.y);\r\n\r\n      // Short circuit so we can't infinite loop\r\n      if (collision.moved) continue;\r\n\r\n      // This makes it feel a bit more precise by waiting to swap for just a bit when moving up.\r\n      if (l.y > collision.y && l.y - collision.y > collision.h / 4) continue;\r\n\r\n      // Don't move static items - we have to move *this* element away\r\n      if (collision.static) {\r\n        layout = utils.moveElementAwayFromCollision(layout, collision, l, isUserAction);\r\n      } else {\r\n        layout = utils.moveElementAwayFromCollision(layout, l, collision, isUserAction);\r\n      }\r\n    }\r\n\r\n    return layout;\r\n  },\r\n\r\n  /**\r\n   * This is where the magic needs to happen - given a collision, move an element away from the collision.\r\n   * We attempt to move it up if there's room, otherwise it goes below.\r\n   *\r\n   * @param  {Array} layout            Full layout to modify.\r\n   * @param  {LayoutItem} collidesWith Layout item we're colliding with.\r\n   * @param  {LayoutItem} itemToMove   Layout item we're moving.\r\n   * @param  {Boolean} [isUserAction]  If true, designates that the item we're moving is being dragged/resized\r\n   *                                   by the user.\r\n   */\r\n  moveElementAwayFromCollision(layout, collidesWith, itemToMove, isUserAction) {\r\n\r\n    // If there is enough space above the collision to put this element, move it there.\r\n    // We only do this on the main collision as this can get funky in cascades and cause\r\n    // unwanted swapping behavior.\r\n    if (isUserAction) {\r\n      // Make a mock item so we don't modify the item here, only modify in moveElement.\r\n      var fakeItem = {\r\n        x: itemToMove.x,\r\n        y: itemToMove.y,\r\n        w: itemToMove.w,\r\n        h: itemToMove.h\r\n      };\r\n      fakeItem.y = Math.max(collidesWith.y - itemToMove.h, 0);\r\n      if (!utils.getFirstCollision(layout, fakeItem)) {\r\n        return utils.moveElement(layout, itemToMove, undefined, fakeItem.y);\r\n      }\r\n    }\r\n\r\n    // Previously this was optimized to move below the collision directly, but this can cause problems\r\n    // with cascading moves, as an item may actually leapflog a collision and cause a reversal in order.\r\n    return utils.moveElement(layout, itemToMove, undefined, itemToMove.y + 1);\r\n  },\r\n\r\n  /**\r\n   * Helper to convert a number to a percentage string.\r\n   *\r\n   * @param  {Number} num Any number\r\n   * @return {String}     That number as a percentage.\r\n   */\r\n  perc(num) {\r\n    return num * 100 + '%';\r\n  },\r\n\r\n  setTransform(style, coords) {\r\n    // Replace unitless items with px\r\n    var x = ('' + coords[0]).replace(/(\\d)$/, '$1px');\r\n    var y = ('' + coords[1]).replace(/(\\d)$/, '$1px');\r\n    style.transform = \"translate(\" + x + \",\" + y + \")\";\r\n    style.WebkitTransform = \"translate(\" + x + \",\" + y + \")\";\r\n    style.MozTransform = \"translate(\" + x + \",\" + y + \")\";\r\n    style.msTransform = \"translate(\" + x + \",\" + y + \")\";\r\n    style.OTransform = \"translate(\" + x + \",\" + y + \")\";\r\n    return style;\r\n  },\r\n\r\n  /**\r\n   * Get layout items sorted from top left to right and down.\r\n   *\r\n   * @return {Array} Array of layout objects.\r\n   * @return {Array}        Layout, sorted static items first.\r\n   */\r\n  sortLayoutItemsByRowCol(layout) {\r\n    return [].concat(layout).sort(function(a, b) {\r\n      if (a.y > b.y || (a.y === b.y && a.x > b.x)) {\r\n        return 1;\r\n      }\r\n      return -1;\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Generate a layout using the initialLayout and children as a template.\r\n   * Missing entries will be added, extraneous ones will be truncated.\r\n   *\r\n   * @param  {Array}  initialLayout Layout passed in through props.\r\n   * @param  {String} breakpoint    Current responsive breakpoint.\r\n   * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n   *   vertically.\r\n   * @return {Array}                Working layout.\r\n   */\r\n  synchronizeLayoutWithChildren(initialLayout, children, cols, verticalCompact) {\r\n    // ensure 'children' is always an array\r\n    if (!Array.isArray(children)) {\r\n      children = [children];\r\n    }\r\n    initialLayout = initialLayout || [];\r\n\r\n    // Generate one layout item per child.\r\n    var layout = [];\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n      var child = children[i];\r\n      // Don't overwrite if it already exists.\r\n      var exists = utils.getLayoutItem(initialLayout, child.key);\r\n      if (exists) {\r\n        // Ensure 'i' is always a string\r\n        exists.i = '' + exists.i;\r\n        layout.push(exists);\r\n        continue;\r\n      }\r\n      // New item: attempt to use a layout item from the child, if it exists.\r\n      var g = child.props._grid;\r\n      if (g) {\r\n        utils.validateLayout([g], 'ReactGridLayout.child');\r\n        // Validated; add it to the layout. Bottom 'y' possible is the bottom of the layout.\r\n        // This allows you to do nice stuff like specify {y: Infinity}\r\n        if (verticalCompact) {\r\n          layout.push(assign({}, g, {y: Math.min(utils.bottom(layout), g.y), i: child.key}));\r\n        } else {\r\n          layout.push(assign({}, g, {y: g.y, i:child.key}));\r\n        }\r\n      } else {\r\n        // Nothing provided: ensure this is added to the bottom\r\n        layout.push({w: 1, h: 1, x: 0, y: utils.bottom(layout), i: child.key});\r\n      }\r\n    }\r\n\r\n    // Correct the layout.\r\n    layout = utils.correctBounds(layout, {cols: cols});\r\n    layout = utils.compact(layout, verticalCompact);\r\n\r\n    return layout;\r\n  },\r\n\r\n  /**\r\n   * Validate a layout. Throws errors.\r\n   *\r\n   * @param  {Array}  layout        Array of layout items.\r\n   * @param  {String} [contextName] Context name for errors.\r\n   * @throw  {Error}                Validation error.\r\n   */\r\n  validateLayout(layout, contextName) {\r\n    contextName = contextName || \"Layout\";\r\n    var subProps = ['x', 'y', 'w', 'h'];\r\n    if (!Array.isArray(layout)) throw new Error(contextName + \" must be an array!\");\r\n    for (var i = 0, len = layout.length; i < len; i++) {\r\n      for (var j = 0; j < subProps.length; j++) {\r\n        if (typeof layout[i][subProps[j]] !== 'number') {\r\n          throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].' + subProps[j] + ' must be a Number!');\r\n        }\r\n      }\r\n      if (layout[i].static !== undefined && typeof layout[i].static !== 'boolean') {\r\n        throw new Error('ReactGridLayout: ' + contextName + '[' + i + '].static must be a Boolean!');\r\n      }\r\n    }\r\n  }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/utils.js\n **/","'use strict';\r\nvar deepEqual = require('deep-equal');\r\n\r\n// Like PureRenderMixin, but with deep comparisons.\r\nvar PureDeepRenderMixin = {\r\n  shouldComponentUpdate: function(nextProps, nextState) {\r\n    return !deepEqual(this.props, nextProps) ||\r\n           !deepEqual(this.state, nextState);\r\n  }\r\n};\r\n\r\nmodule.exports = PureDeepRenderMixin;\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/mixins/PureDeepRenderMixin.js\n **/","'use strict';\n\nfunction ToObject(val) {\n\tif (val == null) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar keys;\n\tvar to = ToObject(target);\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = arguments[s];\n\t\tkeys = Object.keys(Object(from));\n\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tto[keys[i]] = from[keys[i]];\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Object.assign.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n\"use strict\";\n\nvar emptyFunction = require(\"./emptyFunction\");\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== process.env.NODE_ENV) {\n  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || /^[s\\W]*$/.test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});\n      console.warn(message);\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/warning.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\r\nvar React = require('react');\r\nvar GridItem = require('./GridItem');\r\nvar utils = require('./utils');\r\nvar PureDeepRenderMixin = require('./mixins/PureDeepRenderMixin');\r\nvar WidthListeningMixin = require('./mixins/WidthListeningMixin');\r\n\r\n/**\r\n * A reactive, fluid grid layout with draggable, resizable components.\r\n */\r\nvar ReactGridLayout = React.createClass({\r\n  mixins: [PureDeepRenderMixin, WidthListeningMixin],\r\n\r\n  propTypes: {\r\n    //\r\n    // Basic props\r\n    //\r\n\r\n    // If true, the container height swells and contracts to fit contents\r\n    autoSize: React.PropTypes.bool,\r\n    // # of cols.\r\n    cols: React.PropTypes.number,\r\n\r\n    // A selector that will not be draggable.\r\n    draggableCancel: React.PropTypes.string,\r\n    // A selector for the draggable handler\r\n    draggableHandle: React.PropTypes.string,\r\n\r\n    // If true, the layout will compact vertically\r\n    verticalCompact: React.PropTypes.bool,\r\n\r\n    // layout is an array of object with the format:\r\n    // {x: Number, y: Number, w: Number, h: Number, i: Number}\r\n    layout: function(props, propName, componentName) {\r\n      var layout = props.layout;\r\n      // I hope you're setting the _grid property on the grid items\r\n      if (layout === undefined) return;\r\n      utils.validateLayout(layout, 'layout');\r\n    },\r\n\r\n    layouts: function(props, propName, componentName) {\r\n      if (props.layouts) {\r\n        throw new Error(\"ReactGridLayout does not use `layouts`: Use ReactGridLayout.Responsive.\");\r\n      }\r\n    },\r\n\r\n    // margin between items [x, y] in px\r\n    margin: React.PropTypes.array,\r\n    // Rows have a static height, but you can change this based on breakpoints if you like\r\n    rowHeight: React.PropTypes.number,\r\n\r\n    //\r\n    // Flags\r\n    //\r\n    isDraggable: React.PropTypes.bool,\r\n    isResizable: React.PropTypes.bool,\r\n    // Use CSS transforms instead of top/left\r\n    useCSSTransforms: React.PropTypes.bool,\r\n\r\n    //\r\n    // Callbacks\r\n    //\r\n\r\n    // Callback so you can save the layout.\r\n    // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\r\n    onLayoutChange: React.PropTypes.func,\r\n\r\n    // Calls when drag starts. Callback is of the signature (layout, oldItem, newItem, placeholder, e).\r\n    // All callbacks below have the same signature. 'start' and 'stop' callbacks omit the 'placeholder'.\r\n    onDragStart: React.PropTypes.func,\r\n    // Calls on each drag movement.\r\n    onDrag: React.PropTypes.func,\r\n    // Calls when drag is complete.\r\n    onDragStop: React.PropTypes.func,\r\n    //Calls when resize starts.\r\n    onResizeStart: React.PropTypes.func,\r\n    // Calls when resize movement happens.\r\n    onResize: React.PropTypes.func,\r\n    // Calls when resize is complete.\r\n    onResizeStop: React.PropTypes.func,\r\n\r\n    //\r\n    // Other validations\r\n    //\r\n\r\n    // Children must not have duplicate keys.\r\n    children: function(props, propName, componentName) {\r\n      React.PropTypes.node.apply(this, arguments);\r\n      var children = props[propName];\r\n\r\n      // Check children keys for duplicates. Throw if found.\r\n      var keys = {};\r\n      React.Children.forEach(children, function(child, i, list) {\r\n        if (keys[child.key]) {\r\n          throw new Error(\"Duplicate child key found! This will cause problems in ReactGridLayout.\");\r\n        }\r\n        keys[child.key] = true;\r\n      });\r\n    }\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      autoSize: true,\r\n      cols: 12,\r\n      rowHeight: 150,\r\n      layout: [],\r\n      margin: [10, 10],\r\n      isDraggable: true,\r\n      isResizable: true,\r\n      useCSSTransforms: true,\r\n      verticalCompact: true,\r\n      onLayoutChange: function(){},\r\n      onDragStart: function() {},\r\n      onDrag: function() {},\r\n      onDragStop: function() {},\r\n      onResizeStart: function() {},\r\n      onResize: function() {},\r\n      onResizeStop: function() {}\r\n    };\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      activeDrag: null,\r\n      isMounted: false,\r\n      layout: utils.synchronizeLayoutWithChildren(this.props.layout, this.props.children, this.props.cols, this.props.verticalCompact),\r\n      width: this.props.initialWidth,\r\n      oldDragItem: null,\r\n      oldResizeItem: null\r\n    };\r\n  },\r\n\r\n  componentDidMount() {\r\n    // Call back with layout on mount. This should be done after correcting the layout width\r\n    // to ensure we don't rerender with the wrong width.\r\n    this.props.onLayoutChange(this.state.layout);\r\n    this.setState({isMounted: true});\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // This allows you to set the width manually if you like.\r\n    // Use manual width changes in combination with `listenToWindowResize: false`\r\n    if (nextProps.width !== this.props.width) this.onWidthChange(nextProps.width);\r\n\r\n    // If children change, regenerate the layout.\r\n    if (nextProps.children.length !== this.props.children.length) {\r\n      this.setState({\r\n        layout: utils.synchronizeLayoutWithChildren(this.state.layout, nextProps.children, nextProps.cols, this.props.verticalCompact)\r\n      });\r\n    }\r\n\r\n    // Allow parent to set layout directly.\r\n    if (nextProps.layout && JSON.stringify(nextProps.layout) !== JSON.stringify(this.state.layout)) {\r\n      this.setState({\r\n        layout: utils.synchronizeLayoutWithChildren(nextProps.layout, nextProps.children, nextProps.cols, this.props.verticalCompact)\r\n      });\r\n    }\r\n  },\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Call back so we can store the layout\r\n    // Do it only when a resize/drag is not active, otherwise there are way too many callbacks\r\n    if (this.state.layout !== prevState.layout && !this.state.activeDrag) {\r\n      this.props.onLayoutChange(this.state.layout, this.state.layouts);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Calculates a pixel value for the container.\r\n   * @return {String} Container height in pixels.\r\n   */\r\n  containerHeight() {\r\n    if (!this.props.autoSize) return;\r\n    return utils.bottom(this.state.layout) * this.props.rowHeight + this.props.margin[1] + 'px';\r\n  },\r\n\r\n  /**\r\n   * When the width changes, save it to state. This helps with left/width calculations.\r\n   */\r\n  onWidthChange(width) {\r\n    this.setState({width: width});\r\n  },\r\n\r\n  /**\r\n   * When dragging starts\r\n   * @param {Number} i Index of the child\r\n   * @param {Number} x X position of the move\r\n   * @param {Number} y Y position of the move\r\n   * @param {Event} e The mousedown event\r\n   * @param {Element} element The current dragging DOM element\r\n   * @param {Object} position Drag information\r\n   */\r\n  onDragStart(i, x, y, {e, element, position}) {\r\n    var layout = this.state.layout;\r\n    var l = utils.getLayoutItem(layout, i);\r\n\r\n    this.setState({oldDragItem: utils.clone(l)});\r\n\r\n    this.props.onDragStart(layout, l, l, null, e);\r\n  },\r\n  /**\r\n   * Each drag movement create a new dragelement and move the element to the dragged location\r\n   * @param {Number} i Index of the child\r\n   * @param {Number} x X position of the move\r\n   * @param {Number} y Y position of the move\r\n   * @param {Event} e The mousedown event\r\n   * @param {Element} element The current dragging DOM element\r\n   * @param {Object} position Drag information\r\n   */\r\n  onDrag(i, x, y, {e, element, position}) {\r\n    var layout = this.state.layout;\r\n    var l = utils.getLayoutItem(layout, i);\r\n    var oldL = this.state.oldDragItem;\r\n\r\n    // Create placeholder (display only)\r\n    var placeholder = {\r\n      w: l.w, h: l.h, x: l.x, y: l.y, placeholder: true, i: i\r\n    };\r\n\r\n    // Move the element to the dragged location.\r\n    layout = utils.moveElement(layout, l, x, y, true /* isUserAction */);\r\n\r\n    this.props.onDrag(layout, oldL, l, placeholder, e);\r\n\r\n\r\n    this.setState({\r\n      layout: utils.compact(layout, this.props.verticalCompact),\r\n      activeDrag: placeholder\r\n    });\r\n  },\r\n\r\n  /**\r\n   * When dragging stops, figure out which position the element is closest to and update its x and y.\r\n   * @param  {Number} i Index of the child.\r\n   * @param {Number} i Index of the child\r\n   * @param {Number} x X position of the move\r\n   * @param {Number} y Y position of the move\r\n   * @param {Event} e The mousedown event\r\n   * @param {Element} element The current dragging DOM element\r\n   * @param {Object} position Drag information\r\n   */\r\n  onDragStop(i, x, y, {e, element, position}) {\r\n    var layout = this.state.layout;\r\n    var l = utils.getLayoutItem(layout, i);\r\n    var oldL = this.state.oldDragItem;\r\n\r\n    // Move the element here\r\n    layout = utils.moveElement(layout, l, x, y, true /* isUserAction */);\r\n\r\n    this.props.onDragStop(layout, oldL, l, null, e);\r\n\r\n    // Set state\r\n    this.setState({\r\n      layout: utils.compact(layout, this.props.verticalCompact),\r\n      activeDrag: null,\r\n      oldDragItem: null\r\n    });\r\n  },\r\n\r\n  onResizeStart(i, w, h, {e, element, size}) {\r\n    var layout = this.state.layout;\r\n    var l = utils.getLayoutItem(layout, i);\r\n\r\n    this.setState({oldResizeItem: utils.clone(l)});\r\n\r\n    this.props.onResizeStart(layout, l, l, null, e);\r\n  },\r\n\r\n  onResize(i, w, h, {e, element, size}) {\r\n    var layout = this.state.layout;\r\n    var l = utils.getLayoutItem(layout, i);\r\n    var oldL = this.state.oldResizeItem;\r\n\r\n    // Set new width and height.\r\n    l.w = w;\r\n    l.h = h;\r\n\r\n    // Create placeholder element (display only)\r\n    var placeholder = {\r\n      w: w, h: h, x: l.x, y: l.y, placeholder: true, i: i\r\n    };\r\n\r\n    this.props.onResize(layout, oldL, l, placeholder, e);\r\n\r\n    // Re-compact the layout and set the drag placeholder.\r\n    this.setState({ layout: utils.compact(layout, this.props.verticalCompact), activeDrag: placeholder });\r\n  },\r\n\r\n  onResizeStop(i, x, y, {e, element, size}) {\r\n    var layout = this.state.layout;\r\n    var l = utils.getLayoutItem(layout, i);\r\n    var oldL = this.state.oldResizeItem;\r\n\r\n    this.props.onResizeStop(layout, oldL, l, null, e);\r\n\r\n    this.setState({\r\n      layout: utils.compact(layout, this.props.verticalCompact),\r\n      activeDrag: null,\r\n      oldResizeItem: null\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Create a placeholder object.\r\n   * @return {Element} Placeholder div.\r\n   */\r\n  placeholder() {\r\n    if (!this.state.activeDrag) return '';\r\n\r\n    // {...this.state.activeDrag} is pretty slow, actually\r\n    return (\r\n      <GridItem\r\n        w={this.state.activeDrag.w}\r\n        h={this.state.activeDrag.h}\r\n        x={this.state.activeDrag.x}\r\n        y={this.state.activeDrag.y}\r\n        i={this.state.activeDrag.i}\r\n        isPlaceholder={true}\r\n        className=\"react-grid-placeholder\"\r\n        containerWidth={this.state.width}\r\n        cols={this.props.cols}\r\n        margin={this.props.margin}\r\n        rowHeight={this.props.rowHeight}\r\n        isDraggable={false}\r\n        isResizable={false}\r\n        useCSSTransforms={this.props.useCSSTransforms}\r\n        >\r\n        <div />\r\n      </GridItem>\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\r\n   * @param  {Element} child React element.\r\n   * @param  {Number}  i     Index of element.\r\n   * @return {Element}       Element wrapped in draggable and properly placed.\r\n   */\r\n  processGridItem(child) {\r\n    var i = child.key;\r\n    var l = utils.getLayoutItem(this.state.layout, i);\r\n\r\n    // watchStart property tells Draggable to react to changes in the start param\r\n    // Must be turned off on the item we're dragging as the changes in `activeDrag` cause rerenders\r\n    var moveOnStartChange = !(this.state.activeDrag && this.state.activeDrag.i === i);\r\n\r\n    // Parse 'static'. Any properties defined directly on the grid item will take precedence.\r\n    var draggable, resizable;\r\n    if (l.static || this.props.isDraggable === false) draggable = false;\r\n    if (l.static || this.props.isResizable === false) resizable = false;\r\n\r\n    return (\r\n      <GridItem\r\n        containerWidth={this.state.width}\r\n        cols={this.props.cols}\r\n        margin={this.props.margin}\r\n        rowHeight={this.props.rowHeight}\r\n        moveOnStartChange={moveOnStartChange}\r\n        cancel={this.props.draggableCancel}\r\n        handle={this.props.draggableHandle}\r\n        onDragStop={this.onDragStop}\r\n        onDragStart={this.onDragStart}\r\n        onDrag={this.onDrag}\r\n        onResizeStart={this.onResizeStart}\r\n        onResize={this.onResize}\r\n        onResizeStop={this.onResizeStop}\r\n        isDraggable={draggable}\r\n        isResizable={resizable}\r\n        useCSSTransforms={this.props.useCSSTransforms && this.state.isMounted}\r\n        usePercentages={!this.state.isMounted}\r\n        {...l}\r\n        >\r\n        {child}\r\n      </GridItem>\r\n    );\r\n  },\r\n\r\n  render() {\r\n    // Calculate classname\r\n    var {className, ...props} = this.props;\r\n    className = 'react-grid-layout ' + (className || '');\r\n\r\n    return (\r\n      <div {...props} className={className} style={{height: this.containerHeight()}}>\r\n        {React.Children.map(this.props.children, this.processGridItem)}\r\n        {this.placeholder()}\r\n      </div>\r\n    );\r\n  }\r\n});\r\n\r\nmodule.exports = ReactGridLayout;\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/ReactGridLayout.jsx\n **/","'use strict';\r\nvar React = require('react');\r\n\r\n/**\r\n * A simple mixin that provides facility for listening to container resizes.\r\n */\r\nvar WidthListeningMixin = {\r\n\r\n  propTypes: {\r\n    // This allows setting this on the server side\r\n    initialWidth: React.PropTypes.number,\r\n\r\n    // If false, you should supply width yourself. Good if you want to debounce resize events\r\n    // or reuse a handler from somewhere else.\r\n    listenToWindowResize: React.PropTypes.bool\r\n  },\r\n\r\n  getDefaultProps: function() {\r\n    return {\r\n      initialWidth: 1280,\r\n      listenToWindowResize: true\r\n    };\r\n  },\r\n\r\n  componentDidMount: function() {\r\n    if (this.props.listenToWindowResize) {\r\n      window.addEventListener('resize', this.onWindowResize);\r\n      // This is intentional. Once to properly set the breakpoint and resize the elements,\r\n      // and again to compensate for any scrollbar that appeared because of the first step.\r\n      this.onWindowResize();\r\n      this.onWindowResize();\r\n    }\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onWindowResize);\r\n  },\r\n\r\n  /**\r\n   * On window resize, update width.\r\n   */\r\n  onWindowResize: function() {\r\n    this.onWidthChange(this.getDOMNode().offsetWidth);\r\n  }\r\n\r\n};\r\n\r\nmodule.exports = WidthListeningMixin;\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/mixins/WidthListeningMixin.js\n **/","module.exports = require('./lib/draggable');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-draggable/index.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar React = require('react');\nvar Draggable = require('react-draggable');\nvar PureRenderMixin = require('react/lib/ReactComponentWithPureRenderMixin');\nvar assign = require('object-assign');\nvar cloneElement = require('./cloneElement');\n\nvar Resizable = module.exports = React.createClass({\n  displayName: 'Resizable',\n  mixins: [PureRenderMixin],\n\n  propTypes: {\n    // Require that one and only one child be present.\n    children: React.PropTypes.element.isRequired,\n    // Functions\n    onResizeStop: React.PropTypes.func,\n    onResizeStart: React.PropTypes.func,\n    onResize: React.PropTypes.func,\n\n    width: React.PropTypes.number.isRequired,\n    height: React.PropTypes.number.isRequired,\n    // If you change this, be sure to update your css\n    handleSize: React.PropTypes.array,\n    // These will be passed wholesale to react-draggable\n    draggableOpts: React.PropTypes.object\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      handleSize: [20, 20]\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      bounds: this.constraintsToBounds(),\n      initialWidth: this.props.width,\n      initialHeight: this.props.height\n    };\n  },\n\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    if (!this.state.resizing) {\n      this.setState({\n        initialWidth: props.width,\n        initialHeight: props.height,\n        bounds: this.constraintsToBounds()\n      });\n      this.refs.draggable.resetState();\n    }\n  },\n\n  constraintsToBounds: function constraintsToBounds() {\n    var p = this.props;\n    var mins = p.minConstraints || p.handleSize;\n    var maxes = p.maxConstraints || [Infinity, Infinity];\n    return {\n      left: mins[0] - p.width,\n      top: mins[1] - p.height,\n      right: maxes[0] - p.width,\n      bottom: maxes[1] - p.height\n    };\n  },\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  resizeHandler: function resizeHandler(handlerName) {\n    var me = this;\n    return function (e, _ref) {\n      var node = _ref.node;\n      var position = _ref.position;\n\n      me.props[handlerName] && me.props[handlerName](e, { node: node, size: calcWH(me.state, position) });\n\n      if (handlerName === 'onResizeStart') {\n        me.setState({ resizing: true });\n      } else if (handlerName === 'onResizeStop') {\n        me.setState({ resizing: false });\n      }\n    };\n  },\n\n  render: function render() {\n    var p = this.props,\n        s = this.state;\n\n    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // Its original children (resizable's child's children), and\n    // A draggable handle.\n    return cloneElement(p.children, assign({}, p, {\n      children: [p.children.props.children, React.createElement(\n        Draggable,\n        _extends({}, p.draggableOpts, {\n          ref: 'draggable',\n          onStop: this.resizeHandler('onResizeStop'),\n          onStart: this.resizeHandler('onResizeStart'),\n          onDrag: this.resizeHandler('onResize'),\n          bounds: this.state.bounds\n        }),\n        React.createElement('span', { className: 'react-resizable-handle' })\n      )]\n    }));\n  }\n});\n\n/**\n * Parse left and top coordinates.\n * @param  {Number} options.left Left coordinate.\n * @param  {Number} options.top  Top coordinate.\n * @return {Object}              Coordinates\n */\nfunction calcWH(_ref, _ref2) {\n  var initialWidth = _ref.initialWidth;\n  var initialHeight = _ref.initialHeight;\n  var left = _ref2.left;\n  var top = _ref2.top;\n\n  return { width: initialWidth + left, height: initialHeight + top };\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-resizable/build/Resizable.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule ReactComponentWithPureRenderMixin\n*/\n\n'use strict';\n\nvar shallowEqual = require(\"./shallowEqual\");\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this Mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n */\nvar ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate: function(nextProps, nextState) {\n    return !shallowEqual(this.props, nextProps) ||\n           !shallowEqual(this.state, nextState);\n  }\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentWithPureRenderMixin.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\nfunction makeEmptyFunction(arg) {\n  return function() {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function() { return this; };\nemptyFunction.thatReturnsArgument = function(arg) { return arg; };\n\nmodule.exports = emptyFunction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/emptyFunction.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\r\nvar React = require('react');\r\nvar cloneWithProps = require('react/lib/cloneWithProps');\r\nvar utils = require('./utils');\r\nvar Draggable = require('react-draggable');\r\nvar Resizable = require('react-resizable').Resizable;\r\nvar PureDeepRenderMixin = require('./mixins/PureDeepRenderMixin');\r\n\r\n/**\r\n * An individual item within a ReactGridLayout.\r\n */\r\nvar GridItem = React.createClass({\r\n  mixins: [PureDeepRenderMixin],\r\n\r\n  propTypes: {\r\n    // Children must be only a single element\r\n    children: React.PropTypes.element,\r\n\r\n    // General grid attributes\r\n    cols: React.PropTypes.number.isRequired,\r\n    containerWidth: React.PropTypes.number.isRequired,\r\n    rowHeight: React.PropTypes.number.isRequired,\r\n    margin: React.PropTypes.array.isRequired,\r\n\r\n    // These are all in grid units\r\n    x: React.PropTypes.number.isRequired,\r\n    y: React.PropTypes.number.isRequired,\r\n    w: React.PropTypes.number.isRequired,\r\n    h: React.PropTypes.number.isRequired,\r\n\r\n    // All optional\r\n    minW: function(props, propName, componentName) {\r\n      React.PropTypes.number.apply(this, arguments);\r\n      if (props.minW > props.w || props.minW > props.maxW) constraintError('minW', props);\r\n    },\r\n    maxW: function(props, propName, componentName) {\r\n      React.PropTypes.number.apply(this, arguments);\r\n      if (props.maxW < props.w || props.maxW < props.minW) constraintError('maxW', props);\r\n    },\r\n    minH: function(props, propName, componentName) {\r\n      React.PropTypes.number.apply(this, arguments);\r\n      if (props.minH > props.h || props.minH > props.maxH) constraintError('minH', props);\r\n    },\r\n    maxH: function(props, propName, componentName) {\r\n      React.PropTypes.number.apply(this, arguments);\r\n      if (props.maxH < props.h || props.maxH < props.minH) constraintError('maxH', props);\r\n    },\r\n\r\n    // ID is nice to have for callbacks\r\n    i: React.PropTypes.string.isRequired,\r\n\r\n    // If true, item will be repositioned when x/y/w/h change\r\n    moveOnStartChange: React.PropTypes.bool,\r\n\r\n    // Functions\r\n    onDragStop: React.PropTypes.func,\r\n    onDragStart: React.PropTypes.func,\r\n    onDrag: React.PropTypes.func,\r\n    onResizeStop: React.PropTypes.func,\r\n    onResizeStart: React.PropTypes.func,\r\n    onResize: React.PropTypes.func,\r\n\r\n    // Flags\r\n    isDraggable: React.PropTypes.bool,\r\n    isResizable: React.PropTypes.bool,\r\n    // Use CSS transforms instead of top/left\r\n    useCSSTransforms: React.PropTypes.bool,\r\n    isPlaceholder: React.PropTypes.bool,\r\n\r\n    // Others\r\n    className: React.PropTypes.string,\r\n    // Selector for draggable handle\r\n    handle: React.PropTypes.string,\r\n    // Selector for draggable cancel (see react-draggable)\r\n    cancel: React.PropTypes.string\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      isDraggable: true,\r\n      isResizable: true,\r\n      useCSSTransforms: true,\r\n      className: '',\r\n      cancel: '',\r\n      minH: 1,\r\n      minW: 1,\r\n      maxH: Infinity,\r\n      maxW: Infinity\r\n    };\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      resizing: false,\r\n      className: ''\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Return position on the page given an x, y, w, h.\r\n   * left, top, width, height are all in pixels.\r\n   * @param  {Number}  x             X coordinate in grid units.\r\n   * @param  {Number}  y             Y coordinate in grid units.\r\n   * @param  {Number}  w             W coordinate in grid units.\r\n   * @param  {Number}  h             H coordinate in grid units.\r\n   * @return {Object}                Object containing coords.\r\n   */\r\n  calcPosition(x, y, w, h) {\r\n    var p = this.props;\r\n    var width = p.containerWidth - p.margin[0];\r\n    var out = {\r\n      left: width * (x / p.cols) + p.margin[0],\r\n      top: p.rowHeight * y + p.margin[1],\r\n      width: width * (w / p.cols) - p.margin[0],\r\n      height: h * p.rowHeight - p.margin[1]\r\n    };\r\n    return out;\r\n  },\r\n\r\n  /**\r\n   * Translate x and y coordinates from pixels to grid units.\r\n   * @param  {Number} options.left  Left offset in pixels.\r\n   * @param  {Number} options.top   Top offset in pixels.\r\n   * @return {Object}               x and y in grid units.\r\n   */\r\n  calcXY({left, top}) {\r\n    left = left - this.props.margin[0];\r\n    top = top - this.props.margin[1];\r\n    // This is intentional; because so much of the logic on moving boxes up/down relies\r\n    // on an exact y position, we only round the x, not the y.\r\n    var x = Math.round((left / this.props.containerWidth) * this.props.cols);\r\n    var y = Math.floor(top / this.props.rowHeight);\r\n    x = Math.max(Math.min(x, this.props.cols), 0);\r\n    y = Math.max(y, 0);\r\n    return {x, y};\r\n  },\r\n\r\n  /**\r\n   * Given a height and width in pixel values, calculate grid units.\r\n   * @param  {Number} options.height Height in pixels.\r\n   * @param  {Number} options.width  Width in pixels.\r\n   * @return {Object}                w, h as grid units.\r\n   */\r\n  calcWH({height, width}) {\r\n    width = width + this.props.margin[0];\r\n    height = height + this.props.margin[1];\r\n    var w = Math.round((width / this.props.containerWidth) * this.props.cols);\r\n    var h = Math.round(height / this.props.rowHeight);\r\n    w = Math.max(Math.min(w, this.props.cols - this.props.x), 0);\r\n    h = Math.max(h, 0);\r\n    return {w, h};\r\n  },\r\n\r\n  /**\r\n   * This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\r\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\r\n   * we don't know exactly what the browser viewport is.\r\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\r\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\r\n   *\r\n   * @param  {Object} pos Position object with width, height, left, top.\r\n   * @return {Object}     Style object.\r\n   */\r\n  createStyle(pos) {\r\n    var style = {\r\n      width: pos.width + 'px',\r\n      height: pos.height + 'px',\r\n      left: pos.left + 'px',\r\n      top: pos.top + 'px',\r\n      position: 'absolute'\r\n    };\r\n\r\n    // This is used for server rendering.\r\n    if (this.props.usePercentages) {\r\n      pos.left = utils.perc(pos.left / this.props.containerWidth);\r\n      style.left = pos.left;\r\n      style.width = utils.perc(pos.width / this.props.containerWidth);\r\n    }\r\n\r\n    // CSS Transforms support\r\n    if (this.props.useCSSTransforms) {\r\n      utils.setTransform(style, [pos.left, pos.top]);\r\n      delete style.left;\r\n      delete style.top;\r\n    }\r\n\r\n    return style;\r\n  },\r\n\r\n  /**\r\n   * Mix a Draggable instance into a child.\r\n   * @param  {Element} child    Child element.\r\n   * @param  {Object} position  Position object (pixel values)\r\n   * @return {Element}          Child wrapped in Draggable.\r\n   */\r\n  mixinDraggable(child, position) {\r\n    var start = typeof position.left === \"string\" ? undefined : {x: position.left, y: position.top};\r\n    return (\r\n      <Draggable\r\n        start={start}\r\n        moveOnStartChange={this.props.moveOnStartChange}\r\n        onStop={this.onDragHandler('onDragStop')}\r\n        onStart={this.onDragHandler('onDragStart')}\r\n        onDrag={this.onDragHandler('onDrag')}\r\n        handle={this.props.handle}\r\n        cancel={\".react-resizable-handle \" + this.props.cancel}\r\n        useCSSTransforms={this.props.useCSSTransforms}\r\n        >\r\n        {child}\r\n      </Draggable>\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Mix a Resizable instance into a child.\r\n   * @param  {Element} child    Child element.\r\n   * @param  {Object} position  Position object (pixel values)\r\n   * @return {Element}          Child wrapped in Resizable.\r\n   */\r\n  mixinResizable(child, position) {\r\n    var p = this.props;\r\n    // This is the max possible width - doesn't go to infinity because of the width of the window\r\n    var maxWidth = this.calcPosition(0, 0, p.cols - p.x, 0).width;\r\n\r\n    // Calculate min/max constraints using our min & maxes\r\n    var mins = this.calcPosition(0, 0, p.minW, p.minH);\r\n    var maxes = this.calcPosition(0, 0, p.maxW, p.maxH);\r\n    var minConstraints = [mins.width, mins.height];\r\n    var maxConstraints = [Math.min(maxes.width, maxWidth), Math.min(maxes.height, Infinity)];\r\n    return (\r\n      <Resizable\r\n        width={position.width}\r\n        height={position.height}\r\n        minConstraints={minConstraints}\r\n        maxConstraints={maxConstraints}\r\n        onResizeStop={this.onResizeHandler('onResizeStop')}\r\n        onResizeStart={this.onResizeHandler('onResizeStart')}\r\n        onResize={this.onResizeHandler('onResize')}\r\n        >\r\n        {child}\r\n      </Resizable>\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Wrapper around drag events to provide more useful data.\r\n   * All drag events call the function with the given handler name,\r\n   * with the signature (index, x, y).\r\n   *\r\n   * @param  {String} handlerName Handler name to wrap.\r\n   * @return {Function}           Handler function.\r\n   */\r\n  onDragHandler(handlerName) {\r\n    var me = this;\r\n    return function(e, {element, position}) {\r\n      if (!me.props[handlerName]) return;\r\n      // Get new XY\r\n      var {x, y} = me.calcXY(position);\r\n\r\n      // Cap x at numCols\r\n      x = Math.min(x, me.props.cols - me.props.w);\r\n\r\n      me.props[handlerName](me.props.i, x, y, {e, element, position});\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Wrapper around drag events to provide more useful data.\r\n   * All drag events call the function with the given handler name,\r\n   * with the signature (index, x, y).\r\n   *\r\n   * @param  {String} handlerName Handler name to wrap.\r\n   * @return {Function}           Handler function.\r\n   */\r\n  onResizeHandler(handlerName) {\r\n    var me = this;\r\n    return function(e, {element, size}) {\r\n      if (!me.props[handlerName]) return;\r\n\r\n      // Get new XY\r\n      var {w, h} = me.calcWH(size);\r\n\r\n      // Cap w at numCols\r\n      w = Math.min(w, me.props.cols - me.props.x);\r\n      // Ensure w is at least 1\r\n      w = Math.max(w, 1);\r\n\r\n      // Min/max capping\r\n      w = Math.max(Math.min(w, me.props.maxW), me.props.minW);\r\n      h = Math.max(Math.min(h, me.props.maxH), me.props.minH);\r\n\r\n      me.setState({resizing: handlerName === 'onResizeStop' ? null : size});\r\n\r\n      me.props[handlerName](me.props.i, w, h, {e, element, size});\r\n    };\r\n  },\r\n\r\n  render() {\r\n    var p = this.props, pos = this.calcPosition(p.x, p.y, p.w, p.h);\r\n    if (this.state.resizing) {\r\n      pos.width = this.state.resizing.width;\r\n      pos.height = this.state.resizing.height;\r\n    }\r\n\r\n    // Create the child element. We clone the existing element but modify its className and style.\r\n    var child = cloneWithProps(this.props.children, {\r\n      // Munge a classname. Use passed in classnames and resizing.\r\n      // React with merge the classNames.\r\n      className: ['react-grid-item', this.props.className, this.state.resizing ? 'resizing' : '',\r\n        this.props.useCSSTransforms ? 'cssTransforms' : ''].join(' '),\r\n      // We can set the width and height on the child, but unfortunately we can't set the position.\r\n      style: this.createStyle(pos)\r\n    });\r\n\r\n    // Resizable support. This is usually on but the user can toggle it off.\r\n    if (this.props.isResizable) {\r\n      child = this.mixinResizable(child, pos);\r\n    }\r\n\r\n    // Draggable support. This is always on, except for with placeholders.\r\n    if (this.props.isDraggable) {\r\n      child = this.mixinDraggable(child, pos);\r\n    }\r\n\r\n    return child;\r\n  }\r\n});\r\n\r\nfunction constraintError(name, props) {\r\n  delete props.children;\r\n  throw new Error(name + ' overrides contraints on gridItem ' + props.i + '. Full props: ' + JSON.stringify(props));\r\n}\r\n\r\nmodule.exports = GridItem;\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/GridItem.jsx\n **/","'use strict';\r\nvar React = require('react');\r\nvar utils = require('./utils');\r\nvar responsiveUtils = require('./responsiveUtils');\r\nvar PureDeepRenderMixin = require('./mixins/PureDeepRenderMixin');\r\nvar WidthListeningMixin = require('./mixins/WidthListeningMixin');\r\nvar ReactGridLayout = require('./ReactGridLayout');\r\n\r\n/**\r\n * A wrapper around ReactGridLayout to support responsive breakpoints.\r\n */\r\nvar ResponsiveReactGridLayout = React.createClass({\r\n  mixins: [PureDeepRenderMixin, WidthListeningMixin],\r\n\r\n  propTypes: {\r\n    //\r\n    // Basic props\r\n    //\r\n\r\n    // Optional, but if you are managing width yourself you may want to set the breakpoint\r\n    // yourself as well.\r\n    breakpoint: React.PropTypes.string,\r\n\r\n    // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\r\n    breakpoints: React.PropTypes.object,\r\n\r\n    // # of cols. This is a breakpoint -> cols map\r\n    cols: React.PropTypes.object,\r\n\r\n    // layouts is an object mapping breakpoints to layouts.\r\n    // e.g. {lg: Layout, md: Layout, ...}\r\n    layouts: function(props, propName, componentName) {\r\n      React.PropTypes.object.isRequired.apply(this, arguments);\r\n\r\n      var layouts = props.layouts;\r\n      Object.keys(layouts).map(function(k) {\r\n        utils.validateLayout(layouts[k], 'layouts.' + k);\r\n      });\r\n    },\r\n\r\n    //\r\n    // Callbacks\r\n    //\r\n\r\n    // Calls back with breakpoint and new # cols\r\n    onBreakpointChange: React.PropTypes.func,\r\n\r\n    // Callback so you can save the layout.\r\n    // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\r\n    onLayoutChange: React.PropTypes.func\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      breakpoints: {lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0},\r\n      cols: {lg: 12, md: 10, sm: 6, xs: 4, xxs: 2},\r\n      layouts: {},\r\n      onBreakpointChange: function(){},\r\n      onLayoutChange: function(){}\r\n    };\r\n  },\r\n\r\n  getInitialState() {\r\n    var breakpoint = this.props.breakpoint ||\r\n      responsiveUtils.getBreakpointFromWidth(this.props.breakpoints, this.props.initialWidth);\r\n    var cols = responsiveUtils.getColsFromBreakpoint(breakpoint, this.props.cols);\r\n\r\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\r\n    // for this layout.\r\n    var initialLayout = responsiveUtils.findOrGenerateResponsiveLayout(\r\n      this.props.layouts, this.props.breakpoints, breakpoint, breakpoint, cols, this.props.verticalCompact);\r\n\r\n    return {\r\n      layout: initialLayout,\r\n      // storage for layouts obsoleted by breakpoints\r\n      layouts: this.props.layouts || {},\r\n      breakpoint: breakpoint,\r\n      cols: cols,\r\n      width: this.props.initialWidth\r\n    };\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // This allows you to set the width manually if you like.\r\n    // Use manual width changes in combination with `listenToWindowResize: false`\r\n    if (nextProps.width) this.onWidthChange(nextProps.width);\r\n\r\n    // Allow parent to set breakpoint directly.\r\n    if (nextProps.breakpoint !== this.props.breakpoint) {\r\n      this.onWidthChange(this.state.width);\r\n    }\r\n\r\n    // Allow parent to set layouts directly.\r\n    if (nextProps.layouts && nextProps.layouts !== this.state.layouts) {\r\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\r\n      // if one does not exist.\r\n      var newLayout = responsiveUtils.findOrGenerateResponsiveLayout(\r\n        nextProps.layouts, nextProps.breakpoints, this.state.breakpoint, this.state.breakpoint, this.state.cols, this.props.verticalLayout);\r\n\r\n      this.setState({\r\n        layouts: nextProps.layouts,\r\n        layout: newLayout\r\n      });\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Bubble this up, add `layouts` object.\r\n   * @param  {Array} layout Layout from inner Grid.\r\n   */\r\n  onLayoutChange(layout) {\r\n    this.state.layouts[this.state.breakpoint] = layout;\r\n    this.setState({layout: layout, layouts: this.state.layouts});\r\n    this.props.onLayoutChange(layout, this.state.layouts);\r\n  },\r\n\r\n  /**\r\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\r\n   * Width changes are necessary to figure out the widget widths.\r\n   */\r\n  onWidthChange(width) {\r\n    // Set new breakpoint\r\n    var newState = {width: width};\r\n    newState.breakpoint = this.props.breakpoint ||\r\n      responsiveUtils.getBreakpointFromWidth(this.props.breakpoints, newState.width);\r\n    newState.cols = responsiveUtils.getColsFromBreakpoint(newState.breakpoint, this.props.cols);\r\n\r\n    // Breakpoint change\r\n    if (newState.cols !== this.state.cols) {\r\n\r\n      // Store the current layout\r\n      newState.layouts = this.state.layouts;\r\n      newState.layouts[this.state.breakpoint] = JSON.parse(JSON.stringify(this.state.layout));\r\n\r\n      // Find or generate a new one.\r\n      newState.layout = responsiveUtils.findOrGenerateResponsiveLayout(\r\n        newState.layouts, this.props.breakpoints, newState.breakpoint, this.state.breakpoint, newState.cols, this.props.verticalLayout);\r\n\r\n      // This adds missing items.\r\n      newState.layout = utils.synchronizeLayoutWithChildren(newState.layout, this.props.children, newState.cols, this.props.verticalCompact);\r\n\r\n      // Store this new layout as well.\r\n      newState.layouts[newState.breakpoint] = newState.layout;\r\n\r\n      this.props.onBreakpointChange(newState.breakpoint, newState.cols);\r\n    }\r\n\r\n    this.setState(newState);\r\n  },\r\n\r\n\r\n  render() {\r\n    // Don't pass responsive props to RGL.\r\n    /*jshint unused:false*/\r\n    var {layouts, onBreakpointChange, breakpoints, ...props} = this.props;\r\n    return (\r\n      <ReactGridLayout {...props}\r\n          layout={this.state.layout}\r\n          cols={this.state.cols}\r\n          listenToWindowResize={false}\r\n          onLayoutChange={this.onLayoutChange}\r\n          width={this.state.width}>\r\n        {this.props.children}\r\n      </ReactGridLayout>\r\n    );\r\n  }\r\n});\r\n\r\nmodule.exports = ResponsiveReactGridLayout;\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/ResponsiveReactGridLayout.jsx\n **/","'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar responsiveUtils = module.exports = {\r\n\r\n  /**\r\n   * Given a width, find the highest breakpoint that matches is valid for it (width > breakpoint).\r\n   *\r\n   * @param  {Object} breakpoints Breakpoints object (e.g. {lg: 1200, md: 960, ...})\r\n   * @param  {Number} width Screen width.\r\n   * @return {String}       Highest breakpoint that is less than width.\r\n   */\r\n  getBreakpointFromWidth(breakpoints, width) {\r\n    var sorted = responsiveUtils.sortBreakpoints(breakpoints);\r\n    var matching = sorted[0];\r\n    for (var i = 1, len = sorted.length; i < len; i++) {\r\n      var breakpointName = sorted[i];\r\n      if (width > breakpoints[breakpointName]) matching = breakpointName;\r\n    }\r\n    return matching;\r\n  },\r\n\r\n\r\n  /**\r\n   * Given a breakpoint, get the # of cols set for it.\r\n   * @param  {String} breakpoint Breakpoint name.\r\n   * @param  {Object} cols       Map of breakpoints to cols.\r\n   * @return {Number}            Number of cols.\r\n   */\r\n  getColsFromBreakpoint(breakpoint, cols) {\r\n    if (!cols[breakpoint]) {\r\n      throw new Error(\"ResponsiveReactGridLayout: `cols` entry for breakpoint \" + breakpoint + \" is missing!\");\r\n    }\r\n    return cols[breakpoint];\r\n  },\r\n\r\n  /**\r\n   * Given existing layouts and a new breakpoint, find or generate a new layout.\r\n   *\r\n   * This finds the layout above the new one and generates from it, if it exists.\r\n   *\r\n   * @param  {Array} layouts     Existing layouts.\r\n   * @param  {Array} breakpoints All breakpoints.\r\n   * @param  {String} breakpoint New breakpoint.\r\n   * @param  {String} breakpoint Last breakpoint (for fallback).\r\n   * @param  {Number} cols       Column count at new breakpoint.\r\n   * @param  {Boolean} verticalCompact Whether or not to compact the layout\r\n   *   vertically.\r\n   * @return {Array}             New layout.\r\n   */\r\n  findOrGenerateResponsiveLayout(layouts, breakpoints, breakpoint, lastBreakpoint, cols, verticalCompact) {\r\n    // If it already exists, just return it.\r\n    if (layouts[breakpoint]) return layouts[breakpoint];\r\n    // Find or generate the next layout\r\n    var layout = layouts[lastBreakpoint];\r\n    var breakpointsSorted = responsiveUtils.sortBreakpoints(breakpoints);\r\n    var breakpointsAbove = breakpointsSorted.slice(breakpointsSorted.indexOf(breakpoint));\r\n    for (var i = 0, len = breakpointsAbove.length; i < len; i++) {\r\n      var b = breakpointsAbove[i];\r\n      if (layouts[b]) {\r\n        layout = layouts[b];\r\n        break;\r\n      }\r\n    }\r\n    layout = JSON.parse(JSON.stringify(layout || [])); // clone layout so we don't modify existing items\r\n    return utils.compact(utils.correctBounds(layout, {cols: cols}), verticalCompact);\r\n  },\r\n\r\n\r\n  /**\r\n   * Given breakpoints, return an array of breakpoints sorted by width. This is usually\r\n   * e.g. ['xxs', 'xs', 'sm', ...]\r\n   *\r\n   * @param  {Object} breakpoints Key/value pair of breakpoint names to widths.\r\n   * @return {Array}              Sorted breakpoints.\r\n   */\r\n  sortBreakpoints(breakpoints) {\r\n    var keys = Object.keys(breakpoints);\r\n    return keys.sort(function(a, b) {\r\n      return breakpoints[a] - breakpoints[b];\r\n    });\r\n  }\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** E:/DEV/OpenSource/react-grid-layout/lib/responsiveUtils.js\n **/","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-equal/index.js\n ** module id = 16\n ** module chunks = 0\n **/","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-equal/lib/is_arguments.js\n ** module id = 17\n ** module chunks = 0\n **/","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/deep-equal/lib/keys.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nvar React = require('react');\nvar emptyFunction = function(){};\nvar assign = require('object-assign');\nvar classNames = require('classnames');\nvar browserPrefix = require('./getPrefix')();\n\n//\n// Helpers. See Element definition below this section.\n//\n\nfunction createUIEvent(draggable) {\n  // State changes are often (but not always!) async. We want the latest value.\n  var state = draggable._pendingState || draggable.state;\n  return {\n    node: draggable.getDOMNode(),\n    position: {\n      top: state.clientY,\n      left: state.clientX\n    }\n  };\n}\n\nfunction canDragX(draggable) {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nfunction canDragY(draggable) {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\nfunction isFunction(func) {\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nfunction findInArray(array, callback) {\n  for (var i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nvar matchesSelectorFunc = '';\nfunction matchesSelector(el, selector) {\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = findInArray([\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector'\n    ], function(method){\n      return isFunction(el[method]);\n    });\n  }\n\n  return el[matchesSelectorFunc].call(el, selector);\n}\n\n/**\n * simple abstraction for dragging events names\n * */\nvar eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    end: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    end: 'mouseup'\n  }\n};\n\n// Default to mouse events\nvar dragEventFor = eventsFor.mouse;\n\n/**\n * get {clientX, clientY} positions of control\n * */\nfunction getControlPosition(e) {\n  var position = (e.targetTouches && e.targetTouches[0]) || e;\n  return {\n    clientX: position.clientX,\n    clientY: position.clientY\n  };\n}\n\nfunction addEvent(el, event, handler) {\n  if (!el) { return; }\n  if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else if (el.addEventListener) {\n    el.addEventListener(event, handler, true);\n  } else {\n    el['on' + event] = handler;\n  }\n}\n\nfunction removeEvent(el, event, handler) {\n  if (!el) { return; }\n  if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else if (el.removeEventListener) {\n    el.removeEventListener(event, handler, true);\n  } else {\n    el['on' + event] = null;\n  }\n}\n\nfunction outerHeight(node) {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  var height = node.clientHeight;\n  var computedStyle = window.getComputedStyle(node);\n  height += int(computedStyle.borderTopWidth);\n  height += int(computedStyle.borderBottomWidth);\n  return height;\n}\n\nfunction outerWidth(node) {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  var width = node.clientWidth;\n  var computedStyle = window.getComputedStyle(node);\n  width += int(computedStyle.borderLeftWidth);\n  width += int(computedStyle.borderRightWidth);\n  return width;\n}\nfunction innerHeight(node) {\n  var height = node.clientHeight;\n  var computedStyle = window.getComputedStyle(node);\n  height -= int(computedStyle.paddingTop);\n  height -= int(computedStyle.paddingBottom);\n  return height;\n}\n\nfunction innerWidth(node) {\n  var width = node.clientWidth;\n  var computedStyle = window.getComputedStyle(node);\n  width -= int(computedStyle.paddingLeft);\n  width -= int(computedStyle.paddingRight);\n  return width;\n}\n\nfunction isNum(num) {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nfunction int(a) {\n  return parseInt(a, 10);\n}\n\nfunction getBoundPosition(draggable, clientX, clientY) {\n  var bounds = JSON.parse(JSON.stringify(draggable.props.bounds));\n  var node = draggable.getDOMNode();\n  var parent = node.parentNode;\n\n  if (bounds === 'parent') {\n    var nodeStyle = window.getComputedStyle(node);\n    var parentStyle = window.getComputedStyle(parent);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + int(parentStyle.paddingLeft) +\n            int(nodeStyle.borderLeftWidth) + int(nodeStyle.marginLeft),\n      top: -node.offsetTop + int(parentStyle.paddingTop) +\n            int(nodeStyle.borderTopWidth) + int(nodeStyle.marginTop),\n      right: innerWidth(parent) - outerWidth(node) - node.offsetLeft,\n      bottom: innerHeight(parent) - outerHeight(node) - node.offsetTop\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if (isNum(bounds.right)) clientX = Math.min(clientX, bounds.right);\n  if (isNum(bounds.bottom)) clientY = Math.min(clientY, bounds.bottom);\n\n  // But above left and top limits.\n  if (isNum(bounds.left)) clientX = Math.max(clientX, bounds.left);\n  if (isNum(bounds.top)) clientY = Math.max(clientY, bounds.top);\n\n  return [clientX, clientY];\n}\n\nfunction snapToGrid(grid, pendingX, pendingY) {\n  var x = Math.round(pendingX / grid[0]) * grid[0];\n  var y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\n// Useful for preventing blue highlights all over everything when dragging.\nvar userSelectStyle = ';user-select: none;';\nif (browserPrefix) {\n  userSelectStyle += '-' + browserPrefix.toLowerCase() + '-user-select: none;';\n}\n\nfunction addUserSelectStyles(draggable) {\n  if (!draggable.props.enableUserSelectHack) return;\n  var style = document.body.getAttribute('style') || '';\n  document.body.setAttribute('style', style + userSelectStyle);\n}\n\nfunction removeUserSelectStyles(draggable) {\n  if (!draggable.props.enableUserSelectHack) return;\n  var style = document.body.getAttribute('style') || '';\n  document.body.setAttribute('style', style.replace(userSelectStyle, ''));\n}\n\nfunction createCSSTransform(style) {\n  // Replace unitless items with px\n  var x = style.x + 'px';\n  var y = style.y + 'px';\n  var out = {transform: 'translate(' + x + ',' + y + ')'};\n  // Add single prefixed property as well\n  if (browserPrefix) {\n    out[browserPrefix + 'Transform'] = out.transform;\n  }\n  return out;\n}\n\nfunction createSVGTransform(args) {\n  return 'translate(' + args.x + ',' + args.y + ')';\n}\n\n//\n// End Helpers.\n//\n\n//\n// Define <Draggable>\n//\n\nmodule.exports = React.createClass({\n  displayName: 'Draggable',\n\n  propTypes: {\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     *\n     * Defaults to 'both'.\n     */\n    axis: React.PropTypes.oneOf(['both', 'x', 'y']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   var App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: React.PropTypes.oneOfType([\n      React.PropTypes.shape({\n        left: React.PropTypes.Number,\n        right: React.PropTypes.Number,\n        top: React.PropTypes.Number,\n        bottom: React.PropTypes.Number\n      }),\n      React.PropTypes.oneOf(['parent', false])\n    ]),\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: React.PropTypes.bool,\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   var App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: React.PropTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   var App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *            <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: React.PropTypes.string,\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   var App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable grid={[25, 25]}>\n     *                   <div>I snap to a 25 x 25 grid</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    grid: React.PropTypes.arrayOf(React.PropTypes.number),\n\n    /**\n     * `start` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      var App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable start={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    start: React.PropTypes.shape({\n      x: React.PropTypes.number,\n      y: React.PropTypes.number\n    }),\n\n    /**\n     * `moveOnStartChange`, if true (default false) will move the element if the `start`\n     * property changes.\n     */\n    moveOnStartChange: React.PropTypes.bool,\n\n\n    /**\n     * `zIndex` specifies the zIndex to use while dragging.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   var App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable zIndex={100}>\n     *                   <div>I have a zIndex</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    zIndex: React.PropTypes.number,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onStart: React.PropTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onDrag: React.PropTypes.func,\n\n    /**\n     * Called when dragging stops.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onStop: React.PropTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (due to that there's internal use of onMouseDown)\n     */\n    onMouseDown: React.PropTypes.func,\n  },\n\n  componentWillReceiveProps: function(newProps) {\n    // React to changes in the 'start' param.\n    if (newProps.moveOnStartChange && newProps.start) {\n      this.setState(this.getInitialState(newProps));\n    }\n  },\n\n  componentDidMount: function() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if( React.findDOMNode(this) instanceof SVGElement) {\n        this.setState({ isElementSVG: true });\n    }\n  },\n\n  componentWillUnmount: function() {\n    // Remove any leftover event handlers\n    removeEvent(document, dragEventFor.move, this.handleDrag);\n    removeEvent(document, dragEventFor.end, this.handleDragEnd);\n    removeUserSelectStyles(this);\n  },\n\n  getDefaultProps: function () {\n    return {\n      axis: 'both',\n      bounds: false,\n      handle: null,\n      cancel: null,\n      grid: null,\n      moveOnStartChange: false,\n      start: {x: 0, y: 0},\n      zIndex: NaN,\n      enableUserSelectHack: true,\n      onStart: emptyFunction,\n      onDrag: emptyFunction,\n      onStop: emptyFunction,\n      onMouseDown: emptyFunction\n    };\n  },\n\n  getInitialState: function (props) {\n    // Handle call from CWRP\n    var currentState = this.state;\n    props = props || this.props;\n    return {\n      // Whether or not we are currently dragging.\n      dragging: false,\n\n      // Offset between start top/left and mouse top/left while dragging.\n      offsetX: 0, offsetY: 0,\n\n      // Current transform x and y.\n      clientX: props.start.x, clientY: props.start.y,\n\n      // Determines if the element is an svg or not. Default to false.\n      isElementSVG: currentState && currentState.isElementSVG !== undefined ?\n        currentState.isElementSVG :\n        false\n    };\n  },\n\n  handleDragStart: function (e) {\n    // Set touch identifier in component state if this is a touch event\n    if(e.targetTouches){\n      this.setState({touchIdentifier: e.targetTouches[0].identifier});\n    }\n\n    // Make it possible to attach event handlers on top of this one\n    this.props.onMouseDown(e);\n\n    // Short circuit if handle or cancel prop was provided and selector doesn't match\n    if ((this.props.handle && !matchesSelector(e.target, this.props.handle)) ||\n      (this.props.cancel && matchesSelector(e.target, this.props.cancel))) {\n      return;\n    }\n\n    // Call event handler. If it returns explicit false, cancel.\n    var shouldStart = this.props.onStart(e, createUIEvent(this));\n    if (shouldStart === false) return;\n\n    var dragPoint = getControlPosition(e);\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    addUserSelectStyles(this);\n\n    // Initiate dragging. Set the current x and y as offsets\n    // so we know how much we've moved during the drag. This allows us\n    // to drag elements around even if they have been moved, without issue.\n    this.setState({\n      dragging: true,\n      offsetX: dragPoint.clientX - this.state.clientX,\n      offsetY: dragPoint.clientY - this.state.clientY,\n      scrollX: document.body.scrollLeft,\n      scrollY: document.body.scrollTop\n    });\n\n\n    // Add event handlers\n    addEvent(document, 'scroll', this.handleScroll);\n    addEvent(document, dragEventFor.move, this.handleDrag);\n    addEvent(document, dragEventFor.end, this.handleDragEnd);\n  },\n\n  handleDragEnd: function (e) {\n    // Short circuit if not currently dragging\n    if (!this.state.dragging) {\n      return;\n    }\n\n    // Short circuit if this is not the correct touch event\n    if(e.changedTouches && (e.changedTouches[0].identifier != this.state.touchIdentifier)){\n     return;\n    }\n\n    removeUserSelectStyles(this);\n\n    // Turn off dragging\n    this.setState({\n      dragging: false\n    });\n\n    // Call event handler\n    this.props.onStop(e, createUIEvent(this));\n\n    // Remove event handlers\n    removeEvent(document, 'scroll', this.handleScroll);\n    removeEvent(document, dragEventFor.move, this.handleDrag);\n    removeEvent(document, dragEventFor.end, this.handleDragEnd);\n  },\n\n  handleDrag: function (e) {\n    // Return if this is a touch event, but not the correct one for this element\n    if(e.targetTouches && (e.targetTouches[0].identifier != this.state.touchIdentifier)){\n      return;\n    }\n    var dragPoint = getControlPosition(e);\n\n    // Calculate X and Y\n    var clientX = dragPoint.clientX - this.state.offsetX;\n    var clientY = dragPoint.clientY - this.state.offsetY;\n\n    // Snap to grid if prop has been provided\n    if (Array.isArray(this.props.grid)) {\n      var coords = snapToGrid(this.props.grid, clientX, clientY);\n      clientX = coords[0];\n      clientY = coords[1];\n    }\n\n    if (this.props.bounds) {\n      var pos = getBoundPosition(this, clientX, clientY);\n      clientX = pos[0];\n      clientY = pos[1];\n    }\n\n    // Call event handler. If it returns explicit false, cancel.\n    var shouldUpdate = this.props.onDrag(e, createUIEvent(this));\n    if (shouldUpdate === false) return this.handleDragEnd({});\n\n    // Update transform\n    this.setState({\n      clientX: clientX,\n      clientY: clientY\n    });\n  },\n\n  handleScroll: function(e) {\n    var s = this.state, x = document.body.scrollLeft, y = document.body.scrollTop;\n    var offsetX = x - s.scrollX, offsetY = y - s.scrollY;\n    this.setState({\n      scrollX: x,\n      scrollY: y,\n      clientX: s.clientX + offsetX,\n      clientY: s.clientY + offsetY,\n      offsetX: s.offsetX - offsetX,\n      offsetY: s.offsetY - offsetY\n    });\n  },\n\n  onMouseDown: function(ev) {\n    // Prevent 'ghost click' which happens 300ms after touchstart if the event isn't cancelled.\n    // We don't cancel the event on touchstart because of #37; we might want to make a scrollable item draggable.\n    // More on ghost clicks: http://ariatemplates.com/blog/2014/05/ghost-clicks-in-mobile-browsers/\n    if (dragEventFor === eventsFor.touch) {\n      return ev.preventDefault();\n    }\n\n    return this.handleDragStart.apply(this, arguments);\n  },\n\n  onTouchStart: function(ev) {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStart.apply(this, arguments);\n  },\n\n  // Intended for use by a parent component. Resets internal state on this component. Useful for\n  // <Resizable> and other components in case this element is manually resized and start/moveOnStartChange\n  // don't work for you.\n  resetState: function() {\n    this.setState({\n      offsetX: 0, offsetY: 0, clientX: 0, clientY: 0\n    });\n  },\n\n  render: function () {\n    // Create style object. We extend from existing styles so we don't\n    // remove anything already set (like background, color, etc).\n    var childStyle = this.props.children.props.style || {};\n\n    // Add a CSS transform to move the element around. This allows us to move the element around\n    // without worrying about whether or not it is relatively or absolutely positioned.\n    // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n    // has a clean slate.\n    var transform = this.state.isElementSVG ? null :\n      createCSSTransform({\n          // Set left if horizontal drag is enabled\n          x: canDragX(this) ?\n            this.state.clientX :\n            this.props.start.x,\n\n          // Set top if vertical drag is enabled\n          y: canDragY(this) ?\n            this.state.clientY :\n            this.props.start.y\n        });\n\n\n    // This is primarily for IE as it ignores the CSS transform applied above\n    // and only respects the real transform attribute.\n    var svgTransform = !this.state.isElementSVG ? null :\n        createSVGTransform({\n          // Set left if horizontal drag is enabled\n          x: canDragX(this) ?\n            this.state.clientX :\n            this.props.start.x,\n\n          // Set top if vertical drag is enabled\n          y: canDragY(this) ?\n            this.state.clientY :\n            this.props.start.y\n        });\n\n\n    // Workaround IE pointer events; see #51\n    // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n    var touchHacks = {\n      touchAction: 'none'\n    };\n\n    var style = assign({}, childStyle, transform, touchHacks);\n\n    // Set zIndex if currently dragging and prop has been provided\n    if (this.state.dragging && !isNaN(this.props.zIndex)) {\n      style.zIndex = this.props.zIndex;\n    }\n\n    var className = classNames((this.props.children.props.className || ''), 'react-draggable', {\n      'react-draggable-dragging': this.state.dragging,\n      'react-draggable-dragged': this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return React.cloneElement(React.Children.only(this.props.children), {\n      style: style,\n      transform: svgTransform,\n      className: className,\n\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      onMouseUp: this.handleDragEnd,\n      onTouchEnd: this.handleDragEnd\n    });\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-draggable/lib/draggable.js\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = function() {\n  if (typeof window === 'undefined') return '';\n  // Thanks David Walsh\n  var styles = window.getComputedStyle(document.documentElement, ''),\n  pre = (Array.prototype.slice\n        .call(styles)\n        .join('')\n        .match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o'])\n      )[1];\n  // 'ms' is not titlecased\n  if(pre === undefined || pre === null) return '';\n  if (pre === 'ms') return pre;\n  return pre.slice(0, 1).toUpperCase() + pre.slice(1);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-draggable/lib/getPrefix.js\n ** module id = 20\n ** module chunks = 0\n **/","/*!\n  Copyright (c) 2015 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses += ' ' + arg;\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses += ' ' + classNames.apply(null, arg);\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses += ' ' + key;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.substr(1);\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-draggable/~/classnames/index.js\n ** module id = 21\n ** module chunks = 0\n **/","/* eslint-disable no-unused-vars */\n'use strict';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-draggable/~/object-assign/index.js\n ** module id = 22\n ** module chunks = 0\n **/","'use strict';\n\nvar _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };\n\nvar _slicedToArray = function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar React = require('react');\nvar Resizable = require('./Resizable');\nvar PureRenderMixin = require('react/lib/ReactComponentWithPureRenderMixin');\n\n// An example use of Resizable.\nvar ResizableBox = module.exports = React.createClass({\n  displayName: 'ResizableBox',\n  mixins: [PureRenderMixin],\n\n  propTypes: {\n    lockAspectRatio: React.PropTypes.bool\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      lockAspectRatio: false,\n      handleSize: [20, 20]\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      width: this.props.width,\n      height: this.props.height,\n      aspectRatio: this.props.width / this.props.height\n    };\n  },\n\n  onResize: function onResize(event, _ref) {\n    var _this = this;\n\n    var element = _ref.element;\n    var size = _ref.size;\n    var width = size.width;\n    var height = size.height;\n\n    var widthChanged = width !== this.state.width,\n        heightChanged = height !== this.state.height;\n    if (!widthChanged && !heightChanged) {\n      return;\n    }if (this.props.lockAspectRatio) {\n      var _preserveAspectRatio = this.preserveAspectRatio(width, height);\n\n      var _preserveAspectRatio2 = _slicedToArray(_preserveAspectRatio, 2);\n\n      width = _preserveAspectRatio2[0];\n      height = _preserveAspectRatio2[1];\n    }\n\n    this.setState({ width: width, height: height }, function () {\n      if (_this.props.onResize) {\n        _this.props.onResize(event, { element: element, size: { width: width, height: height } });\n      }\n    });\n  },\n\n  // If you do this, be careful of constraints\n  preserveAspectRatio: function preserveAspectRatio(width, height) {\n    var min = this.props.minConstraints;\n    var max = this.props.maxConstraints;\n\n    height = width / this.state.aspectRatio;\n    width = height * this.state.aspectRatio;\n\n    if (min) {\n      width = Math.max(min[0], width);\n      height = Math.max(min[1], height);\n    }\n    if (max) {\n      width = Math.min(max[0], width);\n      height = Math.min(max[1], height);\n    }\n    return [width, height];\n  },\n\n  render: function render() {\n    // Basic wrapper around a Resizable instance.\n    // If you use Resizable directly, you are responsible for updating the component\n    // with a new width and height.\n    var _props = this.props;\n    var handleSize = _props.handleSize;\n    var minConstraints = _props.minConstraints;\n    var maxConstraints = _props.maxConstraints;\n\n    var props = _objectWithoutProperties(_props, ['handleSize', 'minConstraints', 'maxConstraints']);\n\n    return React.createElement(\n      Resizable,\n      {\n        minConstraints: minConstraints,\n        maxConstraints: maxConstraints,\n        handleSize: handleSize,\n        width: this.state.width,\n        height: this.state.height,\n        onResizeStart: this.props.onResizeStart,\n        onResize: this.onResize,\n        onResizeStop: this.props.onResizeStop,\n        draggableOpts: this.props.draggableOpts\n      },\n      React.createElement(\n        'div',\n        _extends({ style: { width: this.state.width + 'px', height: this.state.height + 'px' } }, props),\n        this.props.children\n      )\n    );\n  }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-resizable/build/ResizableBox.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\nvar assign = require('object-assign');\nvar React = require('react');\n\nmodule.exports = function cloneElement(element, props) {\n  if (props.style && element.props.style) {\n    props.style = assign({}, element.props.style, props.style);\n  }\n  if (props.className && element.props.className) {\n    props.className = element.props.className + ' ' + props.className;\n  }\n  return React.cloneElement(element, props);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-resizable/build/cloneElement.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\nmodule.exports = function() {\n  throw new Error(\"Don't instantiate Resizable directly! Use require('react-resizable').Resizable\");\n};\n\nmodule.exports.Resizable = require('./build/Resizable');\nmodule.exports.ResizableBox = require('./build/ResizableBox');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-resizable/index.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactContext\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyObject = require(\"./emptyObject\");\nvar warning = require(\"./warning\");\n\nvar didWarn = false;\n\n/**\n * Keeps track of the current context.\n *\n * The context is automatically passed down the component ownership hierarchy\n * and is accessible via `this.context` on ReactCompositeComponents.\n */\nvar ReactContext = {\n\n  /**\n   * @internal\n   * @type {object}\n   */\n  current: emptyObject,\n\n  /**\n   * Temporarily extends the current context while executing scopedCallback.\n   *\n   * A typical use case might look like\n   *\n   *  render: function() {\n   *    var children = ReactContext.withContext({foo: 'foo'}, () => (\n   *\n   *    ));\n   *    return <div>{children}</div>;\n   *  }\n   *\n   * @param {object} newContext New context to merge into the existing context\n   * @param {function} scopedCallback Callback to run with the new context\n   * @return {ReactComponent|array<ReactComponent>}\n   */\n  withContext: function(newContext, scopedCallback) {\n    if (\"production\" !== process.env.NODE_ENV) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        didWarn,\n        'withContext is deprecated and will be removed in a future version. ' +\n        'Use a wrapper component with getChildContext instead.'\n      ) : null);\n\n      didWarn = true;\n    }\n\n    var result;\n    var previousContext = ReactContext.current;\n    ReactContext.current = assign({}, previousContext, newContext);\n    try {\n      result = scopedCallback();\n    } finally {\n      ReactContext.current = previousContext;\n    }\n    return result;\n  }\n\n};\n\nmodule.exports = ReactContext;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactContext.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n *\n * The depth indicate how many composite components are above this render level.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCurrentOwner.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactContext = require(\"./ReactContext\");\nvar ReactCurrentOwner = require(\"./ReactCurrentOwner\");\n\nvar assign = require(\"./Object.assign\");\nvar warning = require(\"./warning\");\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true\n};\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} object\n * @param {string} key\n */\nfunction defineWarningProperty(object, key) {\n  Object.defineProperty(object, key, {\n\n    configurable: false,\n    enumerable: true,\n\n    get: function() {\n      if (!this._store) {\n        return null;\n      }\n      return this._store[key];\n    },\n\n    set: function(value) {\n      (\"production\" !== process.env.NODE_ENV ? warning(\n        false,\n        'Don\\'t set the %s property of the React element. Instead, ' +\n        'specify the correct value when initially creating the element.',\n        key\n      ) : null);\n      this._store[key] = value;\n    }\n\n  });\n}\n\n/**\n * This is updated to true if the membrane is successfully created.\n */\nvar useMutationMembrane = false;\n\n/**\n * Warn for mutations.\n *\n * @internal\n * @param {object} element\n */\nfunction defineMutationMembrane(prototype) {\n  try {\n    var pseudoFrozenProperties = {\n      props: true\n    };\n    for (var key in pseudoFrozenProperties) {\n      defineWarningProperty(prototype, key);\n    }\n    useMutationMembrane = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {string|object} ref\n * @param {*} key\n * @param {*} props\n * @internal\n */\nvar ReactElement = function(type, key, ref, owner, context, props) {\n  // Built-in properties that belong on the element\n  this.type = type;\n  this.key = key;\n  this.ref = ref;\n\n  // Record the component responsible for creating this element.\n  this._owner = owner;\n\n  // TODO: Deprecate withContext, and then the context becomes accessible\n  // through the owner.\n  this._context = context;\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // The validation flag and props are currently mutative. We put them on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    this._store = {props: props, originalProps: assign({}, props)};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    try {\n      Object.defineProperty(this._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true\n      });\n    } catch (x) {\n    }\n    this._store.validated = false;\n\n    // We're not allowed to set props directly on the object so we early\n    // return and rely on the prototype membrane to forward to the backing\n    // store.\n    if (useMutationMembrane) {\n      Object.freeze(this);\n      return;\n    }\n  }\n\n  this.props = props;\n};\n\n// We intentionally don't expose the function on the constructor property.\n// ReactElement should be indistinguishable from a plain object.\nReactElement.prototype = {\n  _isReactElement: true\n};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  defineMutationMembrane(ReactElement.prototype);\n}\n\nReactElement.createElement = function(type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new ReactElement(\n    type,\n    key,\n    ref,\n    ReactCurrentOwner.current,\n    ReactContext.current,\n    props\n  );\n};\n\nReactElement.createFactory = function(type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. <Foo />.type === Foo.type.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceProps = function(oldElement, newProps) {\n  var newElement = new ReactElement(\n    oldElement.type,\n    oldElement.key,\n    oldElement.ref,\n    oldElement._owner,\n    oldElement._context,\n    newProps\n  );\n\n  if (\"production\" !== process.env.NODE_ENV) {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n  return newElement;\n};\n\nReactElement.cloneElement = function(element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) &&\n          !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return new ReactElement(\n    element.type,\n    key,\n    ref,\n    owner,\n    element._context,\n    props\n  );\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function(object) {\n  // ReactTestUtils is often used outside of beforeEach where as React is\n  // within it. This leads to two different instances of React on the same\n  // page. To identify a element from a different React instance we use\n  // a flag instead of an instanceof check.\n  var isElement = !!(object && object._isReactElement);\n  // if (isElement && !(object instanceof ReactElement)) {\n  // This is an indicator that you're using multiple versions of React at the\n  // same time. This will screw with ownership and stuff. Fix it, please.\n  // TODO: We could possibly warn here.\n  // }\n  return isElement;\n};\n\nmodule.exports = ReactElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElement.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTransferer\n */\n\n'use strict';\n\nvar assign = require(\"./Object.assign\");\nvar emptyFunction = require(\"./emptyFunction\");\nvar joinClasses = require(\"./joinClasses\");\n\n/**\n * Creates a transfer strategy that will merge prop values using the supplied\n * `mergeStrategy`. If a prop was previously unset, this just sets it.\n *\n * @param {function} mergeStrategy\n * @return {function}\n */\nfunction createTransferStrategy(mergeStrategy) {\n  return function(props, key, value) {\n    if (!props.hasOwnProperty(key)) {\n      props[key] = value;\n    } else {\n      props[key] = mergeStrategy(props[key], value);\n    }\n  };\n}\n\nvar transferStrategyMerge = createTransferStrategy(function(a, b) {\n  // `merge` overrides the first object's (`props[key]` above) keys using the\n  // second object's (`value`) keys. An object's style's existing `propA` would\n  // get overridden. Flip the order here.\n  return assign({}, b, a);\n});\n\n/**\n * Transfer strategies dictate how props are transferred by `transferPropsTo`.\n * NOTE: if you add any more exceptions to this list you should be sure to\n * update `cloneWithProps()` accordingly.\n */\nvar TransferStrategies = {\n  /**\n   * Never transfer `children`.\n   */\n  children: emptyFunction,\n  /**\n   * Transfer the `className` prop by merging them.\n   */\n  className: createTransferStrategy(joinClasses),\n  /**\n   * Transfer the `style` prop (which is an object) by merging them.\n   */\n  style: transferStrategyMerge\n};\n\n/**\n * Mutates the first argument by transferring the properties from the second\n * argument.\n *\n * @param {object} props\n * @param {object} newProps\n * @return {object}\n */\nfunction transferInto(props, newProps) {\n  for (var thisKey in newProps) {\n    if (!newProps.hasOwnProperty(thisKey)) {\n      continue;\n    }\n\n    var transferStrategy = TransferStrategies[thisKey];\n\n    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {\n      transferStrategy(props, thisKey, newProps[thisKey]);\n    } else if (!props.hasOwnProperty(thisKey)) {\n      props[thisKey] = newProps[thisKey];\n    }\n  }\n  return props;\n}\n\n/**\n * ReactPropTransferer are capable of transferring props to another component\n * using a `transferPropsTo` method.\n *\n * @class ReactPropTransferer\n */\nvar ReactPropTransferer = {\n\n  /**\n   * Merge two props objects using TransferStrategies.\n   *\n   * @param {object} oldProps original props (they take precedence)\n   * @param {object} newProps new props to merge in\n   * @return {object} a new object containing both sets of props merged.\n   */\n  mergeProps: function(oldProps, newProps) {\n    return transferInto(assign({}, oldProps), newProps);\n  }\n\n};\n\nmodule.exports = ReactPropTransferer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTransferer.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule cloneWithProps\n */\n\n'use strict';\n\nvar ReactElement = require(\"./ReactElement\");\nvar ReactPropTransferer = require(\"./ReactPropTransferer\");\n\nvar keyOf = require(\"./keyOf\");\nvar warning = require(\"./warning\");\n\nvar CHILDREN_PROP = keyOf({children: null});\n\n/**\n * Sometimes you want to change the props of a child passed to you. Usually\n * this is to add a CSS class.\n *\n * @param {ReactElement} child child element you'd like to clone\n * @param {object} props props you'd like to modify. className and style will be\n * merged automatically.\n * @return {ReactElement} a clone of child with props merged in.\n */\nfunction cloneWithProps(child, props) {\n  if (\"production\" !== process.env.NODE_ENV) {\n    (\"production\" !== process.env.NODE_ENV ? warning(\n      !child.ref,\n      'You are calling cloneWithProps() on a child with a ref. This is ' +\n      'dangerous because you\\'re creating a new child which will not be ' +\n      'added as a ref to its parent.'\n    ) : null);\n  }\n\n  var newProps = ReactPropTransferer.mergeProps(props, child.props);\n\n  // Use `child.props.children` if it is provided.\n  if (!newProps.hasOwnProperty(CHILDREN_PROP) &&\n      child.props.hasOwnProperty(CHILDREN_PROP)) {\n    newProps.children = child.props.children;\n  }\n\n  // The current API doesn't retain _owner and _context, which is why this\n  // doesn't use ReactElement.cloneAndReplaceProps.\n  return ReactElement.createElement(child.type, newProps);\n}\n\nmodule.exports = cloneWithProps;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/cloneWithProps.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n\"use strict\";\n\nvar emptyObject = {};\n\nif (\"production\" !== process.env.NODE_ENV) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/emptyObject.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule joinClasses\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Combines multiple className strings into one.\n * http://jsperf.com/joinclasses-args-vs-array\n *\n * @param {...?string} classes\n * @return {string}\n */\nfunction joinClasses(className/*, ... */) {\n  if (!className) {\n    className = '';\n  }\n  var nextClass;\n  var argLength = arguments.length;\n  if (argLength > 1) {\n    for (var ii = 1; ii < argLength; ii++) {\n      nextClass = arguments[ii];\n      if (nextClass) {\n        className = (className ? className + ' ' : '') + nextClass;\n      }\n    }\n  }\n  return className;\n}\n\nmodule.exports = joinClasses;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/joinClasses.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without loosing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\nvar keyOf = function(oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\n\nmodule.exports = keyOf;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/keyOf.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n */\n\n'use strict';\n\n/**\n * Performs equality by iterating through keys on an object and returning\n * false when any key has values which are not strictly equal between\n * objA and objB. Returns true when the values of all keys are strictly equal.\n *\n * @return {boolean}\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n  var key;\n  // Test for A's keys different from B.\n  for (key in objA) {\n    if (objA.hasOwnProperty(key) &&\n        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {\n      return false;\n    }\n  }\n  // Test for B's keys missing from A.\n  for (key in objB) {\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/shallowEqual.js\n ** module id = 34\n ** module chunks = 0\n **/"],"sourceRoot":""}